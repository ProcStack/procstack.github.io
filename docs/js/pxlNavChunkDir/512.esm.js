export const id=512;export const ids=[512,535];export const modules={535:(t,e,s)=>{s.r(e),s.d(e,{ExtensionBase:()=>ExtensionBase});class ExtensionBase{constructor(){this.active=!1,this.verbose=!1,this.callbacks={}}init(){}start(){this.active=!0}pause(){this.stop()}stop(){this.active=!1}subscribe(t,e){this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push(e)}unsubscribe(t,e){this.callbacks[t]&&(this.callbacks[t]=this.callbacks[t].filter((t=>t!==e)))}emit(t,e){this.callbacks[t]&&this.callbacks[t].forEach((t=>t(e)))}destroy(){this.disable()}}},512:(t,e,s)=>{s.r(e),s.d(e,{PoseEngine:()=>PoseEngine});var n=s(535);function asyncGeneratorStep(t,e,s,n,i,o,a){try{var r=t[o](a),c=r.value}catch(t){return void s(t)}r.done?e(c):Promise.resolve(c).then(n,i)}class PoseEngine extends n.ExtensionBase{constructor(t){if(this.active=!1,this.verbose=!1,"MediaPipe"!==t)throw new Error("Unknown pose estimation '"+t+"' model");this.model=new MediaPipePose}estimatePose(t){var e=this;return function _asyncToGenerator(t){return function(){var e=this,s=arguments;return new Promise((function(n,i){var o=t.apply(e,s);function _next(t){asyncGeneratorStep(o,n,i,_next,_throw,"next",t)}function _throw(t){asyncGeneratorStep(o,n,i,_next,_throw,"throw",t)}_next(void 0)}))}}((function*(){return yield e.model.estimate(t)}))()}}}};