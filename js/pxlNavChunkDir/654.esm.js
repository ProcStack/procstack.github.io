export const id=654;export const ids=[535,654];export const modules={535:(i,s,t)=>{t.r(s),t.d(s,{ExtensionBase:()=>ExtensionBase});class ExtensionBase{constructor(){this.active=!1,this.verbose=!1,this.callbacks={}}init(){}start(){this.active=!0}pause(){this.stop()}stop(){this.active=!1}subscribe(i,s){this.callbacks[i]||(this.callbacks[i]=[]),this.callbacks[i].push(s)}unsubscribe(i,s){this.callbacks[i]&&(this.callbacks[i]=this.callbacks[i].filter((i=>i!==s)))}emit(i,s){this.callbacks[i]&&this.callbacks[i].forEach((i=>i(s)))}destroy(){this.disable()}}},654:(i,s,t)=>{t.r(s),t.d(s,{WebCamera:()=>WebCamera});var e=t(535);class WebCamera extends e.ExtensionBase{constructor(){this.video=document.createElement("video"),this.stream=null,this.isInitialized=!1,this.active=!1}init(i){navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then((s=>{this.stream=s,this.video.srcObject=this.stream,this.video.play(),this.isInitialized=!0,console.log("WebCamera Initialized"),i&&i(null)})).catch((s=>{console.error("Error initializing WebCamera:",s),i&&i(s)}))}start(i){this.isInitialized?(this.active=!0,console.log("WebCamera Started"),i&&i(null)):(console.error("WebCamera is not initialized"),i&&i(new Error("WebCamera is not initialized")))}pause(i){this.stop(i)}stop(i){this.stream?(this.stream.getTracks().forEach((i=>i.stop())),this.video.srcObject=null,this.isInitialized=!1,console.log("WebCamera Stopped"),this.active=!1,i&&i(null)):i&&i(new Error("WebCamera is not initialized"))}}}};