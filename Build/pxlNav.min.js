var of=Object.create;var Nl=Object.defineProperty;var lf=Object.getOwnPropertyDescriptor;var hf=Object.getOwnPropertyNames;var cf=Object.getPrototypeOf,uf=Object.prototype.hasOwnProperty;var _u=n=>e=>{var t=n[e];if(t)return t();throw new Error("Module not found in bundle: "+e)};var cs=(n,e)=>()=>(n&&(e=n(n=0)),e);var df=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),Yt=(n,e)=>{for(var t in e)Nl(n,t,{get:e[t],enumerable:!0})},pf=(n,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of hf(e))!uf.call(n,s)&&s!==t&&Nl(n,s,{get:()=>e[s],enumerable:!(i=lf(e,s))||i.enumerable});return n};var mf=(n,e,t)=>(t=n!=null?of(cf(n)):{},pf(e||!n||!n.__esModule?Nl(t,"default",{value:n,enumerable:!0}):t,n));var $p={};Yt($p,{ExtensionBase:()=>Ki});var Ki,Kn=cs(()=>{Ki=class{constructor(){this.active=!1,this.verbose=!1,this.callbacks={}}init(){}start(){this.active=!0}pause(){this.stop()}stop(){this.active=!1}subscribe(e,t){this.callbacks[e]||(this.callbacks[e]=[]),this.callbacks[e].push(t)}unsubscribe(e,t){this.callbacks[e]&&(this.callbacks[e]=this.callbacks[e].filter(i=>i!==t))}emit(e,t){this.callbacks[e]&&this.callbacks[e].forEach(i=>i(t))}destroy(){this.disable()}}});var em={};Yt(em,{default:()=>Sl});var Sl,tm=cs(()=>{Kn();Sl=class extends Ki{constructor(e){this.status=!1,this.accessToken="",this.jwtToken="",this.socket=io("https://www.www.com",{transports:["websocket"]})}init(){socket.on("event",e=>{console.log(e)}),socket.on("connect",onConnect),socket.on("disconnect",onDisconnect),socket.on("authenticated",onAuthenticated),socket.on("unauthorized",console.error)}onConnect(){console.log("Successfully connected to the websocket"),socket.emit("authenticate",{method:"jwt",token:this.jwtToken})}onDisconnect(){console.log("Disconnected from websocket"),this.status=!1,onConnect()}onAuthenticated(e){let{channelId:t}=e;console.log(`Successfully connected to channel ${t}`),this.status=!0}}});var im={};Yt(im,{PoseEngine:()=>Hc});var Hc,sm=cs(()=>{Kn();Hc=class extends Ki{constructor(e){switch(this.active=!1,this.verbose=!1,e){case"MediaPipe":this.model=new MediaPipePose;break;default:throw new Error("Unknown pose estimation '"+e+"' model")}}async estimatePose(e){return await this.model.estimate(e)}}});var rm={};Yt(rm,{MediaPipePlugin:()=>Wc});var Wc,nm=cs(()=>{Wc=class n{constructor(){this.workerScriptUrl="./PoseEngine_worker.js",this.worker=null,this.booted=!1}static async loadScriptWithProgress(e,t){return new Promise((i,s)=>{let r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="text",r.onprogress=a=>{if(a.lengthComputable&&typeof t=="function"){let o=Math.round(a.loaded/a.total*100);t(o)}},r.onload=()=>{if(r.status===200){let a=document.createElement("script");a.textContent=r.responseText,document.head.appendChild(a),i()}else s(new Error(`Failed to load script: ${e}`))},r.onerror=()=>s(new Error(`Network error while loading: ${e}`)),r.send()})}async init(e){let t="https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/face_mesh.js";try{console.log("Loading MediaPipe..."),await n.loadScriptWithProgress(t,e),this.worker=new Worker(this.workerScriptUrl),this.booted=!0,console.log("MediaPipe Plugin Initialized")}catch(i){console.error("Error initializing MediaPipePlugin:",i)}}sendMessage(e){if(!this.booted){console.warn("MediaPipePlugin is not initialized.");return}this.worker.postMessage(e)}onMessage(e){if(!this.worker){console.warn("WebWorker not initialized.");return}this.worker.onmessage=t=>e(t.data)}terminateWorker(){this.worker&&(this.worker.terminate(),this.worker=null,console.log("WebWorker terminated."))}}});var am=df(()=>{self.onmessage=async n=>{let{type:e,data:t}=n.data;switch(e){case"processFrame":let i=await poseModel.estimate(imageData);self.postMessage({type:"result",pose:i});break;default:console.warn("Unknown message type:",e)}}});var om={};Yt(om,{WebCamera:()=>jc});var jc,lm=cs(()=>{Kn();jc=class extends Ki{constructor(){this.video=document.createElement("video"),this.stream=null,this.isInitialized=!1,this.active=!1}init(e){navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then(t=>{this.stream=t,this.video.srcObject=this.stream,this.video.play(),this.isInitialized=!0,console.log("WebCamera Initialized"),e&&e(null)}).catch(t=>{console.error("Error initializing WebCamera:",t),e&&e(t)})}start(e){this.isInitialized?(this.active=!0,console.log("WebCamera Started"),e&&e(null)):(console.error("WebCamera is not initialized"),e&&e(new Error("WebCamera is not initialized")))}pause(e){this.stop(e)}stop(e){this.stream?(this.stream.getTracks().forEach(t=>t.stop()),this.video.srcObject=null,this.isInitialized=!1,console.log("WebCamera Stopped"),this.active=!1,e&&e(null)):e&&e(new Error("WebCamera is not initialized"))}}});var n0,Xc=cs(()=>{n0=_u({"./ExtensionBase.js":()=>Promise.resolve().then(()=>(Kn(),$p)),"./Extensions.js":()=>Promise.resolve().then(()=>(qc(),hm)),"./Networking.js":()=>Promise.resolve().then(()=>(tm(),em)),"./PoseEngine.js":()=>Promise.resolve().then(()=>(sm(),im)),"./PoseEngine/MediaPipe.js":()=>Promise.resolve().then(()=>(nm(),rm)),"./PoseEngine/PoseEngine_worker.js":()=>Promise.resolve().then(()=>mf(am())),"./WebCam.js":()=>Promise.resolve().then(()=>(lm(),om))})});var hm={};Yt(hm,{Extensions:()=>Zn});var a0,Zn,qc=cs(()=>{Xc();a0=["PoseEngine"],Zn=class{constructor(){this.plugins={},this.verbose=!1}init(e,t,i,s=!1){!this.plugins[e]||s?this.load(e,(r,a)=>{r?i?i(r):this.verbose&&console.error(r):t&&t(a)}):(this.verbose&&console.log(`Extension ${e} already booted, skipping...`),t&&t(this.plugins[e]))}async load(e,t){if(a0.includes(e))try{let i=await n0(`./${e}.js`),s=new i.default;try{this.boot(e,s)}catch(r){console.error(`Error (2) Booting extension '${e}':`,r)}t&&t(null,s)}catch(i){console.error(`Error (1) Importing / Parsing extension '${e}':`,i),t&&t(err,null)}else{let i=new Error(`Extension ${e} not found`);console.error(i),t&&t(i,null)}}start(e){let t=this.get(e);t&&t.start()}pause(e){let t=this.get(e);t&&t.pause()}stop(e){let t=this.get(e);t&&t.stop()}status(e){let t=this.get(e);return t?t.active:!1}boot(e,t){this.plugins[e]=t,t.init()}get(e){return this.plugins[e]?this.plugins[e]:(console.warn(`Extension ${e} not found`),null)}unload(e){let t=this.get(e);t&&(t.destroy(),delete this.plugins[e])}}});var Fa="171";var ld=0,Eh=1,hd=2;var Co=0,Ah=1,To=2,bi=3,ft=0,At=1,Je=2,Si=0,Bn=1,Bs=2,Ph=3,Rh=4,cd=5,Sr=100,ud=101,dd=102,pd=103,md=104,fd=200,gd=201,vd=202,xd=203,yd=204,_d=205,bd=206,Sd=207,Md=208,wd=209,Cd=210,Td=211,Ed=212,Ad=213,Pd=214,Eo=0,Ao=1,Po=2,On=3,Ro=4,Do=5,Lo=6,Io=7,Rd=0,Dd=1,Ld=2,Hi=0,Id=1,Ud=2,Fd=3,Bd=4,Od=5,kd=6,Nd=7,gh="attached",Gd="detached",Dh=300,Os=301,ks=302,Mr=303,Uo=304,kn=306,_t=1e3,Oi=1001,Ba=1002,rt=1003,$t=1004;var Nn=1005;var Qe=1006,Fo=1007;var Ns=1008;var Mi=1009,Lh=1010,Ih=1011,as=1012,Bo=1013,wi=1014,Ut=1015,zt=1016,Oo=1017,ko=1018,wr=1020,Uh=35902,No=1021,Gn=1022,ut=1023,Go=1024,Vd=1025,Zt=1026,xs=1027,Cr=1028,Vo=1029,zo=1030,Fh=1031;var Bh=1033,Ho=33776,Wo=33777,jo=33778,Xo=33779,Oh=35840,kh=35841,Nh=35842,Gh=35843,Vh=36196,zh=37492,Hh=37496,Wh=37808,jh=37809,Xh=37810,qh=37811,Yh=37812,Kh=37813,Zh=37814,Qh=37815,Jh=37816,$h=37817,ec=37818,tc=37819,ic=37820,sc=37821,qo=36492,rc=36494,nc=36495,zd=36283,ac=36284,oc=36285,lc=36286;var Zr=2300,Oa=2301,Ua=2302,gs=2400,vs=2401,Qr=2402,Hd=2500,Wd=2501;var jd=3201;var Xd=0,qd=1,Gs="",Pt="srgb",Qt="srgb-linear",Jr="linear",Ke="srgb";var fs=7680;var Yd=512,Kd=513,Zd=514,hc=515,Qd=516,Jd=517,$d=518,ep=519,vh=35044,Yo=35048;var cc="300 es",ys=2e3,$r=2001,yi=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});let i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;let i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;let i=this._listeners[e];if(i!==void 0){let s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;let t=this._listeners[e.type];if(t!==void 0){e.target=this;let i=t.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}},Lt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],bu=1234567,ur=Math.PI/180,_s=180/Math.PI;function Wi(){let n=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Lt[255&n]+Lt[n>>8&255]+Lt[n>>16&255]+Lt[n>>24&255]+"-"+Lt[255&e]+Lt[e>>8&255]+"-"+Lt[e>>16&15|64]+Lt[e>>24&255]+"-"+Lt[63&t|128]+Lt[t>>8&255]+"-"+Lt[t>>16&255]+Lt[t>>24&255]+Lt[255&i]+Lt[i>>8&255]+Lt[i>>16&255]+Lt[i>>24&255]).toLowerCase()}function Be(n,e,t){return Math.max(e,Math.min(t,n))}function xh(n,e){return(n%e+e)%e}function qr(n,e,t){return(1-t)*n+t*e}function hr(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function kt(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(4294967295*n);case Uint16Array:return Math.round(65535*n);case Uint8Array:return Math.round(255*n);case Int32Array:return Math.round(2147483647*n);case Int16Array:return Math.round(32767*n);case Int8Array:return Math.round(127*n);default:throw new Error("Invalid component type.")}}var Rt={DEG2RAD:ur,RAD2DEG:_s,generateUUID:Wi,clamp:Be,euclideanModulo:xh,mapLinear:function(n,e,t,i,s){return i+(n-e)*(s-i)/(t-e)},inverseLerp:function(n,e,t){return n!==e?(t-n)/(e-n):0},lerp:qr,damp:function(n,e,t,i){return qr(n,e,1-Math.exp(-t*i))},pingpong:function(n,e=1){return e-Math.abs(xh(n,2*e)-e)},smoothstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*(3-2*n)},smootherstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*n*(n*(6*n-15)+10)},randInt:function(n,e){return n+Math.floor(Math.random()*(e-n+1))},randFloat:function(n,e){return n+Math.random()*(e-n)},randFloatSpread:function(n){return n*(.5-Math.random())},seededRandom:function(n){n!==void 0&&(bu=n);let e=bu+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(n){return n*ur},radToDeg:function(n){return n*_s},isPowerOfTwo:function(n){return(n&n-1)==0&&n!==0},ceilPowerOfTwo:function(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))},floorPowerOfTwo:function(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))},setQuaternionFromProperEuler:function(n,e,t,i,s){let r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),h=r((e+i)/2),c=a((e+i)/2),u=r((e-i)/2),d=a((e-i)/2),m=r((i-e)/2),f=a((i-e)/2);switch(s){case"XYX":n.set(o*c,l*u,l*d,o*h);break;case"YZY":n.set(l*d,o*c,l*u,o*h);break;case"ZXZ":n.set(l*u,l*d,o*c,o*h);break;case"XZX":n.set(o*c,l*f,l*m,o*h);break;case"YXY":n.set(l*m,o*c,l*f,o*h);break;case"ZYZ":n.set(l*f,l*m,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:kt,denormalize:hr},G=class n{constructor(e=0,t=0){n.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6],this.y=s[1]*t+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Be(this.x,e.x,t.x),this.y=Be(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Be(this.x,e,t),this.y=Be(this.y,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Be(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(Be(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),s=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*s+e.x,this.y=r*s+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Ae=class n{constructor(e,t,i,s,r,a,o,l,h){n.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,s,r,a,o,l,h)}set(e,t,i,s,r,a,o,l,h){let c=this.elements;return c[0]=e,c[1]=s,c[2]=o,c[3]=t,c[4]=r,c[5]=l,c[6]=i,c[7]=a,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,s=t.elements,r=this.elements,a=i[0],o=i[3],l=i[6],h=i[1],c=i[4],u=i[7],d=i[2],m=i[5],f=i[8],v=s[0],p=s[3],g=s[6],x=s[1],y=s[4],_=s[7],b=s[2],S=s[5],E=s[8];return r[0]=a*v+o*x+l*b,r[3]=a*p+o*y+l*S,r[6]=a*g+o*_+l*E,r[1]=h*v+c*x+u*b,r[4]=h*p+c*y+u*S,r[7]=h*g+c*_+u*E,r[2]=d*v+m*x+f*b,r[5]=d*p+m*y+f*S,r[8]=d*g+m*_+f*E,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8];return t*a*c-t*o*h-i*r*c+i*o*l+s*r*h-s*a*l}invert(){let e=this.elements,t=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=c*a-o*h,d=o*l-c*r,m=h*r-a*l,f=t*u+i*d+s*m;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);let v=1/f;return e[0]=u*v,e[1]=(s*h-c*i)*v,e[2]=(o*i-s*a)*v,e[3]=d*v,e[4]=(c*t-s*l)*v,e[5]=(s*r-o*t)*v,e[6]=m*v,e[7]=(i*l-h*t)*v,e[8]=(a*t-i*r)*v,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,s,r,a,o){let l=Math.cos(r),h=Math.sin(r);return this.set(i*l,i*h,-i*(l*a+h*o)+a+e,-s*h,s*l,-s*(-h*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Gl.makeScale(e,t)),this}rotate(e){return this.premultiply(Gl.makeRotation(-e)),this}translate(e,t){return this.premultiply(Gl.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,i=e.elements;for(let s=0;s<9;s++)if(t[s]!==i[s])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}},Gl=new Ae;function uc(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function pr(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function tp(){let n=pr("canvas");return n.style.display="block",n}var Su={};function Vs(n){n in Su||(Su[n]=!0,console.warn(n))}function ip(n,e,t){return new Promise(function(i,s){setTimeout(function r(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:s();break;case n.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:i()}},t)})}function sp(n){let e=n.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function rp(n){let e=n.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=1-e[14])}var Mu=new Ae().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),wu=new Ae().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ff(){let n={enabled:!0,workingColorSpace:Qt,spaces:{},convert:function(s,r,a){return this.enabled!==!1&&r!==a&&r&&a&&(this.spaces[r].transfer===Ke&&(s.r=Bi(s.r),s.g=Bi(s.g),s.b=Bi(s.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[r].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Ke&&(s.r=dr(s.r),s.g=dr(s.g),s.b=dr(s.b))),s},fromWorkingColorSpace:function(s,r){return this.convert(s,this.workingColorSpace,r)},toWorkingColorSpace:function(s,r){return this.convert(s,r,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===""?Jr:this.spaces[s].transfer},getLuminanceCoefficients:function(s,r=this.workingColorSpace){return s.fromArray(this.spaces[r].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,r,a){return s.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return n.define({[Qt]:{primaries:e,whitePoint:i,transfer:Jr,toXYZ:Mu,fromXYZ:wu,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Pt},outputColorSpaceConfig:{drawingBufferColorSpace:Pt}},[Pt]:{primaries:e,whitePoint:i,transfer:Ke,toXYZ:Mu,fromXYZ:wu,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Pt}}}),n}var Ve=ff();function Bi(n){return n<.04045?.0773993808*n:Math.pow(.9478672986*n+.0521327014,2.4)}function dr(n){return n<.0031308?12.92*n:1.055*Math.pow(n,.41666)-.055}var Qs,ka=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Qs===void 0&&(Qs=pr("canvas")),Qs.width=e.width,Qs.height=e.height;let i=Qs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Qs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){let t=pr("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let s=i.getImageData(0,0,e.width,e.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=255*Bi(r[a]/255);return i.putImageData(s,0,0),t}if(e.data){let t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(255*Bi(t[i]/255)):t[i]=Bi(t[i]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},gf=0,en=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:gf++}),this.uuid=Wi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];let i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(Vl(s[a].image)):r.push(Vl(s[a]))}else r=Vl(s);i.url=r}return t||(e.images[this.uuid]=i),i}};function Vl(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?ka.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var vf=0,mt=class n extends yi{constructor(e=n.DEFAULT_IMAGE,t=n.DEFAULT_MAPPING,i=1001,s=1001,r=1006,a=1008,o=1023,l=Mi,h=n.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:vf++}),this.uuid=Wi(),this.name="",this.source=new en(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=l,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ae,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];let i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Dh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case _t:e.x=e.x-Math.floor(e.x);break;case Oi:e.x=e.x<0?0:1;break;case Ba:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case _t:e.y=e.y-Math.floor(e.y);break;case Oi:e.y=e.y<0?0:1;break;case Ba:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};mt.DEFAULT_IMAGE=null,mt.DEFAULT_MAPPING=Dh,mt.DEFAULT_ANISOTROPY=1;var Ie=class n{constructor(e=0,t=0,i=0,s=1){n.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,s){return this.x=e,this.y=t,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,s=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*s+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*s+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*s+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*s+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,s,r,l=e.elements,h=l[0],c=l[4],u=l[8],d=l[1],m=l[5],f=l[9],v=l[2],p=l[6],g=l[10];if(Math.abs(c-d)<.01&&Math.abs(u-v)<.01&&Math.abs(f-p)<.01){if(Math.abs(c+d)<.1&&Math.abs(u+v)<.1&&Math.abs(f+p)<.1&&Math.abs(h+m+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;let y=(h+1)/2,_=(m+1)/2,b=(g+1)/2,S=(c+d)/4,E=(u+v)/4,P=(f+p)/4;return y>_&&y>b?y<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(y),s=S/i,r=E/i):_>b?_<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(_),i=S/s,r=P/s):b<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(b),i=E/r,s=P/r),this.set(i,s,r,t),this}let x=Math.sqrt((p-f)*(p-f)+(u-v)*(u-v)+(d-c)*(d-c));return Math.abs(x)<.001&&(x=1),this.x=(p-f)/x,this.y=(u-v)/x,this.z=(d-c)/x,this.w=Math.acos((h+m+g-1)/2),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Be(this.x,e.x,t.x),this.y=Be(this.y,e.y,t.y),this.z=Be(this.z,e.z,t.z),this.w=Be(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Be(this.x,e,t),this.y=Be(this.y,e,t),this.z=Be(this.z,e,t),this.w=Be(this.w,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Be(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},Na=class extends yi{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ie(0,0,e,t),this.scissorTest=!1,this.viewport=new Ie(0,0,e,t);let s={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qe,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);let r=new mt(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];let a=i.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,s=e.textures.length;i<s;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new en(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},ct=class extends Na{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}},tn=class extends mt{constructor(e=null,t=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:s},this.magFilter=rt,this.minFilter=rt,this.wrapR=Oi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}};var Ga=class extends mt{constructor(e=null,t=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:s},this.magFilter=rt,this.minFilter=rt,this.wrapR=Oi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var Ue=class{constructor(e=0,t=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=s}static slerpFlat(e,t,i,s,r,a,o){let l=i[s+0],h=i[s+1],c=i[s+2],u=i[s+3],d=r[a+0],m=r[a+1],f=r[a+2],v=r[a+3];if(o===0)return e[t+0]=l,e[t+1]=h,e[t+2]=c,void(e[t+3]=u);if(o===1)return e[t+0]=d,e[t+1]=m,e[t+2]=f,void(e[t+3]=v);if(u!==v||l!==d||h!==m||c!==f){let p=1-o,g=l*d+h*m+c*f+u*v,x=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){let b=Math.sqrt(y),S=Math.atan2(b,g*x);p=Math.sin(p*S)/b,o=Math.sin(o*S)/b}let _=o*x;if(l=l*p+d*_,h=h*p+m*_,c=c*p+f*_,u=u*p+v*_,p===1-o){let b=1/Math.sqrt(l*l+h*h+c*c+u*u);l*=b,h*=b,c*=b,u*=b}}e[t]=l,e[t+1]=h,e[t+2]=c,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,s,r,a){let o=i[s],l=i[s+1],h=i[s+2],c=i[s+3],u=r[a],d=r[a+1],m=r[a+2],f=r[a+3];return e[t]=o*f+c*u+l*m-h*d,e[t+1]=l*f+c*d+h*u-o*m,e[t+2]=h*f+c*m+o*d-l*u,e[t+3]=c*f-o*u-l*d-h*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,s){return this._x=e,this._y=t,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let i=e._x,s=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,h=o(i/2),c=o(s/2),u=o(r/2),d=l(i/2),m=l(s/2),f=l(r/2);switch(a){case"XYZ":this._x=d*c*u+h*m*f,this._y=h*m*u-d*c*f,this._z=h*c*f+d*m*u,this._w=h*c*u-d*m*f;break;case"YXZ":this._x=d*c*u+h*m*f,this._y=h*m*u-d*c*f,this._z=h*c*f-d*m*u,this._w=h*c*u+d*m*f;break;case"ZXY":this._x=d*c*u-h*m*f,this._y=h*m*u+d*c*f,this._z=h*c*f+d*m*u,this._w=h*c*u-d*m*f;break;case"ZYX":this._x=d*c*u-h*m*f,this._y=h*m*u+d*c*f,this._z=h*c*f-d*m*u,this._w=h*c*u+d*m*f;break;case"YZX":this._x=d*c*u+h*m*f,this._y=h*m*u+d*c*f,this._z=h*c*f-d*m*u,this._w=h*c*u-d*m*f;break;case"XZY":this._x=d*c*u-h*m*f,this._y=h*m*u-d*c*f,this._z=h*c*f+d*m*u,this._w=h*c*u+d*m*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],s=t[4],r=t[8],a=t[1],o=t[5],l=t[9],h=t[2],c=t[6],u=t[10],d=i+o+u;if(d>0){let m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(c-l)*m,this._y=(r-h)*m,this._z=(a-s)*m}else if(i>o&&i>u){let m=2*Math.sqrt(1+i-o-u);this._w=(c-l)/m,this._x=.25*m,this._y=(s+a)/m,this._z=(r+h)/m}else if(o>u){let m=2*Math.sqrt(1+o-i-u);this._w=(r-h)/m,this._x=(s+a)/m,this._y=.25*m,this._z=(l+c)/m}else{let m=2*Math.sqrt(1+u-i-o);this._w=(a-s)/m,this._x=(r+h)/m,this._y=(l+c)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Be(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);if(i===0)return this;let s=Math.min(1,t/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,s=e._y,r=e._z,a=e._w,o=t._x,l=t._y,h=t._z,c=t._w;return this._x=i*c+a*o+s*h-r*l,this._y=s*c+a*l+r*o-i*h,this._z=r*c+a*h+i*l-s*o,this._w=a*c-i*o-s*l-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);let i=this._x,s=this._y,r=this._z,a=this._w,o=a*e._w+i*e._x+s*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=s,this._z=r,this;let l=1-o*o;if(l<=Number.EPSILON){let m=1-t;return this._w=m*a+t*this._w,this._x=m*i+t*this._x,this._y=m*s+t*this._y,this._z=m*r+t*this._z,this.normalize(),this}let h=Math.sqrt(l),c=Math.atan2(h,o),u=Math.sin((1-t)*c)/h,d=Math.sin(t*c)/h;return this._w=a*u+this._w*d,this._x=i*u+this._x*d,this._y=s*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},M=class n{constructor(e=0,t=0,i=0){n.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Cu.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Cu.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*s,this.y=r[1]*t+r[4]*i+r[7]*s,this.z=r[2]*t+r[5]*i+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,s=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*s+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*s+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*s+r[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,s=this.z,r=e.x,a=e.y,o=e.z,l=e.w,h=2*(a*s-o*i),c=2*(o*t-r*s),u=2*(r*i-a*t);return this.x=t+l*h+a*u-o*c,this.y=i+l*c+o*h-r*u,this.z=s+l*u+r*c-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*s,this.y=r[1]*t+r[5]*i+r[9]*s,this.z=r[2]*t+r[6]*i+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Be(this.x,e.x,t.x),this.y=Be(this.y,e.y,t.y),this.z=Be(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Be(this.x,e,t),this.y=Be(this.y,e,t),this.z=Be(this.z,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Be(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,s=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=s*l-r*o,this.y=r*a-i*l,this.z=i*o-s*a,this}projectOnVector(e){let t=e.lengthSq();if(t===0)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return zl.copy(this).projectOnVector(e),this.sub(zl)}reflect(e){return this.sub(zl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(Be(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return t*t+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let s=Math.sin(t)*e;return this.x=s*Math.sin(i),this.y=Math.cos(t)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=2*Math.random()-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}},zl=new M,Cu=new Ue,Nt=class{constructor(e=new M(1/0,1/0,1/0),t=new M(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(ai.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(ai.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=ai.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let i=e.geometry;if(i!==void 0){let r=i.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,ai):ai.fromBufferAttribute(r,a),ai.applyMatrix4(e.matrixWorld),this.expandByPoint(ai);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ra.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ra.copy(i.boundingBox)),ra.applyMatrix4(e.matrixWorld),this.union(ra)}let s=e.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ai),ai.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Nr),na.subVectors(this.max,Nr),Js.subVectors(e.a,Nr),$s.subVectors(e.b,Nr),er.subVectors(e.c,Nr),$i.subVectors($s,Js),es.subVectors(er,$s),us.subVectors(Js,er);let t=[0,-$i.z,$i.y,0,-es.z,es.y,0,-us.z,us.y,$i.z,0,-$i.x,es.z,0,-es.x,us.z,0,-us.x,-$i.y,$i.x,0,-es.y,es.x,0,-us.y,us.x,0];return!!Hl(t,Js,$s,er,na)&&(t=[1,0,0,0,1,0,0,0,1],!!Hl(t,Js,$s,er,na)&&(aa.crossVectors($i,es),t=[aa.x,aa.y,aa.z],Hl(t,Js,$s,er,na)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ai).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ai).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Ei[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ei[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ei[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ei[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ei[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ei[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ei[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ei[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ei)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},Ei=[new M,new M,new M,new M,new M,new M,new M,new M],ai=new M,ra=new Nt,Js=new M,$s=new M,er=new M,$i=new M,es=new M,us=new M,Nr=new M,na=new M,aa=new M,ds=new M;function Hl(n,e,t,i,s){for(let r=0,a=n.length-3;r<=a;r+=3){ds.fromArray(n,r);let o=s.x*Math.abs(ds.x)+s.y*Math.abs(ds.y)+s.z*Math.abs(ds.z),l=e.dot(ds),h=t.dot(ds),c=i.dot(ds);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}var xf=new Nt,Gr=new M,Wl=new M,Xt=class{constructor(e=new M,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;t!==void 0?i.copy(t):xf.setFromPoints(e).getCenter(i);let s=0;for(let r=0,a=e.length;r<a;r++)s=Math.max(s,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Gr.subVectors(e,this.center);let t=Gr.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),s=.5*(i-this.radius);this.center.addScaledVector(Gr,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Gr.copy(e.center).add(Wl)),this.expandByPoint(Gr.copy(e.center).sub(Wl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}},Ai=new M,jl=new M,oa=new M,ts=new M,Xl=new M,la=new M,ql=new M,bs=class{constructor(e=new M,t=new M(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ai)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=Ai.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ai.copy(this.origin).addScaledVector(this.direction,t),Ai.distanceToSquared(e))}distanceSqToSegment(e,t,i,s){jl.copy(e).add(t).multiplyScalar(.5),oa.copy(t).sub(e).normalize(),ts.copy(this.origin).sub(jl);let r=.5*e.distanceTo(t),a=-this.direction.dot(oa),o=ts.dot(this.direction),l=-ts.dot(oa),h=ts.lengthSq(),c=Math.abs(1-a*a),u,d,m,f;if(c>0)if(u=a*l-o,d=a*o-l,f=r*c,u>=0)if(d>=-f)if(d<=f){let v=1/c;u*=v,d*=v,m=u*(u+a*d+2*o)+d*(a*u+d+2*l)+h}else d=r,u=Math.max(0,-(a*d+o)),m=-u*u+d*(d+2*l)+h;else d=-r,u=Math.max(0,-(a*d+o)),m=-u*u+d*(d+2*l)+h;else d<=-f?(u=Math.max(0,-(-a*r+o)),d=u>0?-r:Math.min(Math.max(-r,-l),r),m=-u*u+d*(d+2*l)+h):d<=f?(u=0,d=Math.min(Math.max(-r,-l),r),m=d*(d+2*l)+h):(u=Math.max(0,-(a*r+o)),d=u>0?r:Math.min(Math.max(-r,-l),r),m=-u*u+d*(d+2*l)+h);else d=a>0?-r:r,u=Math.max(0,-(a*d+o)),m=-u*u+d*(d+2*l)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(jl).addScaledVector(oa,d),m}intersectSphere(e,t){Ai.subVectors(e.center,this.origin);let i=Ai.dot(this.direction),s=Ai.dot(Ai)-i*i,r=e.radius*e.radius;if(s>r)return null;let a=Math.sqrt(r-s),o=i-a,l=i+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return t===0?!0:e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,s,r,a,o,l,h=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return h>=0?(i=(e.min.x-d.x)*h,s=(e.max.x-d.x)*h):(i=(e.max.x-d.x)*h,s=(e.min.x-d.x)*h),c>=0?(r=(e.min.y-d.y)*c,a=(e.max.y-d.y)*c):(r=(e.max.y-d.y)*c,a=(e.min.y-d.y)*c),i>a||r>s?null:((r>i||isNaN(i))&&(i=r),(a<s||isNaN(s))&&(s=a),u>=0?(o=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||o>s?null:((o>i||i!=i)&&(i=o),(l<s||s!=s)&&(s=l),s<0?null:this.at(i>=0?i:s,t)))}intersectsBox(e){return this.intersectBox(e,Ai)!==null}intersectTriangle(e,t,i,s,r){Xl.subVectors(t,e),la.subVectors(i,e),ql.crossVectors(Xl,la);let a,o=this.direction.dot(ql);if(o>0){if(s)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}ts.subVectors(this.origin,e);let l=a*this.direction.dot(la.crossVectors(ts,la));if(l<0)return null;let h=a*this.direction.dot(Xl.cross(ts));if(h<0||l+h>o)return null;let c=-a*ts.dot(ql);return c<0?null:this.at(c/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},pe=class n{constructor(e,t,i,s,r,a,o,l,h,c,u,d,m,f,v,p){n.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,s,r,a,o,l,h,c,u,d,m,f,v,p)}set(e,t,i,s,r,a,o,l,h,c,u,d,m,f,v,p){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=s,g[1]=r,g[5]=a,g[9]=o,g[13]=l,g[2]=h,g[6]=c,g[10]=u,g[14]=d,g[3]=m,g[7]=f,g[11]=v,g[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new n().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,s=1/tr.setFromMatrixColumn(e,0).length(),r=1/tr.setFromMatrixColumn(e,1).length(),a=1/tr.setFromMatrixColumn(e,2).length();return t[0]=i[0]*s,t[1]=i[1]*s,t[2]=i[2]*s,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,s=e.y,r=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(s),h=Math.sin(s),c=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){let d=a*c,m=a*u,f=o*c,v=o*u;t[0]=l*c,t[4]=-l*u,t[8]=h,t[1]=m+f*h,t[5]=d-v*h,t[9]=-o*l,t[2]=v-d*h,t[6]=f+m*h,t[10]=a*l}else if(e.order==="YXZ"){let d=l*c,m=l*u,f=h*c,v=h*u;t[0]=d+v*o,t[4]=f*o-m,t[8]=a*h,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=m*o-f,t[6]=v+d*o,t[10]=a*l}else if(e.order==="ZXY"){let d=l*c,m=l*u,f=h*c,v=h*u;t[0]=d-v*o,t[4]=-a*u,t[8]=f+m*o,t[1]=m+f*o,t[5]=a*c,t[9]=v-d*o,t[2]=-a*h,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){let d=a*c,m=a*u,f=o*c,v=o*u;t[0]=l*c,t[4]=f*h-m,t[8]=d*h+v,t[1]=l*u,t[5]=v*h+d,t[9]=m*h-f,t[2]=-h,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){let d=a*l,m=a*h,f=o*l,v=o*h;t[0]=l*c,t[4]=v-d*u,t[8]=f*u+m,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-h*c,t[6]=m*u+f,t[10]=d-v*u}else if(e.order==="XZY"){let d=a*l,m=a*h,f=o*l,v=o*h;t[0]=l*c,t[4]=-u,t[8]=h*c,t[1]=d*u+v,t[5]=a*c,t[9]=m*u-f,t[2]=f*u-m,t[6]=o*c,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(yf,e,_f)}lookAt(e,t,i){let s=this.elements;return Ht.subVectors(e,t),Ht.lengthSq()===0&&(Ht.z=1),Ht.normalize(),is.crossVectors(i,Ht),is.lengthSq()===0&&(Math.abs(i.z)===1?Ht.x+=1e-4:Ht.z+=1e-4,Ht.normalize(),is.crossVectors(i,Ht)),is.normalize(),ha.crossVectors(Ht,is),s[0]=is.x,s[4]=ha.x,s[8]=Ht.x,s[1]=is.y,s[5]=ha.y,s[9]=Ht.y,s[2]=is.z,s[6]=ha.z,s[10]=Ht.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,s=t.elements,r=this.elements,a=i[0],o=i[4],l=i[8],h=i[12],c=i[1],u=i[5],d=i[9],m=i[13],f=i[2],v=i[6],p=i[10],g=i[14],x=i[3],y=i[7],_=i[11],b=i[15],S=s[0],E=s[4],P=s[8],D=s[12],O=s[1],B=s[5],V=s[9],j=s[13],z=s[2],q=s[6],K=s[10],$=s[14],ee=s[3],le=s[7],me=s[11],J=s[15];return r[0]=a*S+o*O+l*z+h*ee,r[4]=a*E+o*B+l*q+h*le,r[8]=a*P+o*V+l*K+h*me,r[12]=a*D+o*j+l*$+h*J,r[1]=c*S+u*O+d*z+m*ee,r[5]=c*E+u*B+d*q+m*le,r[9]=c*P+u*V+d*K+m*me,r[13]=c*D+u*j+d*$+m*J,r[2]=f*S+v*O+p*z+g*ee,r[6]=f*E+v*B+p*q+g*le,r[10]=f*P+v*V+p*K+g*me,r[14]=f*D+v*j+p*$+g*J,r[3]=x*S+y*O+_*z+b*ee,r[7]=x*E+y*B+_*q+b*le,r[11]=x*P+y*V+_*K+b*me,r[15]=x*D+y*j+_*$+b*J,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],s=e[8],r=e[12],a=e[1],o=e[5],l=e[9],h=e[13],c=e[2],u=e[6],d=e[10],m=e[14];return e[3]*(+r*l*u-s*h*u-r*o*d+i*h*d+s*o*m-i*l*m)+e[7]*(+t*l*m-t*h*d+r*a*d-s*a*m+s*h*c-r*l*c)+e[11]*(+t*h*u-t*o*m-r*a*u+i*a*m+r*o*c-i*h*c)+e[15]*(-s*o*c-t*l*u+t*o*d+s*a*u-i*a*d+i*l*c)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=e[9],d=e[10],m=e[11],f=e[12],v=e[13],p=e[14],g=e[15],x=u*p*h-v*d*h+v*l*m-o*p*m-u*l*g+o*d*g,y=f*d*h-c*p*h-f*l*m+a*p*m+c*l*g-a*d*g,_=c*v*h-f*u*h+f*o*m-a*v*m-c*o*g+a*u*g,b=f*u*l-c*v*l-f*o*d+a*v*d+c*o*p-a*u*p,S=t*x+i*y+s*_+r*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let E=1/S;return e[0]=x*E,e[1]=(v*d*r-u*p*r-v*s*m+i*p*m+u*s*g-i*d*g)*E,e[2]=(o*p*r-v*l*r+v*s*h-i*p*h-o*s*g+i*l*g)*E,e[3]=(u*l*r-o*d*r-u*s*h+i*d*h+o*s*m-i*l*m)*E,e[4]=y*E,e[5]=(c*p*r-f*d*r+f*s*m-t*p*m-c*s*g+t*d*g)*E,e[6]=(f*l*r-a*p*r-f*s*h+t*p*h+a*s*g-t*l*g)*E,e[7]=(a*d*r-c*l*r+c*s*h-t*d*h-a*s*m+t*l*m)*E,e[8]=_*E,e[9]=(f*u*r-c*v*r-f*i*m+t*v*m+c*i*g-t*u*g)*E,e[10]=(a*v*r-f*o*r+f*i*h-t*v*h-a*i*g+t*o*g)*E,e[11]=(c*o*r-a*u*r-c*i*h+t*u*h+a*i*m-t*o*m)*E,e[12]=b*E,e[13]=(c*v*s-f*u*s+f*i*d-t*v*d-c*i*p+t*u*p)*E,e[14]=(f*o*s-a*v*s-f*i*l+t*v*l+a*i*p-t*o*p)*E,e[15]=(a*u*s-c*o*s+c*i*l-t*u*l-a*i*d+t*o*d)*E,this}scale(e){let t=this.elements,i=e.x,s=e.y,r=e.z;return t[0]*=i,t[4]*=s,t[8]*=r,t[1]*=i,t[5]*=s,t[9]*=r,t[2]*=i,t[6]*=s,t[10]*=r,t[3]*=i,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,s))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),s=Math.sin(t),r=1-i,a=e.x,o=e.y,l=e.z,h=r*a,c=r*o;return this.set(h*a+i,h*o-s*l,h*l+s*o,0,h*o+s*l,c*o+i,c*l-s*a,0,h*l-s*o,c*l+s*a,r*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,s,r,a){return this.set(1,i,r,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,i){let s=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,h=r+r,c=a+a,u=o+o,d=r*h,m=r*c,f=r*u,v=a*c,p=a*u,g=o*u,x=l*h,y=l*c,_=l*u,b=i.x,S=i.y,E=i.z;return s[0]=(1-(v+g))*b,s[1]=(m+_)*b,s[2]=(f-y)*b,s[3]=0,s[4]=(m-_)*S,s[5]=(1-(d+g))*S,s[6]=(p+x)*S,s[7]=0,s[8]=(f+y)*E,s[9]=(p-x)*E,s[10]=(1-(d+v))*E,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,i){let s=this.elements,r=tr.set(s[0],s[1],s[2]).length(),a=tr.set(s[4],s[5],s[6]).length(),o=tr.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],oi.copy(this);let l=1/r,h=1/a,c=1/o;return oi.elements[0]*=l,oi.elements[1]*=l,oi.elements[2]*=l,oi.elements[4]*=h,oi.elements[5]*=h,oi.elements[6]*=h,oi.elements[8]*=c,oi.elements[9]*=c,oi.elements[10]*=c,t.setFromRotationMatrix(oi),i.x=r,i.y=a,i.z=o,this}makePerspective(e,t,i,s,r,a,o=2e3){let l=this.elements,h=2*r/(t-e),c=2*r/(i-s),u=(t+e)/(t-e),d=(i+s)/(i-s),m,f;if(o===ys)m=-(a+r)/(a-r),f=-2*a*r/(a-r);else{if(o!==$r)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);m=-a/(a-r),f=-a*r/(a-r)}return l[0]=h,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=c,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=f,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,s,r,a,o=2e3){let l=this.elements,h=1/(t-e),c=1/(i-s),u=1/(a-r),d=(t+e)*h,m=(i+s)*c,f,v;if(o===ys)f=(a+r)*u,v=-2*u;else{if(o!==$r)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);f=r*u,v=-1*u}return l[0]=2*h,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*c,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=v,l[14]=-f,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let s=0;s<16;s++)if(t[s]!==i[s])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}},tr=new M,oi=new pe,yf=new M(0,0,0),_f=new M(1,1,1),is=new M,ha=new M,Ht=new M,Tu=new pe,Eu=new Ue,Ye=class n{constructor(e=0,t=0,i=0,s=n.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,s=this._order){return this._x=e,this._y=t,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let s=e.elements,r=s[0],a=s[4],o=s[8],l=s[1],h=s[5],c=s[9],u=s[2],d=s[6],m=s[10];switch(t){case"XYZ":this._y=Math.asin(Be(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,m),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Be(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Be(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Be(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(Be(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-Be(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-c,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Tu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Tu,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Eu.setFromEuler(this),this.setFromQuaternion(Eu,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Ye.DEFAULT_ORDER="XYZ";var sn=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}},bf=0,Au=new M,ir=new Ue,Pi=new pe,ca=new M,Vr=new M,Sf=new M,Mf=new Ue,Pu=new M(1,0,0),Ru=new M(0,1,0),Du=new M(0,0,1),Lu={type:"added"},wf={type:"removed"},sr={type:"childadded",child:null},Yl={type:"childremoved",child:null},Ze=class n extends yi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bf++}),this.uuid=Wi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=n.DEFAULT_UP.clone();let e=new M,t=new Ye,i=new Ue,s=new M(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new pe},normalMatrix:{value:new Ae}}),this.matrix=new pe,this.matrixWorld=new pe,this.matrixAutoUpdate=n.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=n.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new sn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.multiply(ir),this}rotateOnWorldAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.premultiply(ir),this}rotateX(e){return this.rotateOnAxis(Pu,e)}rotateY(e){return this.rotateOnAxis(Ru,e)}rotateZ(e){return this.rotateOnAxis(Du,e)}translateOnAxis(e,t){return Au.copy(e).applyQuaternion(this.quaternion),this.position.add(Au.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Pu,e)}translateY(e){return this.translateOnAxis(Ru,e)}translateZ(e){return this.translateOnAxis(Du,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Pi.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?ca.copy(e):ca.set(e,t,i);let s=this.parent;this.updateWorldMatrix(!0,!1),Vr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pi.lookAt(Vr,ca,this.up):Pi.lookAt(ca,Vr,this.up),this.quaternion.setFromRotationMatrix(Pi),s&&(Pi.extractRotation(s.matrixWorld),ir.setFromRotationMatrix(Pi),this.quaternion.premultiply(ir.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Lu),sr.child=e,this.dispatchEvent(sr),sr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}let t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(wf),Yl.child=e,this.dispatchEvent(Yl),Yl.child=null),this}removeFromParent(){let e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Pi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Pi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Lu),sr.child=e,this.dispatchEvent(sr),sr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,s=this.children.length;i<s;i++){let r=this.children[i].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);let s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vr,e,Sf),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vr,Mf,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,s=t.length;i<s;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);let t=this.children;for(let i=0,s=t.length;i<s;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,s=t.length;i<s;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){let s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(e){let t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let s={};function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);let o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){let l=o.shapes;if(Array.isArray(l))for(let h=0,c=l.length;h<c;h++){let u=l[h];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){let o=[];for(let l=0,h=this.material.length;l<h;l++)o.push(r(e.materials,this.material[l]));s.material=o}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){let l=this.animations[o];s.animations.push(r(e.animations,l))}}if(t){let o=a(e.geometries),l=a(e.materials),h=a(e.textures),c=a(e.images),u=a(e.shapes),d=a(e.skeletons),m=a(e.animations),f=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),h.length>0&&(i.textures=h),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),m.length>0&&(i.animations=m),f.length>0&&(i.nodes=f)}return i.object=s,i;function a(o){let l=[];for(let h in o){let c=o[h];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){let s=e.children[i];this.add(s.clone())}return this}};Ze.DEFAULT_UP=new M(0,1,0),Ze.DEFAULT_MATRIX_AUTO_UPDATE=!0,Ze.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;var li=new M,Ri=new M,Kl=new M,Di=new M,rr=new M,nr=new M,Iu=new M,Zl=new M,Ql=new M,Jl=new M,$l=new Ie,eh=new Ie,th=new Ie,Ii=class n{constructor(e=new M,t=new M,i=new M){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,s){s.subVectors(i,t),li.subVectors(e,t),s.cross(li);let r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,i,s,r){li.subVectors(s,t),Ri.subVectors(i,t),Kl.subVectors(e,t);let a=li.dot(li),o=li.dot(Ri),l=li.dot(Kl),h=Ri.dot(Ri),c=Ri.dot(Kl),u=a*h-o*o;if(u===0)return r.set(0,0,0),null;let d=1/u,m=(h*l-o*c)*d,f=(a*c-o*l)*d;return r.set(1-m-f,f,m)}static containsPoint(e,t,i,s){return this.getBarycoord(e,t,i,s,Di)!==null&&Di.x>=0&&Di.y>=0&&Di.x+Di.y<=1}static getInterpolation(e,t,i,s,r,a,o,l){return this.getBarycoord(e,t,i,s,Di)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,Di.x),l.addScaledVector(a,Di.y),l.addScaledVector(o,Di.z),l)}static getInterpolatedAttribute(e,t,i,s,r,a){return $l.setScalar(0),eh.setScalar(0),th.setScalar(0),$l.fromBufferAttribute(e,t),eh.fromBufferAttribute(e,i),th.fromBufferAttribute(e,s),a.setScalar(0),a.addScaledVector($l,r.x),a.addScaledVector(eh,r.y),a.addScaledVector(th,r.z),a}static isFrontFacing(e,t,i,s){return li.subVectors(i,t),Ri.subVectors(e,t),li.cross(Ri).dot(s)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,s){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,i,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return li.subVectors(this.c,this.b),Ri.subVectors(this.a,this.b),.5*li.cross(Ri).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return n.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return n.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,s,r){return n.getInterpolation(e,this.a,this.b,this.c,t,i,s,r)}containsPoint(e){return n.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return n.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,s=this.b,r=this.c,a,o;rr.subVectors(s,i),nr.subVectors(r,i),Zl.subVectors(e,i);let l=rr.dot(Zl),h=nr.dot(Zl);if(l<=0&&h<=0)return t.copy(i);Ql.subVectors(e,s);let c=rr.dot(Ql),u=nr.dot(Ql);if(c>=0&&u<=c)return t.copy(s);let d=l*u-c*h;if(d<=0&&l>=0&&c<=0)return a=l/(l-c),t.copy(i).addScaledVector(rr,a);Jl.subVectors(e,r);let m=rr.dot(Jl),f=nr.dot(Jl);if(f>=0&&m<=f)return t.copy(r);let v=m*h-l*f;if(v<=0&&h>=0&&f<=0)return o=h/(h-f),t.copy(i).addScaledVector(nr,o);let p=c*f-m*u;if(p<=0&&u-c>=0&&m-f>=0)return Iu.subVectors(r,s),o=(u-c)/(u-c+(m-f)),t.copy(s).addScaledVector(Iu,o);let g=1/(p+v+d);return a=v*g,o=d*g,t.copy(i).addScaledVector(rr,a).addScaledVector(nr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},np={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ss={h:0,s:0,l:0},ua={h:0,s:0,l:0};function ih(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+6*(e-n)*t:t<.5?e:t<2/3?n+6*(e-n)*(2/3-t):n}var he=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){let s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Pt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Ve.toWorkingColorSpace(this,t),this}setRGB(e,t,i,s=Ve.workingColorSpace){return this.r=e,this.g=t,this.b=i,Ve.toWorkingColorSpace(this,s),this}setHSL(e,t,i,s=Ve.workingColorSpace){if(e=xh(e,1),t=Be(t,0,1),i=Be(i,0,1),t===0)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,a=2*i-r;this.r=ih(a,r,e+1/3),this.g=ih(a,r,e),this.b=ih(a,r,e-1/3)}return Ve.toWorkingColorSpace(this,s),this}setStyle(e,t=Pt){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r,a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){let r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Pt){let i=np[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Bi(e.r),this.g=Bi(e.g),this.b=Bi(e.b),this}copyLinearToSRGB(e){return this.r=dr(e.r),this.g=dr(e.g),this.b=dr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Pt){return Ve.fromWorkingColorSpace(It.copy(this),e),65536*Math.round(Be(255*It.r,0,255))+256*Math.round(Be(255*It.g,0,255))+Math.round(Be(255*It.b,0,255))}getHexString(e=Pt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ve.workingColorSpace){Ve.fromWorkingColorSpace(It.copy(this),t);let i=It.r,s=It.g,r=It.b,a=Math.max(i,s,r),o=Math.min(i,s,r),l,h,c=(o+a)/2;if(o===a)l=0,h=0;else{let u=a-o;switch(h=c<=.5?u/(a+o):u/(2-a-o),a){case i:l=(s-r)/u+(s<r?6:0);break;case s:l=(r-i)/u+2;break;case r:l=(i-s)/u+4}l/=6}return e.h=l,e.s=h,e.l=c,e}getRGB(e,t=Ve.workingColorSpace){return Ve.fromWorkingColorSpace(It.copy(this),t),e.r=It.r,e.g=It.g,e.b=It.b,e}getStyle(e=Pt){Ve.fromWorkingColorSpace(It.copy(this),e);let t=It.r,i=It.g,s=It.b;return e!==Pt?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*i)},${Math.round(255*s)})`}offsetHSL(e,t,i){return this.getHSL(ss),this.setHSL(ss.h+e,ss.s+t,ss.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(ss),e.getHSL(ua);let i=qr(ss.h,ua.h,t),s=qr(ss.s,ua.s,t),r=qr(ss.l,ua.l,t);return this.setHSL(i,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,i=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*s,this.g=r[1]*t+r[4]*i+r[7]*s,this.b=r[2]*t+r[5]*i+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}},It=new he;he.NAMES=np;var Cf=0,Jt=class extends yi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cf++}),this.uuid=Wi(),this.name="",this.type="Material",this.blending=1,this.side=ft,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new he(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fs,this.stencilZFail=fs,this.stencilZPass=fs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(let t in e){let i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let s=this[t];s!==void 0?s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[t]=i:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){let t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});let i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function s(r){let a=[];for(let o in r){let l=r[o];delete l.metadata,a.push(l)}return a}if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==ft&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==fs&&(i.stencilFail=this.stencilFail),this.stencilZFail!==fs&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==fs&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){let r=s(e.textures),a=s(e.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(t!==null){let s=t.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},ki=class extends Jt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ye,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},h0=Tf();function Tf(){let n=new ArrayBuffer(4),e=new Float32Array(n),t=new Uint32Array(n),i=new Uint32Array(512),s=new Uint32Array(512);for(let l=0;l<256;++l){let h=l-127;h<-27?(i[l]=0,i[256|l]=32768,s[l]=24,s[256|l]=24):h<-14?(i[l]=1024>>-h-14,i[256|l]=1024>>-h-14|32768,s[l]=-h-1,s[256|l]=-h-1):h<=15?(i[l]=h+15<<10,i[256|l]=h+15<<10|32768,s[l]=13,s[256|l]=13):h<128?(i[l]=31744,i[256|l]=64512,s[l]=24,s[256|l]=24):(i[l]=31744,i[256|l]=64512,s[l]=13,s[256|l]=13)}let r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let h=l<<13,c=0;for(;!(8388608&h);)h<<=1,c-=8388608;h&=-8388609,c+=947912704,r[l]=h|c}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}var xt=new M,da=new G,Et=class{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=vh,this.updateRanges=[],this.gpuType=Ut,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)da.fromBufferAttribute(this,t),da.applyMatrix3(e),this.setXY(t,da.x,da.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix3(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix4(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyNormalMatrix(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.transformDirection(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=hr(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=kt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=hr(t,this.array)),t}setX(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=hr(t,this.array)),t}setY(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=hr(t,this.array)),t}setZ(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=hr(t,this.array)),t}setW(e,t){return this.normalized&&(t=kt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),i=kt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,s){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),i=kt(i,this.array),s=kt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,t,i,s,r){return e*=this.itemSize,this.normalized&&(t=kt(t,this.array),i=kt(i,this.array),s=kt(s,this.array),r=kt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==vh&&(e.usage=this.usage),e}};var Ss=class extends Et{constructor(e,t,i){super(new Uint16Array(e),t,i)}};var rn=class extends Et{constructor(e,t,i){super(new Uint32Array(e),t,i)}};var _e=class extends Et{constructor(e,t,i){super(new Float32Array(e),t,i)}},Ef=0,Kt=new pe,sh=new Ze,ar=new M,Wt=new Nt,zr=new Nt,Tt=new M,We=class n extends yi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ef++}),this.uuid=Wi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(uc(e)?rn:Ss)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(i!==void 0){let r=new Ae().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}let s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Kt.makeRotationFromQuaternion(e),this.applyMatrix4(Kt),this}rotateX(e){return Kt.makeRotationX(e),this.applyMatrix4(Kt),this}rotateY(e){return Kt.makeRotationY(e),this.applyMatrix4(Kt),this}rotateZ(e){return Kt.makeRotationZ(e),this.applyMatrix4(Kt),this}translate(e,t,i){return Kt.makeTranslation(e,t,i),this.applyMatrix4(Kt),this}scale(e,t,i){return Kt.makeScale(e,t,i),this.applyMatrix4(Kt),this}lookAt(e){return sh.lookAt(e),sh.updateMatrix(),this.applyMatrix4(sh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ar).negate(),this.translate(ar.x,ar.y,ar.z),this}setFromPoints(e){let t=this.getAttribute("position");if(t===void 0){let i=[];for(let s=0,r=e.length;s<r;s++){let a=e[s];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new _e(i,3))}else{let i=Math.min(e.length,t.count);for(let s=0;s<i;s++){let r=e[s];t.setXYZ(s,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nt);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,s=t.length;i<s;i++){let r=t[i];Wt.setFromBufferAttribute(r),this.morphTargetsRelative?(Tt.addVectors(this.boundingBox.min,Wt.min),this.boundingBox.expandByPoint(Tt),Tt.addVectors(this.boundingBox.max,Wt.max),this.boundingBox.expandByPoint(Tt)):(this.boundingBox.expandByPoint(Wt.min),this.boundingBox.expandByPoint(Wt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xt);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new M,1/0);if(e){let i=this.boundingSphere.center;if(Wt.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){let o=t[r];zr.setFromBufferAttribute(o),this.morphTargetsRelative?(Tt.addVectors(Wt.min,zr.min),Wt.expandByPoint(Tt),Tt.addVectors(Wt.max,zr.max),Wt.expandByPoint(Tt)):(Wt.expandByPoint(zr.min),Wt.expandByPoint(zr.max))}Wt.getCenter(i);let s=0;for(let r=0,a=e.count;r<a;r++)Tt.fromBufferAttribute(e,r),s=Math.max(s,i.distanceToSquared(Tt));if(t)for(let r=0,a=t.length;r<a;r++){let o=t[r],l=this.morphTargetsRelative;for(let h=0,c=o.count;h<c;h++)Tt.fromBufferAttribute(o,h),l&&(ar.fromBufferAttribute(e,h),Tt.add(ar)),s=Math.max(s,i.distanceToSquared(Tt))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");let i=t.position,s=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Et(new Float32Array(4*i.count),4));let a=this.getAttribute("tangent"),o=[],l=[];for(let P=0;P<i.count;P++)o[P]=new M,l[P]=new M;let h=new M,c=new M,u=new M,d=new G,m=new G,f=new G,v=new M,p=new M;function g(P,D,O){h.fromBufferAttribute(i,P),c.fromBufferAttribute(i,D),u.fromBufferAttribute(i,O),d.fromBufferAttribute(r,P),m.fromBufferAttribute(r,D),f.fromBufferAttribute(r,O),c.sub(h),u.sub(h),m.sub(d),f.sub(d);let B=1/(m.x*f.y-f.x*m.y);isFinite(B)&&(v.copy(c).multiplyScalar(f.y).addScaledVector(u,-m.y).multiplyScalar(B),p.copy(u).multiplyScalar(m.x).addScaledVector(c,-f.x).multiplyScalar(B),o[P].add(v),o[D].add(v),o[O].add(v),l[P].add(p),l[D].add(p),l[O].add(p))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let P=0,D=x.length;P<D;++P){let O=x[P],B=O.start;for(let V=B,j=B+O.count;V<j;V+=3)g(e.getX(V+0),e.getX(V+1),e.getX(V+2))}let y=new M,_=new M,b=new M,S=new M;function E(P){b.fromBufferAttribute(s,P),S.copy(b);let D=o[P];y.copy(D),y.sub(b.multiplyScalar(b.dot(D))).normalize(),_.crossVectors(S,D);let O=_.dot(l[P])<0?-1:1;a.setXYZW(P,y.x,y.y,y.z,O)}for(let P=0,D=x.length;P<D;++P){let O=x[P],B=O.start;for(let V=B,j=B+O.count;V<j;V+=3)E(e.getX(V+0)),E(e.getX(V+1)),E(e.getX(V+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Et(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let d=0,m=i.count;d<m;d++)i.setXYZ(d,0,0,0);let s=new M,r=new M,a=new M,o=new M,l=new M,h=new M,c=new M,u=new M;if(e)for(let d=0,m=e.count;d<m;d+=3){let f=e.getX(d+0),v=e.getX(d+1),p=e.getX(d+2);s.fromBufferAttribute(t,f),r.fromBufferAttribute(t,v),a.fromBufferAttribute(t,p),c.subVectors(a,r),u.subVectors(s,r),c.cross(u),o.fromBufferAttribute(i,f),l.fromBufferAttribute(i,v),h.fromBufferAttribute(i,p),o.add(c),l.add(c),h.add(c),i.setXYZ(f,o.x,o.y,o.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(p,h.x,h.y,h.z)}else for(let d=0,m=t.count;d<m;d+=3)s.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),c.subVectors(a,r),u.subVectors(s,r),c.cross(u),i.setXYZ(d+0,c.x,c.y,c.z),i.setXYZ(d+1,c.x,c.y,c.z),i.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Tt.fromBufferAttribute(e,t),Tt.normalize(),e.setXYZ(t,Tt.x,Tt.y,Tt.z)}toNonIndexed(){function e(o,l){let h=o.array,c=o.itemSize,u=o.normalized,d=new h.constructor(l.length*c),m=0,f=0;for(let v=0,p=l.length;v<p;v++){m=o.isInterleavedBufferAttribute?l[v]*o.data.stride+o.offset:l[v]*c;for(let g=0;g<c;g++)d[f++]=h[m++]}return new Et(d,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new n,i=this.index.array,s=this.attributes;for(let o in s){let l=e(s[o],i);t.setAttribute(o,l)}let r=this.morphAttributes;for(let o in r){let l=[],h=r[o];for(let c=0,u=h.length;c<u;c++){let d=e(h[c],i);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let o=0,l=a.length;o<l;o++){let h=a[o];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){let l=this.parameters;for(let h in l)l[h]!==void 0&&(e[h]=l[h]);return e}e.data={attributes:{}};let t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let i=this.attributes;for(let l in i){let h=i[l];e.data.attributes[l]=h.toJSON(e.data)}let s={},r=!1;for(let l in this.morphAttributes){let h=this.morphAttributes[l],c=[];for(let u=0,d=h.length;u<d;u++){let m=h[u];c.push(m.toJSON(e.data))}c.length>0&&(s[l]=c,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;i!==null&&this.setIndex(i.clone(t));let s=e.attributes;for(let h in s){let c=s[h];this.setAttribute(h,c.clone(t))}let r=e.morphAttributes;for(let h in r){let c=[],u=r[h];for(let d=0,m=u.length;d<m;d++)c.push(u[d].clone(t));this.morphAttributes[h]=c}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let h=0,c=a.length;h<c;h++){let u=a[h];this.addGroup(u.start,u.count,u.materialIndex)}let o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());let l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}},Uu=new pe,ps=new bs,pa=new Xt,Fu=new M,ma=new M,fa=new M,ga=new M,rh=new M,va=new M,Bu=new M,xa=new M,nt=class extends Ze{constructor(e=new We,t=new ki){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){let a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){let i=this.geometry,s=i.attributes.position,r=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(s,e);let o=this.morphTargetInfluences;if(r&&o){va.set(0,0,0);for(let l=0,h=r.length;l<h;l++){let c=o[l],u=r[l];c!==0&&(rh.fromBufferAttribute(u,e),a?va.addScaledVector(rh,c):va.addScaledVector(rh.sub(t),c))}t.add(va)}return t}raycast(e,t){let i=this.geometry,s=this.material,r=this.matrixWorld;if(s!==void 0){if(i.boundingSphere===null&&i.computeBoundingSphere(),pa.copy(i.boundingSphere),pa.applyMatrix4(r),ps.copy(e.ray).recast(e.near),pa.containsPoint(ps.origin)===!1&&(ps.intersectSphere(pa,Fu)===null||ps.origin.distanceToSquared(Fu)>(e.far-e.near)**2))return;Uu.copy(r).invert(),ps.copy(e.ray).applyMatrix4(Uu),i.boundingBox!==null&&ps.intersectsBox(i.boundingBox)===!1||this._computeIntersections(e,t,ps)}}_computeIntersections(e,t,i){let s,r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,h=r.attributes.uv,c=r.attributes.uv1,u=r.attributes.normal,d=r.groups,m=r.drawRange;if(o!==null)if(Array.isArray(a))for(let f=0,v=d.length;f<v;f++){let p=d[f],g=a[p.materialIndex];for(let x=Math.max(p.start,m.start),y=Math.min(o.count,Math.min(p.start+p.count,m.start+m.count));x<y;x+=3)s=ya(this,g,e,i,h,c,u,o.getX(x),o.getX(x+1),o.getX(x+2)),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=p.materialIndex,t.push(s))}else for(let f=Math.max(0,m.start),v=Math.min(o.count,m.start+m.count);f<v;f+=3)s=ya(this,a,e,i,h,c,u,o.getX(f),o.getX(f+1),o.getX(f+2)),s&&(s.faceIndex=Math.floor(f/3),t.push(s));else if(l!==void 0)if(Array.isArray(a))for(let f=0,v=d.length;f<v;f++){let p=d[f],g=a[p.materialIndex];for(let x=Math.max(p.start,m.start),y=Math.min(l.count,Math.min(p.start+p.count,m.start+m.count));x<y;x+=3)s=ya(this,g,e,i,h,c,u,x,x+1,x+2),s&&(s.faceIndex=Math.floor(x/3),s.face.materialIndex=p.materialIndex,t.push(s))}else for(let f=Math.max(0,m.start),v=Math.min(l.count,m.start+m.count);f<v;f+=3)s=ya(this,a,e,i,h,c,u,f,f+1,f+2),s&&(s.faceIndex=Math.floor(f/3),t.push(s))}};function ya(n,e,t,i,s,r,a,o,l,h){n.getVertexPosition(o,ma),n.getVertexPosition(l,fa),n.getVertexPosition(h,ga);let c=function(u,d,m,f,v,p,g,x){let y;if(y=d.side===At?f.intersectTriangle(g,p,v,!0,x):f.intersectTriangle(v,p,g,d.side===ft,x),y===null)return null;xa.copy(x),xa.applyMatrix4(u.matrixWorld);let _=m.ray.origin.distanceTo(xa);return _<m.near||_>m.far?null:{distance:_,point:xa.clone(),object:u}}(n,e,t,i,ma,fa,ga,Bu);if(c){let u=new M;Ii.getBarycoord(Bu,ma,fa,ga,u),s&&(c.uv=Ii.getInterpolatedAttribute(s,o,l,h,u,new G)),r&&(c.uv1=Ii.getInterpolatedAttribute(r,o,l,h,u,new G)),a&&(c.normal=Ii.getInterpolatedAttribute(a,o,l,h,u,new M),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));let d={a:o,b:l,c:h,normal:new M,materialIndex:0};Ii.getNormal(ma,fa,ga,d.normal),c.face=d,c.barycoord=u}return c}var Ms=class n extends We{constructor(e=1,t=1,i=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:s,heightSegments:r,depthSegments:a};let o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);let l=[],h=[],c=[],u=[],d=0,m=0;function f(v,p,g,x,y,_,b,S,E,P,D){let O=_/E,B=b/P,V=_/2,j=b/2,z=S/2,q=E+1,K=P+1,$=0,ee=0,le=new M;for(let me=0;me<K;me++){let J=me*B-j;for(let re=0;re<q;re++){let ce=re*O-V;le[v]=ce*x,le[p]=J*y,le[g]=z,h.push(le.x,le.y,le.z),le[v]=0,le[p]=0,le[g]=S>0?1:-1,c.push(le.x,le.y,le.z),u.push(re/E),u.push(1-me/P),$+=1}}for(let me=0;me<P;me++)for(let J=0;J<E;J++){let re=d+J+q*me,ce=d+J+q*(me+1),de=d+(J+1)+q*(me+1),ae=d+(J+1)+q*me;l.push(re,ce,ae),l.push(ce,de,ae),ee+=6}o.addGroup(m,ee,D),m+=ee,d+=$}f("z","y","x",-1,-1,i,t,e,a,r,0),f("z","y","x",1,-1,i,t,-e,a,r,1),f("x","z","y",1,1,e,i,t,s,a,2),f("x","z","y",1,-1,e,i,-t,s,a,3),f("x","y","z",1,-1,e,t,i,s,r,4),f("x","y","z",-1,-1,e,t,-i,s,r,5),this.setIndex(l),this.setAttribute("position",new _e(h,3)),this.setAttribute("normal",new _e(c,3)),this.setAttribute("uv",new _e(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function zs(n){let e={};for(let t in n){e[t]={};for(let i in n[t]){let s=n[t][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=s.clone():Array.isArray(s)?e[t][i]=s.slice():e[t][i]=s}}return e}function Ft(n){let e={};for(let t=0;t<n.length;t++){let i=zs(n[t]);for(let s in i)e[s]=i[s]}return e}function dc(n){let e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Ve.workingColorSpace}var ji={clone:zs,merge:Ft},we=class extends Jt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=zs(e.uniforms),this.uniformsGroups=function(t){let i=[];for(let s=0;s<t.length;s++)i.push(t[s].clone());return i}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(let s in this.uniforms){let r=this.uniforms[s].value;r&&r.isTexture?t.uniforms[s]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[s]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[s]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[s]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[s]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[s]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[s]={type:"m4",value:r.toArray()}:t.uniforms[s]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let i={};for(let s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},mr=class extends Ze{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new pe,this.projectionMatrix=new pe,this.projectionMatrixInverse=new pe,this.coordinateSystem=ys}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},rs=new M,Ou=new G,ku=new G,yt=class extends mr{constructor(e=50,t=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*_s*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*ur*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*_s*Math.atan(Math.tan(.5*ur*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){rs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(rs.x,rs.y).multiplyScalar(-e/rs.z),rs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(rs.x,rs.y).multiplyScalar(-e/rs.z)}getViewSize(e,t){return this.getViewBounds(e,Ou,ku),t.subVectors(ku,Ou)}setViewOffset(e,t,i,s,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*ur*this.fov)/this.zoom,i=2*t,s=this.aspect*i,r=-.5*s,a=this.view;if(this.view!==null&&this.view.enabled){let l=a.fullWidth,h=a.fullHeight;r+=a.offsetX*s/l,t-=a.offsetY*i/h,s*=a.width/l,i*=a.height/h}let o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}},or=-90,Va=class extends Ze{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;let s=new yt(or,1,e,t);s.layers=this.layers,this.add(s);let r=new yt(or,1,e,t);r.layers=this.layers,this.add(r);let a=new yt(or,1,e,t);a.layers=this.layers,this.add(a);let o=new yt(or,1,e,t);o.layers=this.layers,this.add(o);let l=new yt(or,1,e,t);l.layers=this.layers,this.add(l);let h=new yt(or,1,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[i,s,r,a,o,l]=t;for(let h of t)this.remove(h);if(e===ys)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else{if(e!==$r)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1)}for(let h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();let{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[r,a,o,l,h,c]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),f=e.xr.enabled;e.xr.enabled=!1;let v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(t,r),e.setRenderTarget(i,1,s),e.render(t,a),e.setRenderTarget(i,2,s),e.render(t,o),e.setRenderTarget(i,3,s),e.render(t,l),e.setRenderTarget(i,4,s),e.render(t,h),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,s),e.render(t,c),e.setRenderTarget(u,d,m),e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}},nn=class extends mt{constructor(e,t,i,s,r,a,o,l,h,c){super(e=e!==void 0?e:[],t=t!==void 0?t:Os,i,s,r,a,o,l,h,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},za=class extends ct{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new nn(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0&&t.generateMipmaps,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Qe}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Ms(5,5,5),r=new we({name:"CubemapFromEquirect",uniforms:zs(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:At,blending:0});r.uniforms.tEquirect.value=t;let a=new nt(s,r),o=t.minFilter;return t.minFilter===Ns&&(t.minFilter=Qe),new Va(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,s){let r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,s);e.setRenderTarget(r)}},ws=class n{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new he(e),this.density=t}clone(){return new n(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}};var Cs=class extends Ze{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ye,this.environmentIntensity=1,this.environmentRotation=new Ye,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};var c0=new M;var u0=new M,d0=new M,p0=new M,m0=new G,f0=new G,g0=new pe,v0=new M,x0=new M,y0=new M,_0=new G,b0=new G,S0=new G;var M0=new M,w0=new M;var Nu=new M,Gu=new Ie,Vu=new Ie,Af=new M,zu=new pe,_a=new M,nh=new Xt,Hu=new pe,ah=new bs,an=class extends nt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=gh,this.bindMatrix=new pe,this.bindMatrixInverse=new pe,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){let e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Nt),this.boundingBox.makeEmpty();let t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,_a),this.boundingBox.expandByPoint(_a)}computeBoundingSphere(){let e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Xt),this.boundingSphere.makeEmpty();let t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,_a),this.boundingSphere.expandByPoint(_a)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){let i=this.material,s=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),nh.copy(this.boundingSphere),nh.applyMatrix4(s),e.ray.intersectsSphere(nh)!==!1&&(Hu.copy(s).invert(),ah.copy(e.ray).applyMatrix4(Hu),this.boundingBox!==null&&ah.intersectsBox(this.boundingBox)===!1||this._computeIntersections(e,t,ah)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new Ie,t=this.geometry.attributes.skinWeight;for(let i=0,s=t.count;i<s;i++){e.fromBufferAttribute(t,i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===gh?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Gd?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){let i=this.skeleton,s=this.geometry;Gu.fromBufferAttribute(s.attributes.skinIndex,e),Vu.fromBufferAttribute(s.attributes.skinWeight,e),Nu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let a=Vu.getComponent(r);if(a!==0){let o=Gu.getComponent(r);zu.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),t.addScaledVector(Af.copy(Nu).applyMatrix4(zu),a)}}return t.applyMatrix4(this.bindMatrixInverse)}},Ts=class extends Ze{constructor(){super(),this.isBone=!0,this.type="Bone"}},on=class extends mt{constructor(e=null,t=1,i=1,s,r,a,o,l,h=1003,c=1003,u,d){super(null,a,o,l,h,c,s,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},Wu=new pe,Pf=new pe,ln=class n{constructor(e=[],t=[]){this.uuid=Wi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,s=this.bones.length;i<s;i++)this.boneInverses.push(new pe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new pe;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,s=this.boneTexture;for(let r=0,a=e.length;r<a;r++){let o=e[r]?e[r].matrixWorld:Pf;Wu.multiplyMatrices(o,t[r]),Wu.toArray(i,16*r)}s!==null&&(s.needsUpdate=!0)}clone(){return new n(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=4*Math.ceil(e/4),e=Math.max(e,4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new on(t,e,e,ut,Ut);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let s=this.bones[t];if(s.name===e)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,s=e.bones.length;i<s;i++){let r=e.bones[i],a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new Ts),this.bones.push(a),this.boneInverses.push(new pe().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let s=0,r=t.length;s<r;s++){let a=t[s];e.bones.push(a.uuid);let o=i[s];e.boneInverses.push(o.toArray())}return e}},hn=class extends Et{constructor(e,t,i,s=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}},lr=new pe,ju=new pe,ba=[],Xu=new Nt,Rf=new pe,Hr=new nt,Wr=new Xt,fr=class extends nt{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new hn(new Float32Array(16*i),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let s=0;s<i;s++)this.setMatrixAt(s,Rf)}computeBoundingBox(){let e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Nt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,lr),Xu.copy(e.boundingBox).applyMatrix4(lr),this.boundingBox.union(Xu)}computeBoundingSphere(){let e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Xt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,lr),Wr.copy(e.boundingSphere).applyMatrix4(lr),this.boundingSphere.union(Wr)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}getMorphAt(e,t){let i=t.morphTargetInfluences,s=this.morphTexture.source.data.data,r=e*(i.length+1)+1;for(let a=0;a<i.length;a++)i[a]=s[r+a]}raycast(e,t){let i=this.matrixWorld,s=this.count;if(Hr.geometry=this.geometry,Hr.material=this.material,Hr.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Wr.copy(this.boundingSphere),Wr.applyMatrix4(i),e.ray.intersectsSphere(Wr)!==!1))for(let r=0;r<s;r++){this.getMatrixAt(r,lr),ju.multiplyMatrices(i,lr),Hr.matrixWorld=ju,Hr.raycast(e,ba);for(let a=0,o=ba.length;a<o;a++){let l=ba[a];l.instanceId=r,l.object=this,t.push(l)}ba.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new hn(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}setMorphAt(e,t){let i=t.morphTargetInfluences,s=i.length+1;this.morphTexture===null&&(this.morphTexture=new on(new Float32Array(s*this.count),s,this.count,Cr,Ut));let r=this.morphTexture.source.data.data,a=0;for(let h=0;h<i.length;h++)a+=i[h];let o=this.geometry.morphTargetsRelative?1:1-a,l=s*e;r[l]=o,r.set(i,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}},oh=new M,Df=new M,Lf=new Ae,xi=class{constructor(e=new M(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,s){return this.normal.set(e,t,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let s=oh.subVectors(i,t).cross(Df.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let i=e.delta(oh),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||Lf.getNormalMatrix(e),s=this.coplanarPoint(oh).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}},ms=new Xt,Sa=new M,Es=class{constructor(e=new xi,t=new xi,i=new xi,s=new xi,r=new xi,a=new xi){this.planes=[e,t,i,s,r,a]}set(e,t,i,s,r,a){let o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=2e3){let i=this.planes,s=e.elements,r=s[0],a=s[1],o=s[2],l=s[3],h=s[4],c=s[5],u=s[6],d=s[7],m=s[8],f=s[9],v=s[10],p=s[11],g=s[12],x=s[13],y=s[14],_=s[15];if(i[0].setComponents(l-r,d-h,p-m,_-g).normalize(),i[1].setComponents(l+r,d+h,p+m,_+g).normalize(),i[2].setComponents(l+a,d+c,p+f,_+x).normalize(),i[3].setComponents(l-a,d-c,p-f,_-x).normalize(),i[4].setComponents(l-o,d-u,p-v,_-y).normalize(),t===ys)i[5].setComponents(l+o,d+u,p+v,_+y).normalize();else{if(t!==$r)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);i[5].setComponents(o,u,v,y).normalize()}return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ms.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ms.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ms)}intersectsSprite(e){return ms.center.set(0,0,0),ms.radius=.7071067811865476,ms.applyMatrix4(e.matrixWorld),this.intersectsSphere(ms)}intersectsSphere(e){let t=this.planes,i=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let s=t[i];if(Sa.x=s.normal.x>0?e.max.x:e.min.x,Sa.y=s.normal.y>0?e.max.y:e.min.y,Sa.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Sa)<0)return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};var yh=class{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,s){let r=this.pool,a=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});let o=r[this.index];a.push(o),this.index++,o.start=e,o.count=t,o.z=i,o.index=s}reset(){this.list.length=0,this.index=0}},C0=new pe,T0=new he(1,1,1),E0=new Es,A0=new Nt,P0=new Xt,R0=new M,D0=new M,L0=new M,I0=new yh,U0=new nt;var gr=class extends Jt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new he(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}},Ha=new M,Wa=new M,qu=new pe,jr=new bs,Ma=new Xt,lh=new M,Yu=new M,cn=class extends Ze{constructor(e=new We,t=new gr){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.index===null){let t=e.attributes.position,i=[0];for(let s=1,r=t.count;s<r;s++)Ha.fromBufferAttribute(t,s-1),Wa.fromBufferAttribute(t,s),i[s]=i[s-1],i[s]+=Ha.distanceTo(Wa);e.setAttribute("lineDistance",new _e(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let i=this.geometry,s=this.matrixWorld,r=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ma.copy(i.boundingSphere),Ma.applyMatrix4(s),Ma.radius+=r,e.ray.intersectsSphere(Ma)===!1)return;qu.copy(s).invert(),jr.copy(e.ray).applyMatrix4(qu);let o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=this.isLineSegments?2:1,c=i.index,u=i.attributes.position;if(c!==null){let d=Math.max(0,a.start),m=Math.min(c.count,a.start+a.count);for(let f=d,v=m-1;f<v;f+=h){let p=c.getX(f),g=c.getX(f+1),x=wa(this,e,jr,l,p,g);x&&t.push(x)}if(this.isLineLoop){let f=c.getX(m-1),v=c.getX(d),p=wa(this,e,jr,l,f,v);p&&t.push(p)}}else{let d=Math.max(0,a.start),m=Math.min(u.count,a.start+a.count);for(let f=d,v=m-1;f<v;f+=h){let p=wa(this,e,jr,l,f,f+1);p&&t.push(p)}if(this.isLineLoop){let f=wa(this,e,jr,l,m-1,d);f&&t.push(f)}}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){let a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}};function wa(n,e,t,i,s,r){let a=n.geometry.attributes.position;if(Ha.fromBufferAttribute(a,s),Wa.fromBufferAttribute(a,r),t.distanceSqToSegment(Ha,Wa,lh,Yu)>i)return;lh.applyMatrix4(n.matrixWorld);let o=e.ray.origin.distanceTo(lh);return o<e.near||o>e.far?void 0:{distance:o,point:Yu.clone().applyMatrix4(n.matrixWorld),index:s,face:null,faceIndex:null,barycoord:null,object:n}}var F0=new M,B0=new M;var ja=class extends Jt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new he(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}},Ku=new pe,_h=new bs,Ca=new Xt,Ta=new M,un=class extends Ze{constructor(e=new We,t=new ja){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,s=this.matrixWorld,r=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ca.copy(i.boundingSphere),Ca.applyMatrix4(s),Ca.radius+=r,e.ray.intersectsSphere(Ca)===!1)return;Ku.copy(s).invert(),_h.copy(e.ray).applyMatrix4(Ku);let o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=i.index,c=i.attributes.position;if(h!==null)for(let u=Math.max(0,a.start),d=Math.min(h.count,a.start+a.count);u<d;u++){let m=h.getX(u);Ta.fromBufferAttribute(c,m),Zu(Ta,m,l,s,e,t,this)}else for(let u=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);u<d;u++)Ta.fromBufferAttribute(c,u),Zu(Ta,u,l,s,e,t,this)}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){let a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}};function Zu(n,e,t,i,s,r,a){let o=_h.distanceSqToPoint(n);if(o<t){let l=new M;_h.closestPointToPoint(n,l),l.applyMatrix4(i);let h=s.ray.origin.distanceTo(l);if(h<s.near||h>s.far)return;r.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}var bt=class extends Ze{constructor(){super(),this.isGroup=!0,this.type="Group"}},dn=class extends mt{constructor(e,t,i,s,r,a,o,l,h){super(e,t,i,s,r,a,o,l,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Qe,this.magFilter=r!==void 0?r:Qe,this.generateMipmaps=!1;let c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function u(){c.needsUpdate=!0,e.requestVideoFrameCallback(u)})}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!("requestVideoFrameCallback"in e)&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}};var pn=class extends mt{constructor(e,t,i,s,r,a,o,l,h){super(e,t,i,s,r,a,o,l,h),this.isCanvasTexture=!0,this.needsUpdate=!0}},Ni=class extends mt{constructor(e,t,i,s,r,a,o,l,h,c=1026){if(c!==Zt&&c!==xs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&c===Zt&&(i=wi),i===void 0&&c===xs&&(i=1020),super(null,s,r,a,o,l,c,i,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:rt,this.minFilter=l!==void 0?l:rt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}},Gt=class{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,s=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),r+=i.distanceTo(s),t.push(r),s=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),s=0,r=i.length,a;a=t||e*i[r-1];let o,l=0,h=r-1;for(;l<=h;)if(s=Math.floor(l+(h-l)/2),o=i[s]-a,o<0)l=s+1;else{if(!(o>0)){h=s;break}h=s-1}if(s=h,i[s]===a)return s/(r-1);let c=i[s];return(s+(a-c)/(i[s+1]-c))/(r-1)}getTangent(e,t){let s=e-1e-4,r=e+1e-4;s<0&&(s=0),r>1&&(r=1);let a=this.getPoint(s),o=this.getPoint(r),l=t||(a.isVector2?new G:new M);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new M,s=[],r=[],a=[],o=new M,l=new pe;for(let m=0;m<=e;m++){let f=m/e;s[m]=this.getTangentAt(f,new M)}r[0]=new M,a[0]=new M;let h=Number.MAX_VALUE,c=Math.abs(s[0].x),u=Math.abs(s[0].y),d=Math.abs(s[0].z);c<=h&&(h=c,i.set(1,0,0)),u<=h&&(h=u,i.set(0,1,0)),d<=h&&i.set(0,0,1),o.crossVectors(s[0],i).normalize(),r[0].crossVectors(s[0],o),a[0].crossVectors(s[0],r[0]);for(let m=1;m<=e;m++){if(r[m]=r[m-1].clone(),a[m]=a[m-1].clone(),o.crossVectors(s[m-1],s[m]),o.length()>Number.EPSILON){o.normalize();let f=Math.acos(Be(s[m-1].dot(s[m]),-1,1));r[m].applyMatrix4(l.makeRotationAxis(o,f))}a[m].crossVectors(s[m],r[m])}if(t===!0){let m=Math.acos(Be(r[0].dot(r[e]),-1,1));m/=e,s[0].dot(o.crossVectors(r[0],r[e]))>0&&(m=-m);for(let f=1;f<=e;f++)r[f].applyMatrix4(l.makeRotationAxis(s[f],m*f)),a[f].crossVectors(s[f],r[f])}return{tangents:s,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},vr=class extends Gt{constructor(e=0,t=0,i=1,s=1,r=0,a=2*Math.PI,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=s,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t=new G){let i=t,s=2*Math.PI,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=s;for(;r>s;)r-=s;r<Number.EPSILON&&(r=a?0:s),this.aClockwise!==!0||a||(r===s?r=-s:r-=s);let o=this.aStartAngle+e*r,l=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){let c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,m=h-this.aY;l=d*c-m*u+this.aX,h=d*u+m*c+this.aY}return i.set(l,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},Xa=class extends vr{constructor(e,t,i,s,r,a){super(e,t,i,i,s,r,a),this.isArcCurve=!0,this.type="ArcCurve"}};function pc(){let n=0,e=0,t=0,i=0;function s(r,a,o,l){n=r,e=o,t=-3*r+3*a-2*o-l,i=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,h){s(a,o,h*(o-r),h*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,h,c,u){let d=(a-r)/h-(o-r)/(h+c)+(o-a)/c,m=(o-a)/c-(l-a)/(c+u)+(l-o)/u;d*=c,m*=c,s(a,o,d,m)},calc:function(r){let a=r*r;return n+e*r+t*a+i*(a*r)}}}var Ea=new M,hh=new pc,ch=new pc,uh=new pc,qa=class extends Gt{constructor(e=[],t=!1,i="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=s}getPoint(e,t=new M){let i=t,s=this.points,r=s.length,a=(r-(this.closed?0:1))*e,o,l,h=Math.floor(a),c=a-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/r)+1)*r:c===0&&h===r-1&&(h=r-2,c=1),this.closed||h>0?o=s[(h-1)%r]:(Ea.subVectors(s[0],s[1]).add(s[0]),o=Ea);let u=s[h%r],d=s[(h+1)%r];if(this.closed||h+2<r?l=s[(h+2)%r]:(Ea.subVectors(s[r-1],s[r-2]).add(s[r-1]),l=Ea),this.curveType==="centripetal"||this.curveType==="chordal"){let m=this.curveType==="chordal"?.5:.25,f=Math.pow(o.distanceToSquared(u),m),v=Math.pow(u.distanceToSquared(d),m),p=Math.pow(d.distanceToSquared(l),m);v<1e-4&&(v=1),f<1e-4&&(f=v),p<1e-4&&(p=v),hh.initNonuniformCatmullRom(o.x,u.x,d.x,l.x,f,v,p),ch.initNonuniformCatmullRom(o.y,u.y,d.y,l.y,f,v,p),uh.initNonuniformCatmullRom(o.z,u.z,d.z,l.z,f,v,p)}else this.curveType==="catmullrom"&&(hh.initCatmullRom(o.x,u.x,d.x,l.x,this.tension),ch.initCatmullRom(o.y,u.y,d.y,l.y,this.tension),uh.initCatmullRom(o.z,u.z,d.z,l.z,this.tension));return i.set(hh.calc(c),ch.calc(c),uh.calc(c)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let s=e.points[t];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let s=this.points[t];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let s=e.points[t];this.points.push(new M().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}};function Qu(n,e,t,i,s){let r=.5*(i-e),a=.5*(s-t),o=n*n;return(2*t-2*i+r+a)*(n*o)+(-3*t+3*i-2*r-a)*o+r*n+t}function Yr(n,e,t,i){return function(s,r){let a=1-s;return a*a*r}(n,e)+function(s,r){return 2*(1-s)*s*r}(n,t)+function(s,r){return s*s*r}(n,i)}function Kr(n,e,t,i,s){return function(r,a){let o=1-r;return o*o*o*a}(n,e)+function(r,a){let o=1-r;return 3*o*o*r*a}(n,t)+function(r,a){return 3*(1-r)*r*r*a}(n,i)+function(r,a){return r*r*r*a}(n,s)}var mn=class extends Gt{constructor(e=new G,t=new G,i=new G,s=new G){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=s}getPoint(e,t=new G){let i=t,s=this.v0,r=this.v1,a=this.v2,o=this.v3;return i.set(Kr(e,s.x,r.x,a.x,o.x),Kr(e,s.y,r.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},Ya=class extends Gt{constructor(e=new M,t=new M,i=new M,s=new M){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=s}getPoint(e,t=new M){let i=t,s=this.v0,r=this.v1,a=this.v2,o=this.v3;return i.set(Kr(e,s.x,r.x,a.x,o.x),Kr(e,s.y,r.y,a.y,o.y),Kr(e,s.z,r.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},fn=class extends Gt{constructor(e=new G,t=new G){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new G){let i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new G){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},Ka=class extends Gt{constructor(e=new M,t=new M){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new M){let i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new M){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},gn=class extends Gt{constructor(e=new G,t=new G,i=new G){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new G){let i=t,s=this.v0,r=this.v1,a=this.v2;return i.set(Yr(e,s.x,r.x,a.x),Yr(e,s.y,r.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},vn=class extends Gt{constructor(e=new M,t=new M,i=new M){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new M){let i=t,s=this.v0,r=this.v1,a=this.v2;return i.set(Yr(e,s.x,r.x,a.x),Yr(e,s.y,r.y,a.y),Yr(e,s.z,r.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},xn=class extends Gt{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new G){let i=t,s=this.points,r=(s.length-1)*e,a=Math.floor(r),o=r-a,l=s[a===0?a:a-1],h=s[a],c=s[a>s.length-2?s.length-1:a+1],u=s[a>s.length-3?s.length-1:a+2];return i.set(Qu(o,l.x,h.x,c.x,u.x),Qu(o,l.y,h.y,c.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let s=e.points[t];this.points.push(s.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let s=this.points[t];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let s=e.points[t];this.points.push(new G().fromArray(s))}return this}},Za=Object.freeze({__proto__:null,ArcCurve:Xa,CatmullRomCurve3:qa,CubicBezierCurve:mn,CubicBezierCurve3:Ya,EllipseCurve:vr,LineCurve:fn,LineCurve3:Ka,QuadraticBezierCurve:gn,QuadraticBezierCurve3:vn,SplineCurve:xn}),Qa=class extends Gt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Za[i](t,e))}return this}getPoint(e,t){let i=e*this.getLength(),s=this.getCurveLengths(),r=0;for(;r<s.length;){if(s[r]>=i){let a=s[r]-i,o=this.curves[r],l=o.getLength(),h=l===0?0:1-a/l;return o.getPointAt(h,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,s=this.curves.length;i<s;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let s=0,r=this.curves;s<r.length;s++){let a=r[s],o=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let h=0;h<l.length;h++){let c=l[h];i&&i.equals(c)||(t.push(c),i=c)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let s=e.curves[t];this.curves.push(s.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let s=this.curves[t];e.curves.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let s=e.curves[t];this.curves.push(new Za[s.type]().fromJSON(s))}return this}},xr=class extends Qa{constructor(e){super(),this.type="Path",this.currentPoint=new G,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new fn(this.currentPoint.clone(),new G(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,s){let r=new gn(this.currentPoint.clone(),new G(e,t),new G(i,s));return this.curves.push(r),this.currentPoint.set(i,s),this}bezierCurveTo(e,t,i,s,r,a){let o=new mn(this.currentPoint.clone(),new G(e,t),new G(i,s),new G(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new xn(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,s,r,a){let o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,i,s,r,a),this}absarc(e,t,i,s,r,a){return this.absellipse(e,t,i,i,s,r,a),this}ellipse(e,t,i,s,r,a,o,l){let h=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+h,t+c,i,s,r,a,o,l),this}absellipse(e,t,i,s,r,a,o,l){let h=new vr(e,t,i,s,r,a,o,l);if(this.curves.length>0){let u=h.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(h);let c=h.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}},yn=class n extends We{constructor(e=[new G(0,-.5),new G(.5,0),new G(0,.5)],t=12,i=0,s=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:s},t=Math.floor(t),s=Be(s,0,2*Math.PI);let r=[],a=[],o=[],l=[],h=[],c=1/t,u=new M,d=new G,m=new M,f=new M,v=new M,p=0,g=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:p=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,m.x=1*g,m.y=-p,m.z=0*g,v.copy(m),m.normalize(),l.push(m.x,m.y,m.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:p=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,m.x=1*g,m.y=-p,m.z=0*g,f.copy(m),m.x+=v.x,m.y+=v.y,m.z+=v.z,m.normalize(),l.push(m.x,m.y,m.z),v.copy(f)}for(let x=0;x<=t;x++){let y=i+x*c*s,_=Math.sin(y),b=Math.cos(y);for(let S=0;S<=e.length-1;S++){u.x=e[S].x*_,u.y=e[S].y,u.z=e[S].x*b,a.push(u.x,u.y,u.z),d.x=x/t,d.y=S/(e.length-1),o.push(d.x,d.y);let E=l[3*S+0]*_,P=l[3*S+1],D=l[3*S+0]*b;h.push(E,P,D)}}for(let x=0;x<t;x++)for(let y=0;y<e.length-1;y++){let _=y+x*e.length,b=_,S=_+e.length,E=_+e.length+1,P=_+1;r.push(b,S,P),r.push(E,P,S)}this.setIndex(r),this.setAttribute("position",new _e(a,3)),this.setAttribute("uv",new _e(o,2)),this.setAttribute("normal",new _e(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.points,e.segments,e.phiStart,e.phiLength)}},Ja=class n extends yn{constructor(e=1,t=1,i=4,s=8){let r=new xr;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),s),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:s}}static fromJSON(e){return new n(e.radius,e.length,e.capSegments,e.radialSegments)}},$a=class n extends We{constructor(e=1,t=32,i=0,s=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:s},t=Math.max(3,t);let r=[],a=[],o=[],l=[],h=new M,c=new G;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){let m=i+u/t*s;h.x=e*Math.cos(m),h.y=e*Math.sin(m),a.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(a[d]/e+1)/2,c.y=(a[d+1]/e+1)/2,l.push(c.x,c.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new _e(a,3)),this.setAttribute("normal",new _e(o,3)),this.setAttribute("uv",new _e(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.radius,e.segments,e.thetaStart,e.thetaLength)}},_n=class n extends We{constructor(e=1,t=1,i=1,s=32,r=1,a=!1,o=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:s,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};let h=this;s=Math.floor(s),r=Math.floor(r);let c=[],u=[],d=[],m=[],f=0,v=[],p=i/2,g=0;function x(y){let _=f,b=new G,S=new M,E=0,P=y===!0?e:t,D=y===!0?1:-1;for(let B=1;B<=s;B++)u.push(0,p*D,0),d.push(0,D,0),m.push(.5,.5),f++;let O=f;for(let B=0;B<=s;B++){let V=B/s*l+o,j=Math.cos(V),z=Math.sin(V);S.x=P*z,S.y=p*D,S.z=P*j,u.push(S.x,S.y,S.z),d.push(0,D,0),b.x=.5*j+.5,b.y=.5*z*D+.5,m.push(b.x,b.y),f++}for(let B=0;B<s;B++){let V=_+B,j=O+B;y===!0?c.push(j,j+1,V):c.push(j+1,j,V),E+=3}h.addGroup(g,E,y===!0?1:2),g+=E}(function(){let y=new M,_=new M,b=0,S=(t-e)/i;for(let E=0;E<=r;E++){let P=[],D=E/r,O=D*(t-e)+e;for(let B=0;B<=s;B++){let V=B/s,j=V*l+o,z=Math.sin(j),q=Math.cos(j);_.x=O*z,_.y=-D*i+p,_.z=O*q,u.push(_.x,_.y,_.z),y.set(z,S,q).normalize(),d.push(y.x,y.y,y.z),m.push(V,1-D),P.push(f++)}v.push(P)}for(let E=0;E<s;E++)for(let P=0;P<r;P++){let D=v[P][E],O=v[P+1][E],B=v[P+1][E+1],V=v[P][E+1];(e>0||P!==0)&&(c.push(D,O,V),b+=3),(t>0||P!==r-1)&&(c.push(O,B,V),b+=3)}h.addGroup(g,b,0),g+=b})(),a===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(c),this.setAttribute("position",new _e(u,3)),this.setAttribute("normal",new _e(d,3)),this.setAttribute("uv",new _e(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}},eo=class n extends _n{constructor(e=1,t=1,i=32,s=1,r=!1,a=0,o=2*Math.PI){super(0,e,t,i,s,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new n(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}},ns=class n extends We{constructor(e=[],t=[],i=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:s};let r=[],a=[];function o(d,m,f,v){let p=v+1,g=[];for(let x=0;x<=p;x++){g[x]=[];let y=d.clone().lerp(f,x/p),_=m.clone().lerp(f,x/p),b=p-x;for(let S=0;S<=b;S++)g[x][S]=S===0&&x===p?y:y.clone().lerp(_,S/b)}for(let x=0;x<p;x++)for(let y=0;y<2*(p-x)-1;y++){let _=Math.floor(y/2);y%2==0?(l(g[x][_+1]),l(g[x+1][_]),l(g[x][_])):(l(g[x][_+1]),l(g[x+1][_+1]),l(g[x+1][_]))}}function l(d){r.push(d.x,d.y,d.z)}function h(d,m){let f=3*d;m.x=e[f+0],m.y=e[f+1],m.z=e[f+2]}function c(d,m,f,v){v<0&&d.x===1&&(a[m]=d.x-1),f.x===0&&f.z===0&&(a[m]=v/2/Math.PI+.5)}function u(d){return Math.atan2(d.z,-d.x)}(function(d){let m=new M,f=new M,v=new M;for(let p=0;p<t.length;p+=3)h(t[p+0],m),h(t[p+1],f),h(t[p+2],v),o(m,f,v,d)})(s),function(d){let m=new M;for(let f=0;f<r.length;f+=3)m.x=r[f+0],m.y=r[f+1],m.z=r[f+2],m.normalize().multiplyScalar(d),r[f+0]=m.x,r[f+1]=m.y,r[f+2]=m.z}(i),function(){let d=new M;for(let f=0;f<r.length;f+=3){d.x=r[f+0],d.y=r[f+1],d.z=r[f+2];let v=u(d)/2/Math.PI+.5,p=(m=d,Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))/Math.PI+.5);a.push(v,1-p)}var m;(function(){let f=new M,v=new M,p=new M,g=new M,x=new G,y=new G,_=new G;for(let b=0,S=0;b<r.length;b+=9,S+=6){f.set(r[b+0],r[b+1],r[b+2]),v.set(r[b+3],r[b+4],r[b+5]),p.set(r[b+6],r[b+7],r[b+8]),x.set(a[S+0],a[S+1]),y.set(a[S+2],a[S+3]),_.set(a[S+4],a[S+5]),g.copy(f).add(v).add(p).divideScalar(3);let E=u(g);c(x,S+0,f,E),c(y,S+2,v,E),c(_,S+4,p,E)}})(),function(){for(let f=0;f<a.length;f+=6){let v=a[f+0],p=a[f+2],g=a[f+4],x=Math.max(v,p,g),y=Math.min(v,p,g);x>.9&&y<.1&&(v<.2&&(a[f+0]+=1),p<.2&&(a[f+2]+=1),g<.2&&(a[f+4]+=1))}}()}(),this.setAttribute("position",new _e(r,3)),this.setAttribute("normal",new _e(r.slice(),3)),this.setAttribute("uv",new _e(a,2)),s===0?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.vertices,e.indices,e.radius,e.details)}},to=class n extends ns{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,s=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-s,-i,0,-s,i,0,s,-i,0,s,i,-s,-i,0,-s,i,0,s,-i,0,s,i,0,-i,0,-s,i,0,-s,-i,0,s,i,0,s],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new n(e.radius,e.detail)}},Aa=new M,Pa=new M,dh=new M,Ra=new Ii,so=class extends We{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){let s=Math.pow(10,4),r=Math.cos(ur*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,h=[0,0,0],c=["a","b","c"],u=new Array(3),d={},m=[];for(let f=0;f<l;f+=3){a?(h[0]=a.getX(f),h[1]=a.getX(f+1),h[2]=a.getX(f+2)):(h[0]=f,h[1]=f+1,h[2]=f+2);let{a:v,b:p,c:g}=Ra;if(v.fromBufferAttribute(o,h[0]),p.fromBufferAttribute(o,h[1]),g.fromBufferAttribute(o,h[2]),Ra.getNormal(dh),u[0]=`${Math.round(v.x*s)},${Math.round(v.y*s)},${Math.round(v.z*s)}`,u[1]=`${Math.round(p.x*s)},${Math.round(p.y*s)},${Math.round(p.z*s)}`,u[2]=`${Math.round(g.x*s)},${Math.round(g.y*s)},${Math.round(g.z*s)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let x=0;x<3;x++){let y=(x+1)%3,_=u[x],b=u[y],S=Ra[c[x]],E=Ra[c[y]],P=`${_}_${b}`,D=`${b}_${_}`;D in d&&d[D]?(dh.dot(d[D].normal)<=r&&(m.push(S.x,S.y,S.z),m.push(E.x,E.y,E.z)),d[D]=null):P in d||(d[P]={index0:h[x],index1:h[y],normal:dh.clone()})}}for(let f in d)if(d[f]){let{index0:v,index1:p}=d[f];Aa.fromBufferAttribute(o,v),Pa.fromBufferAttribute(o,p),m.push(Aa.x,Aa.y,Aa.z),m.push(Pa.x,Pa.y,Pa.z)}this.setAttribute("position",new _e(m,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}},bn=class extends xr{constructor(e){super(e),this.uuid=Wi(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,s=this.holes.length;i<s;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let s=e.holes[t];this.holes.push(s.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let s=this.holes[t];e.holes.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let s=e.holes[t];this.holes.push(new xr().fromJSON(s))}return this}},If=function(n,e,t=2){let i=e&&e.length,s=i?e[0]*t:n.length,r=Ju(n,0,s,t,!0),a=[];if(!r||r.next===r.prev)return a;let o,l,h,c,u,d,m;if(i&&(r=function(f,v,p,g){let x=[],y,_,b,S,E;for(y=0,_=v.length;y<_;y++)b=v[y]*g,S=y<_-1?v[y+1]*g:f.length,E=Ju(f,b,S,g,!1),E===E.next&&(E.steiner=!0),x.push(Vf(E));for(x.sort(kf),y=0;y<x.length;y++)p=Nf(x[y],p);return p}(n,e,r,t)),n.length>80*t){o=h=n[0],l=c=n[1];for(let f=t;f<s;f+=t)u=n[f],d=n[f+1],u<o&&(o=u),d<l&&(l=d),u>h&&(h=u),d>c&&(c=d);m=Math.max(h-o,c-l),m=m!==0?32767/m:0}return Sn(r,a,t,o,l,m,0),a};function Ju(n,e,t,i,s){let r,a;if(s===function(o,l,h,c){let u=0;for(let d=l,m=h-c;d<h;d+=c)u+=(o[m]-o[d])*(o[d+1]+o[m+1]),m=d;return u}(n,e,t,i)>0)for(r=e;r<t;r+=i)a=$u(r,n[r],n[r+1],a);else for(r=t-i;r>=e;r-=i)a=$u(r,n[r],n[r+1],a);return a&&Ko(a,a.next)&&(wn(a),a=a.next),a}function As(n,e){if(!n)return n;e||(e=n);let t,i=n;do if(t=!1,i.steiner||!Ko(i,i.next)&&ht(i.prev,i,i.next)!==0)i=i.next;else{if(wn(i),i=e=i.prev,i===i.next)break;t=!0}while(t||i!==e);return e}function Sn(n,e,t,i,s,r,a){if(!n)return;!a&&r&&function(c,u,d,m){let f=c;do f.z===0&&(f.z=bh(f.x,f.y,u,d,m)),f.prevZ=f.prev,f.nextZ=f.next,f=f.next;while(f!==c);f.prevZ.nextZ=null,f.prevZ=null,function(v){let p,g,x,y,_,b,S,E,P=1;do{for(g=v,v=null,_=null,b=0;g;){for(b++,x=g,S=0,p=0;p<P&&(S++,x=x.nextZ,x);p++);for(E=P;S>0||E>0&&x;)S!==0&&(E===0||!x||g.z<=x.z)?(y=g,g=g.nextZ,S--):(y=x,x=x.nextZ,E--),_?_.nextZ=y:v=y,y.prevZ=_,_=y;g=x}_.nextZ=null,P*=2}while(b>1)}(f)}(n,i,s,r);let o,l,h=n;for(;n.prev!==n.next;)if(o=n.prev,l=n.next,r?Ff(n,i,s,r):Uf(n))e.push(o.i/t|0),e.push(n.i/t|0),e.push(l.i/t|0),wn(n),n=l.next,h=l.next;else if((n=l)===h){a?a===1?Sn(n=Bf(As(n),e,t),e,t,i,s,r,2):a===2&&Of(n,e,t,i,s,r):Sn(As(n),e,t,i,s,r,1);break}}function Uf(n){let e=n.prev,t=n,i=n.next;if(ht(e,t,i)>=0)return!1;let s=e.x,r=t.x,a=i.x,o=e.y,l=t.y,h=i.y,c=s<r?s<a?s:a:r<a?r:a,u=o<l?o<h?o:h:l<h?l:h,d=s>r?s>a?s:a:r>a?r:a,m=o>l?o>h?o:h:l>h?l:h,f=i.next;for(;f!==e;){if(f.x>=c&&f.x<=d&&f.y>=u&&f.y<=m&&cr(s,o,r,l,a,h,f.x,f.y)&&ht(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function Ff(n,e,t,i){let s=n.prev,r=n,a=n.next;if(ht(s,r,a)>=0)return!1;let o=s.x,l=r.x,h=a.x,c=s.y,u=r.y,d=a.y,m=o<l?o<h?o:h:l<h?l:h,f=c<u?c<d?c:d:u<d?u:d,v=o>l?o>h?o:h:l>h?l:h,p=c>u?c>d?c:d:u>d?u:d,g=bh(m,f,e,t,i),x=bh(v,p,e,t,i),y=n.prevZ,_=n.nextZ;for(;y&&y.z>=g&&_&&_.z<=x;){if(y.x>=m&&y.x<=v&&y.y>=f&&y.y<=p&&y!==s&&y!==a&&cr(o,c,l,u,h,d,y.x,y.y)&&ht(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=m&&_.x<=v&&_.y>=f&&_.y<=p&&_!==s&&_!==a&&cr(o,c,l,u,h,d,_.x,_.y)&&ht(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=m&&y.x<=v&&y.y>=f&&y.y<=p&&y!==s&&y!==a&&cr(o,c,l,u,h,d,y.x,y.y)&&ht(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=m&&_.x<=v&&_.y>=f&&_.y<=p&&_!==s&&_!==a&&cr(o,c,l,u,h,d,_.x,_.y)&&ht(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function Bf(n,e,t){let i=n;do{let s=i.prev,r=i.next.next;!Ko(s,r)&&ap(s,i,i.next,r)&&Mn(s,r)&&Mn(r,s)&&(e.push(s.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),wn(i),wn(i.next),i=n=r),i=i.next}while(i!==n);return As(i)}function Of(n,e,t,i,s,r){let a=n;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&zf(a,o)){let l=op(a,o);return a=As(a,a.next),l=As(l,l.next),Sn(a,e,t,i,s,r,0),void Sn(l,e,t,i,s,r,0)}o=o.next}a=a.next}while(a!==n)}function kf(n,e){return n.x-e.x}function Nf(n,e){let t=function(s,r){let a,o=r,l=-1/0,h=s.x,c=s.y;do{if(c<=o.y&&c>=o.next.y&&o.next.y!==o.y){let p=o.x+(c-o.y)*(o.next.x-o.x)/(o.next.y-o.y);if(p<=h&&p>l&&(l=p,a=o.x<o.next.x?o:o.next,p===h))return a}o=o.next}while(o!==r);if(!a)return null;let u=a,d=a.x,m=a.y,f,v=1/0;o=a;do h>=o.x&&o.x>=d&&h!==o.x&&cr(c<m?h:l,c,d,m,c<m?l:h,c,o.x,o.y)&&(f=Math.abs(c-o.y)/(h-o.x),Mn(o,s)&&(f<v||f===v&&(o.x>a.x||o.x===a.x&&Gf(a,o)))&&(a=o,v=f)),o=o.next;while(o!==u);return a}(n,e);if(!t)return e;let i=op(t,n);return As(i,i.next),As(t,t.next)}function Gf(n,e){return ht(n.prev,n,e.prev)<0&&ht(e.next,n,n.next)<0}function bh(n,e,t,i,s){return(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=(n-t)*s|0)|n<<8))|n<<4))|n<<2))|n<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*s|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Vf(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function cr(n,e,t,i,s,r,a,o){return(s-a)*(e-o)>=(n-a)*(r-o)&&(n-a)*(i-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(s-a)*(i-o)}function zf(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!function(t,i){let s=t;do{if(s.i!==t.i&&s.next.i!==t.i&&s.i!==i.i&&s.next.i!==i.i&&ap(s,s.next,t,i))return!0;s=s.next}while(s!==t);return!1}(n,e)&&(Mn(n,e)&&Mn(e,n)&&function(t,i){let s=t,r=!1,a=(t.x+i.x)/2,o=(t.y+i.y)/2;do s.y>o!=s.next.y>o&&s.next.y!==s.y&&a<(s.next.x-s.x)*(o-s.y)/(s.next.y-s.y)+s.x&&(r=!r),s=s.next;while(s!==t);return r}(n,e)&&(ht(n.prev,n,e.prev)||ht(n,e.prev,e))||Ko(n,e)&&ht(n.prev,n,n.next)>0&&ht(e.prev,e,e.next)>0)}function ht(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Ko(n,e){return n.x===e.x&&n.y===e.y}function ap(n,e,t,i){let s=La(ht(n,e,t)),r=La(ht(n,e,i)),a=La(ht(t,i,n)),o=La(ht(t,i,e));return s!==r&&a!==o||!(s!==0||!Da(n,t,e))||!(r!==0||!Da(n,i,e))||!(a!==0||!Da(t,n,i))||!(o!==0||!Da(t,e,i))}function Da(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function La(n){return n>0?1:n<0?-1:0}function Mn(n,e){return ht(n.prev,n,n.next)<0?ht(n,e,n.next)>=0&&ht(n,n.prev,e)>=0:ht(n,e,n.prev)<0||ht(n,n.next,e)<0}function op(n,e){let t=new Sh(n.i,n.x,n.y),i=new Sh(e.i,e.x,e.y),s=n.next,r=e.prev;return n.next=e,e.prev=n,t.next=s,s.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function $u(n,e,t,i){let s=new Sh(n,e,t);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function wn(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function Sh(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}var hi=class n{static area(e){let t=e.length,i=0;for(let s=t-1,r=0;r<t;s=r++)i+=e[s].x*e[r].y-e[r].x*e[s].y;return .5*i}static isClockWise(e){return n.area(e)<0}static triangulateShape(e,t){let i=[],s=[],r=[];ed(e),td(i,e);let a=e.length;t.forEach(ed);for(let l=0;l<t.length;l++)s.push(a),a+=t[l].length,td(i,t[l]);let o=If(i,s);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}};function ed(n){let e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function td(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}var ro=class n extends We{constructor(e=new bn([new G(.5,.5),new G(-.5,.5),new G(-.5,-.5),new G(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,s=[],r=[];for(let o=0,l=e.length;o<l;o++)a(e[o]);function a(o){let l=[],h=t.curveSegments!==void 0?t.curveSegments:12,c=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1,d=t.bevelEnabled===void 0||t.bevelEnabled,m=t.bevelThickness!==void 0?t.bevelThickness:.2,f=t.bevelSize!==void 0?t.bevelSize:m-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,p=t.bevelSegments!==void 0?t.bevelSegments:3,g=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:Hf,y,_,b,S,E,P=!1;g&&(y=g.getSpacedPoints(c),P=!0,d=!1,_=g.computeFrenetFrames(c,!1),b=new M,S=new M,E=new M),d||(p=0,m=0,f=0,v=0);let D=o.extractPoints(h),O=D.shape,B=D.holes;if(!hi.isClockWise(O)){O=O.reverse();for(let F=0,R=B.length;F<R;F++){let I=B[F];hi.isClockWise(I)&&(B[F]=I.reverse())}}let V=hi.triangulateShape(O,B),j=O;for(let F=0,R=B.length;F<R;F++){let I=B[F];O=O.concat(I)}function z(F,R,I){return R||console.error("THREE.ExtrudeGeometry: vec does not exist"),F.clone().addScaledVector(R,I)}let q=O.length,K=V.length;function $(F,R,I){let w,L,H,te=F.x-R.x,N=F.y-R.y,Q=I.x-F.x,Z=I.y-F.y,se=te*te+N*N,xe=te*Z-N*Q;if(Math.abs(xe)>Number.EPSILON){let fe=Math.sqrt(se),Se=Math.sqrt(Q*Q+Z*Z),Ee=R.x-N/fe,He=R.y+te/fe,Ne=((I.x-Z/Se-Ee)*Z-(I.y+Q/Se-He)*Q)/(te*Z-N*Q);w=Ee+te*Ne-F.x,L=He+N*Ne-F.y;let Me=w*w+L*L;if(Me<=2)return new G(w,L);H=Math.sqrt(Me/2)}else{let fe=!1;te>Number.EPSILON?Q>Number.EPSILON&&(fe=!0):te<-Number.EPSILON?Q<-Number.EPSILON&&(fe=!0):Math.sign(N)===Math.sign(Z)&&(fe=!0),fe?(w=-N,L=te,H=Math.sqrt(se)):(w=te,L=N,H=Math.sqrt(se/2))}return new G(w/H,L/H)}let ee=[];for(let F=0,R=j.length,I=R-1,w=F+1;F<R;F++,I++,w++)I===R&&(I=0),w===R&&(w=0),ee[F]=$(j[F],j[I],j[w]);let le=[],me,J=ee.concat();for(let F=0,R=B.length;F<R;F++){let I=B[F];me=[];for(let w=0,L=I.length,H=L-1,te=w+1;w<L;w++,H++,te++)H===L&&(H=0),te===L&&(te=0),me[w]=$(I[w],I[H],I[te]);le.push(me),J=J.concat(me)}for(let F=0;F<p;F++){let R=F/p,I=m*Math.cos(R*Math.PI/2),w=f*Math.sin(R*Math.PI/2)+v;for(let L=0,H=j.length;L<H;L++){let te=z(j[L],ee[L],w);de(te.x,te.y,-I)}for(let L=0,H=B.length;L<H;L++){let te=B[L];me=le[L];for(let N=0,Q=te.length;N<Q;N++){let Z=z(te[N],me[N],w);de(Z.x,Z.y,-I)}}}let re=f+v;for(let F=0;F<q;F++){let R=d?z(O[F],J[F],re):O[F];P?(S.copy(_.normals[0]).multiplyScalar(R.x),b.copy(_.binormals[0]).multiplyScalar(R.y),E.copy(y[0]).add(S).add(b),de(E.x,E.y,E.z)):de(R.x,R.y,0)}for(let F=1;F<=c;F++)for(let R=0;R<q;R++){let I=d?z(O[R],J[R],re):O[R];P?(S.copy(_.normals[F]).multiplyScalar(I.x),b.copy(_.binormals[F]).multiplyScalar(I.y),E.copy(y[F]).add(S).add(b),de(E.x,E.y,E.z)):de(I.x,I.y,u/c*F)}for(let F=p-1;F>=0;F--){let R=F/p,I=m*Math.cos(R*Math.PI/2),w=f*Math.sin(R*Math.PI/2)+v;for(let L=0,H=j.length;L<H;L++){let te=z(j[L],ee[L],w);de(te.x,te.y,u+I)}for(let L=0,H=B.length;L<H;L++){let te=B[L];me=le[L];for(let N=0,Q=te.length;N<Q;N++){let Z=z(te[N],me[N],w);P?de(Z.x,Z.y+y[c-1].y,y[c-1].x+I):de(Z.x,Z.y,u+I)}}}function ce(F,R){let I=F.length;for(;--I>=0;){let w=I,L=I-1;L<0&&(L=F.length-1);for(let H=0,te=c+2*p;H<te;H++){let N=q*H,Q=q*(H+1);A(R+w+N,R+L+N,R+L+Q,R+w+Q)}}}function de(F,R,I){l.push(F),l.push(R),l.push(I)}function ae(F,R,I){C(F),C(R),C(I);let w=s.length/3,L=x.generateTopUV(i,s,w-3,w-2,w-1);U(L[0]),U(L[1]),U(L[2])}function A(F,R,I,w){C(F),C(R),C(w),C(R),C(I),C(w);let L=s.length/3,H=x.generateSideWallUV(i,s,L-6,L-3,L-2,L-1);U(H[0]),U(H[1]),U(H[3]),U(H[1]),U(H[2]),U(H[3])}function C(F){s.push(l[3*F+0]),s.push(l[3*F+1]),s.push(l[3*F+2])}function U(F){r.push(F.x),r.push(F.y)}(function(){let F=s.length/3;if(d){let R=0,I=q*R;for(let w=0;w<K;w++){let L=V[w];ae(L[2]+I,L[1]+I,L[0]+I)}R=c+2*p,I=q*R;for(let w=0;w<K;w++){let L=V[w];ae(L[0]+I,L[1]+I,L[2]+I)}}else{for(let R=0;R<K;R++){let I=V[R];ae(I[2],I[1],I[0])}for(let R=0;R<K;R++){let I=V[R];ae(I[0]+q*c,I[1]+q*c,I[2]+q*c)}}i.addGroup(F,s.length/3-F,0)})(),function(){let F=s.length/3,R=0;ce(j,R),R+=j.length;for(let I=0,w=B.length;I<w;I++){let L=B[I];ce(L,R),R+=L.length}i.addGroup(F,s.length/3-F,1)}()}this.setAttribute("position",new _e(s,3)),this.setAttribute("uv",new _e(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(t,i,s){if(s.shapes=[],Array.isArray(t))for(let r=0,a=t.length;r<a;r++){let o=t[r];s.shapes.push(o.uuid)}else s.shapes.push(t.uuid);return s.options=Object.assign({},i),i.extrudePath!==void 0&&(s.options.extrudePath=i.extrudePath.toJSON()),s}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){let i=[];for(let r=0,a=e.shapes.length;r<a;r++){let o=t[e.shapes[r]];i.push(o)}let s=e.options.extrudePath;return s!==void 0&&(e.options.extrudePath=new Za[s.type]().fromJSON(s)),new n(i,e.options)}},Hf={generateTopUV:function(n,e,t,i,s){let r=e[3*t],a=e[3*t+1],o=e[3*i],l=e[3*i+1],h=e[3*s],c=e[3*s+1];return[new G(r,a),new G(o,l),new G(h,c)]},generateSideWallUV:function(n,e,t,i,s,r){let a=e[3*t],o=e[3*t+1],l=e[3*t+2],h=e[3*i],c=e[3*i+1],u=e[3*i+2],d=e[3*s],m=e[3*s+1],f=e[3*s+2],v=e[3*r],p=e[3*r+1],g=e[3*r+2];return Math.abs(o-c)<Math.abs(a-h)?[new G(a,1-l),new G(h,1-u),new G(d,1-f),new G(v,1-g)]:[new G(o,1-l),new G(c,1-u),new G(m,1-f),new G(p,1-g)]}},no=class n extends ns{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new n(e.radius,e.detail)}},ao=class n extends ns{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new n(e.radius,e.detail)}},yr=class n extends We{constructor(e=1,t=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:s};let r=e/2,a=t/2,o=Math.floor(i),l=Math.floor(s),h=o+1,c=l+1,u=e/o,d=t/l,m=[],f=[],v=[],p=[];for(let g=0;g<c;g++){let x=g*d-a;for(let y=0;y<h;y++){let _=y*u-r;f.push(_,-x,0),v.push(0,0,1),p.push(y/o),p.push(1-g/l)}}for(let g=0;g<l;g++)for(let x=0;x<o;x++){let y=x+h*g,_=x+h*(g+1),b=x+1+h*(g+1),S=x+1+h*g;m.push(y,_,S),m.push(_,b,S)}this.setIndex(m),this.setAttribute("position",new _e(f,3)),this.setAttribute("normal",new _e(v,3)),this.setAttribute("uv",new _e(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.width,e.height,e.widthSegments,e.heightSegments)}},oo=class n extends We{constructor(e=.5,t=1,i=32,s=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:s,thetaStart:r,thetaLength:a},i=Math.max(3,i);let o=[],l=[],h=[],c=[],u=e,d=(t-e)/(s=Math.max(1,s)),m=new M,f=new G;for(let v=0;v<=s;v++){for(let p=0;p<=i;p++){let g=r+p/i*a;m.x=u*Math.cos(g),m.y=u*Math.sin(g),l.push(m.x,m.y,m.z),h.push(0,0,1),f.x=(m.x/t+1)/2,f.y=(m.y/t+1)/2,c.push(f.x,f.y)}u+=d}for(let v=0;v<s;v++){let p=v*(i+1);for(let g=0;g<i;g++){let x=g+p,y=x,_=x+i+1,b=x+i+2,S=x+1;o.push(y,_,S),o.push(_,b,S)}}this.setIndex(o),this.setAttribute("position",new _e(l,3)),this.setAttribute("normal",new _e(h,3)),this.setAttribute("uv",new _e(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}},lo=class n extends We{constructor(e=new bn([new G(0,.5),new G(-.5,-.5),new G(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],s=[],r=[],a=[],o=0,l=0;if(Array.isArray(e)===!1)h(e);else for(let c=0;c<e.length;c++)h(e[c]),this.addGroup(o,l,c),o+=l,l=0;function h(c){let u=s.length/3,d=c.extractPoints(t),m=d.shape,f=d.holes;hi.isClockWise(m)===!1&&(m=m.reverse());for(let p=0,g=f.length;p<g;p++){let x=f[p];hi.isClockWise(x)===!0&&(f[p]=x.reverse())}let v=hi.triangulateShape(m,f);for(let p=0,g=f.length;p<g;p++){let x=f[p];m=m.concat(x)}for(let p=0,g=m.length;p<g;p++){let x=m[p];s.push(x.x,x.y,0),r.push(0,0,1),a.push(x.x,x.y)}for(let p=0,g=v.length;p<g;p++){let x=v[p],y=x[0]+u,_=x[1]+u,b=x[2]+u;i.push(y,_,b),l+=3}}this.setIndex(i),this.setAttribute("position",new _e(s,3)),this.setAttribute("normal",new _e(r,3)),this.setAttribute("uv",new _e(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(t,i){if(i.shapes=[],Array.isArray(t))for(let s=0,r=t.length;s<r;s++){let a=t[s];i.shapes.push(a.uuid)}else i.shapes.push(t.uuid);return i}(this.parameters.shapes,e)}static fromJSON(e,t){let i=[];for(let s=0,r=e.shapes.length;s<r;s++){let a=t[e.shapes[s]];i.push(a)}return new n(i,e.curveSegments)}},ho=class n extends We{constructor(e=1,t=32,i=16,s=0,r=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let l=Math.min(a+o,Math.PI),h=0,c=[],u=new M,d=new M,m=[],f=[],v=[],p=[];for(let g=0;g<=i;g++){let x=[],y=g/i,_=0;g===0&&a===0?_=.5/t:g===i&&l===Math.PI&&(_=-.5/t);for(let b=0;b<=t;b++){let S=b/t;u.x=-e*Math.cos(s+S*r)*Math.sin(a+y*o),u.y=e*Math.cos(a+y*o),u.z=e*Math.sin(s+S*r)*Math.sin(a+y*o),f.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),p.push(S+_,1-y),x.push(h++)}c.push(x)}for(let g=0;g<i;g++)for(let x=0;x<t;x++){let y=c[g][x+1],_=c[g][x],b=c[g+1][x],S=c[g+1][x+1];(g!==0||a>0)&&m.push(y,_,S),(g!==i-1||l<Math.PI)&&m.push(_,b,S)}this.setIndex(m),this.setAttribute("position",new _e(f,3)),this.setAttribute("normal",new _e(v,3)),this.setAttribute("uv",new _e(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}},co=class n extends ns{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new n(e.radius,e.detail)}},uo=class n extends We{constructor(e=1,t=.4,i=12,s=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:s,arc:r},i=Math.floor(i),s=Math.floor(s);let a=[],o=[],l=[],h=[],c=new M,u=new M,d=new M;for(let m=0;m<=i;m++)for(let f=0;f<=s;f++){let v=f/s*r,p=m/i*Math.PI*2;u.x=(e+t*Math.cos(p))*Math.cos(v),u.y=(e+t*Math.cos(p))*Math.sin(v),u.z=t*Math.sin(p),o.push(u.x,u.y,u.z),c.x=e*Math.cos(v),c.y=e*Math.sin(v),d.subVectors(u,c).normalize(),l.push(d.x,d.y,d.z),h.push(f/s),h.push(m/i)}for(let m=1;m<=i;m++)for(let f=1;f<=s;f++){let v=(s+1)*m+f-1,p=(s+1)*(m-1)+f-1,g=(s+1)*(m-1)+f,x=(s+1)*m+f;a.push(v,p,x),a.push(p,g,x)}this.setIndex(a),this.setAttribute("position",new _e(o,3)),this.setAttribute("normal",new _e(l,3)),this.setAttribute("uv",new _e(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}},po=class n extends We{constructor(e=1,t=.4,i=64,s=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:s,p:r,q:a},i=Math.floor(i),s=Math.floor(s);let o=[],l=[],h=[],c=[],u=new M,d=new M,m=new M,f=new M,v=new M,p=new M,g=new M;for(let y=0;y<=i;++y){let _=y/i*r*Math.PI*2;x(_,r,a,e,m),x(_+.01,r,a,e,f),p.subVectors(f,m),g.addVectors(f,m),v.crossVectors(p,g),g.crossVectors(v,p),v.normalize(),g.normalize();for(let b=0;b<=s;++b){let S=b/s*Math.PI*2,E=-t*Math.cos(S),P=t*Math.sin(S);u.x=m.x+(E*g.x+P*v.x),u.y=m.y+(E*g.y+P*v.y),u.z=m.z+(E*g.z+P*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,m).normalize(),h.push(d.x,d.y,d.z),c.push(y/i),c.push(b/s)}}for(let y=1;y<=i;y++)for(let _=1;_<=s;_++){let b=(s+1)*(y-1)+(_-1),S=(s+1)*y+(_-1),E=(s+1)*y+_,P=(s+1)*(y-1)+_;o.push(b,S,P),o.push(S,E,P)}function x(y,_,b,S,E){let P=Math.cos(y),D=Math.sin(y),O=b/_*y,B=Math.cos(O);E.x=S*(2+B)*.5*P,E.y=S*(2+B)*D*.5,E.z=S*Math.sin(O)*.5}this.setIndex(o),this.setAttribute("position",new _e(l,3)),this.setAttribute("normal",new _e(h,3)),this.setAttribute("uv",new _e(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}},mo=class n extends We{constructor(e=new vn(new M(-1,-1,0),new M(-1,1,0),new M(1,1,0)),t=64,i=1,s=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:s,closed:r};let a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let o=new M,l=new M,h=new G,c=new M,u=[],d=[],m=[],f=[];function v(p){c=e.getPointAt(p/t,c);let g=a.normals[p],x=a.binormals[p];for(let y=0;y<=s;y++){let _=y/s*Math.PI*2,b=Math.sin(_),S=-Math.cos(_);l.x=S*g.x+b*x.x,l.y=S*g.y+b*x.y,l.z=S*g.z+b*x.z,l.normalize(),d.push(l.x,l.y,l.z),o.x=c.x+i*l.x,o.y=c.y+i*l.y,o.z=c.z+i*l.z,u.push(o.x,o.y,o.z)}}(function(){for(let p=0;p<t;p++)v(p);v(r===!1?t:0),function(){for(let p=0;p<=t;p++)for(let g=0;g<=s;g++)h.x=p/t,h.y=g/s,m.push(h.x,h.y)}(),function(){for(let p=1;p<=t;p++)for(let g=1;g<=s;g++){let x=(s+1)*(p-1)+(g-1),y=(s+1)*p+(g-1),_=(s+1)*p+g,b=(s+1)*(p-1)+g;f.push(x,y,b),f.push(y,_,b)}}()})(),this.setIndex(f),this.setAttribute("position",new _e(u,3)),this.setAttribute("normal",new _e(d,3)),this.setAttribute("uv",new _e(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new n(new Za[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}},fo=class extends We{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){let t=[],i=new Set,s=new M,r=new M;if(e.index!==null){let a=e.attributes.position,o=e.index,l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let h=0,c=l.length;h<c;++h){let u=l[h],d=u.start;for(let m=d,f=d+u.count;m<f;m+=3)for(let v=0;v<3;v++){let p=o.getX(m+v),g=o.getX(m+(v+1)%3);s.fromBufferAttribute(a,p),r.fromBufferAttribute(a,g),id(s,r,i)===!0&&(t.push(s.x,s.y,s.z),t.push(r.x,r.y,r.z))}}}else{let a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let h=0;h<3;h++){let c=3*o+h,u=3*o+(h+1)%3;s.fromBufferAttribute(a,c),r.fromBufferAttribute(a,u),id(s,r,i)===!0&&(t.push(s.x,s.y,s.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new _e(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}};function id(n,e,t){let i=`${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,s=`${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;return t.has(i)!==!0&&t.has(s)!==!0&&(t.add(i),t.add(s),!0)}var O0=Object.freeze({__proto__:null,BoxGeometry:Ms,CapsuleGeometry:Ja,CircleGeometry:$a,ConeGeometry:eo,CylinderGeometry:_n,DodecahedronGeometry:to,EdgesGeometry:so,ExtrudeGeometry:ro,IcosahedronGeometry:no,LatheGeometry:yn,OctahedronGeometry:ao,PlaneGeometry:yr,PolyhedronGeometry:ns,RingGeometry:oo,ShapeGeometry:lo,SphereGeometry:ho,TetrahedronGeometry:co,TorusGeometry:uo,TorusKnotGeometry:po,TubeGeometry:mo,WireframeGeometry:fo});var Cn=class extends Jt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new he(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ye,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};var Ps=class extends Jt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new he(16777215),this.specular=new he(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ye,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};var Tn=class extends Jt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ye,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},go=class extends Jt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},vo=class extends Jt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};function Ia(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)}function Wf(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function jf(n){let e=n.length,t=new Array(e);for(let i=0;i!==e;++i)t[i]=i;return t.sort(function(i,s){return n[i]-n[s]}),t}function sd(n,e,t){let i=n.length,s=new n.constructor(i);for(let r=0,a=0;a!==i;++r){let o=t[r]*e;for(let l=0;l!==e;++l)s[a++]=n[o+l]}return s}function lp(n,e,t,i){let s=1,r=n[0];for(;r!==void 0&&r[i]===void 0;)r=n[s++];if(r===void 0)return;let a=r[i];if(a!==void 0)if(Array.isArray(a))do a=r[i],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=n[s++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[i],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=n[s++];while(r!==void 0);else do a=r[i],a!==void 0&&(e.push(r.time),t.push(a)),r=n[s++];while(r!==void 0)}var Rs=class{constructor(e,t,i,s){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,s=t[i],r=t[i-1];e:{t:{let a;i:{s:if(!(e<s)){for(let o=i+2;;){if(s===void 0){if(e<r)break s;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(r=s,s=t[++i],e<s)break t}a=t.length;break i}if(e>=r)break e;{let o=t[1];e<o&&(i=2,r=o);for(let l=i-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(s=r,r=t[--i-1],e>=r)break t}a=i,i=0}}for(;i<a;){let o=i+a>>>1;e<t[o]?a=o:i=o+1}if(s=t[i],r=t[i-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,s)}return this.interpolate_(i,r,e,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,s=this.valueSize,r=e*s;for(let a=0;a!==s;++a)t[a]=i[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}},xo=class extends Rs{constructor(e,t,i,s){super(e,t,i,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:gs,endingEnd:gs}}intervalChanged_(e,t,i){let s=this.parameterPositions,r=e-2,a=e+1,o=s[r],l=s[a];if(o===void 0)switch(this.getSettings_().endingStart){case vs:r=e,o=2*t-i;break;case Qr:r=s.length-2,o=t+s[r]-s[r+1];break;default:r=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case vs:a=e,l=2*i-t;break;case Qr:a=1,l=i+s[1]-s[0];break;default:a=e-1,l=t}let h=.5*(i-t),c=this.valueSize;this._weightPrev=h/(t-o),this._weightNext=h/(l-i),this._offsetPrev=r*c,this._offsetNext=a*c}interpolate_(e,t,i,s){let r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,c=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,m=this._weightNext,f=(i-t)/(s-t),v=f*f,p=v*f,g=-d*p+2*d*v-d*f,x=(1+d)*p+(-1.5-2*d)*v+(-.5+d)*f+1,y=(-1-m)*p+(1.5+m)*v+.5*f,_=m*p-m*v;for(let b=0;b!==o;++b)r[b]=g*a[c+b]+x*a[h+b]+y*a[l+b]+_*a[u+b];return r}},En=class extends Rs{constructor(e,t,i,s){super(e,t,i,s)}interpolate_(e,t,i,s){let r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,c=(i-t)/(s-t),u=1-c;for(let d=0;d!==o;++d)r[d]=a[h+d]*u+a[l+d]*c;return r}},yo=class extends Rs{constructor(e,t,i,s){super(e,t,i,s)}interpolate_(e){return this.copySampleValue_(e-1)}},jt=class{constructor(e,t,i,s){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ia(t,this.TimeBufferType),this.values=Ia(i,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Ia(e.times,Array),values:Ia(e.values,Array)};let s=e.getInterpolation();s!==e.DefaultInterpolation&&(i.interpolation=s)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new yo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new En(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new xo(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Zr:t=this.InterpolantFactoryMethodDiscrete;break;case Oa:t=this.InterpolantFactoryMethodLinear;break;case Ua:t=this.InterpolantFactoryMethodSmooth}if(t===void 0){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0){if(e===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Zr;case this.InterpolantFactoryMethodLinear:return Oa;case this.InterpolantFactoryMethodSmooth:return Ua}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){let t=this.times;for(let i=0,s=t.length;i!==s;++i)t[i]+=e}return this}scale(e){if(e!==1){let t=this.times;for(let i=0,s=t.length;i!==s;++i)t[i]*=e}return this}trim(e,t){let i=this.times,s=i.length,r=0,a=s-1;for(;r!==s&&i[r]<e;)++r;for(;a!==-1&&i[a]>t;)--a;if(++a,r!==0||a!==s){r>=a&&(a=Math.max(a,1),r=a-1);let o=this.getValueSize();this.times=i.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,s=this.values,r=i.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){let l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(s!==void 0&&Wf(s))for(let o=0,l=s.length;o!==l;++o){let h=s[o];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,h),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),s=this.getInterpolation()===Ua,r=e.length-1,a=1;for(let o=1;o<r;++o){let l=!1,h=e[o];if(h!==e[o+1]&&(o!==1||h!==e[0]))if(s)l=!0;else{let c=o*i,u=c-i,d=c+i;for(let m=0;m!==i;++m){let f=t[c+m];if(f!==t[u+m]||f!==t[d+m]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];let c=o*i,u=a*i;for(let d=0;d!==i;++d)t[u+d]=t[c+d]}++a}}if(r>0){e[a]=e[r];for(let o=r*i,l=a*i,h=0;h!==i;++h)t[l+h]=t[o+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*i)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),i=new this.constructor(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}};jt.prototype.TimeBufferType=Float32Array,jt.prototype.ValueBufferType=Float32Array,jt.prototype.DefaultInterpolation=Oa;var Ui=class extends jt{constructor(e,t,i){super(e,t,i)}};Ui.prototype.ValueTypeName="bool",Ui.prototype.ValueBufferType=Array,Ui.prototype.DefaultInterpolation=Zr,Ui.prototype.InterpolantFactoryMethodLinear=void 0,Ui.prototype.InterpolantFactoryMethodSmooth=void 0;var An=class extends jt{};An.prototype.ValueTypeName="color";var Gi=class extends jt{};Gi.prototype.ValueTypeName="number";var _o=class extends Rs{constructor(e,t,i,s){super(e,t,i,s)}interpolate_(e,t,i,s){let r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-t)/(s-t),h=e*o;for(let c=h+o;h!==c;h+=4)Ue.slerpFlat(r,0,a,h-o,a,h,l);return r}},_i=class extends jt{InterpolantFactoryMethodLinear(e){return new _o(this.times,this.values,this.getValueSize(),e)}};_i.prototype.ValueTypeName="quaternion",_i.prototype.InterpolantFactoryMethodSmooth=void 0;var Fi=class extends jt{constructor(e,t,i){super(e,t,i)}};Fi.prototype.ValueTypeName="string",Fi.prototype.ValueBufferType=Array,Fi.prototype.DefaultInterpolation=Zr,Fi.prototype.InterpolantFactoryMethodLinear=void 0,Fi.prototype.InterpolantFactoryMethodSmooth=void 0;var Vi=class extends jt{};Vi.prototype.ValueTypeName="vector";var Ds=class{constructor(e="",t=-1,i=[],s=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=s,this.uuid=Wi(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,s=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)t.push(Xf(i[a]).scale(s));let r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){let t=[],i=e.tracks,s={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=i.length;r!==a;++r)t.push(jt.toJSON(i[r]));return s}static CreateFromMorphTargetSequence(e,t,i,s){let r=t.length,a=[];for(let o=0;o<r;o++){let l=[],h=[];l.push((o+r-1)%r,o,(o+1)%r),h.push(0,1,0);let c=jf(l);l=sd(l,1,c),h=sd(h,1,c),s||l[0]!==0||(l.push(r),h.push(h[0])),a.push(new Gi(".morphTargetInfluences["+t[o].name+"]",l,h).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){let s=e;i=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<i.length;s++)if(i[s].name===t)return i[s];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let s={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){let h=e[o],c=h.name.match(r);if(c&&c.length>1){let u=c[1],d=s[u];d||(s[u]=d=[]),d.push(h)}}let a=[];for(let o in s)a.push(this.CreateFromMorphTargetSequence(o,s[o],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(c,u,d,m,f){if(d.length!==0){let v=[],p=[];lp(d,v,p,m),v.length!==0&&f.push(new c(u,v,p))}},s=[],r=e.name||"default",a=e.fps||30,o=e.blendMode,l=e.length||-1,h=e.hierarchy||[];for(let c=0;c<h.length;c++){let u=h[c].keys;if(u&&u.length!==0)if(u[0].morphTargets){let d={},m;for(m=0;m<u.length;m++)if(u[m].morphTargets)for(let f=0;f<u[m].morphTargets.length;f++)d[u[m].morphTargets[f]]=-1;for(let f in d){let v=[],p=[];for(let g=0;g!==u[m].morphTargets.length;++g){let x=u[m];v.push(x.time),p.push(x.morphTarget===f?1:0)}s.push(new Gi(".morphTargetInfluence["+f+"]",v,p))}l=d.length*a}else{let d=".bones["+t[c].name+"]";i(Vi,d+".position",u,"pos",s),i(_i,d+".quaternion",u,"rot",s),i(Vi,d+".scale",u,"scl",s)}}return s.length===0?null:new this(r,l,s,o)}resetDuration(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){let s=this.tracks[t];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}};function Xf(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");let e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Gi;case"vector":case"vector2":case"vector3":case"vector4":return Vi;case"color":return An;case"quaternion":return _i;case"bool":case"boolean":return Ui;case"string":return Fi}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(n.type);if(n.times===void 0){let t=[],i=[];lp(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}var Pn={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}},bo=class{constructor(e,t,i){let s=this,r,a=!1,o=0,l=0,h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(c){l++,a===!1&&s.onStart!==void 0&&s.onStart(c,o,l),a=!0},this.itemEnd=function(c){o++,s.onProgress!==void 0&&s.onProgress(c,o,l),o===l&&(a=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(c){s.onError!==void 0&&s.onError(c)},this.resolveURL=function(c){return r?r(c):c},this.setURLModifier=function(c){return r=c,this},this.addHandler=function(c,u){return h.push(c,u),this},this.removeHandler=function(c){let u=h.indexOf(c);return u!==-1&&h.splice(u,2),this},this.getHandler=function(c){for(let u=0,d=h.length;u<d;u+=2){let m=h[u],f=h[u+1];if(m.global&&(m.lastIndex=0),m.test(c))return f}return null}}},hp=new bo,ci=class{constructor(e){this.manager=e!==void 0?e:hp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(s,r){i.load(e,s,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};ci.DEFAULT_MATERIAL_NAME="__DEFAULT";var Li={},Mh=class extends Error{constructor(e,t){super(e),this.response=t}},Rn=class extends ci{constructor(e){super(e)}load(e,t,i,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);let r=Pn.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Li[e]!==void 0)return void Li[e].push({onLoad:t,onProgress:i,onError:s});Li[e]=[],Li[e].push({onLoad:t,onProgress:i,onError:s});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;let c=Li[e],u=h.body.getReader(),d=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),m=d?parseInt(d):0,f=m!==0,v=0,p=new ReadableStream({start(g){(function x(){u.read().then(({done:y,value:_})=>{if(y)g.close();else{v+=_.byteLength;let b=new ProgressEvent("progress",{lengthComputable:f,loaded:v,total:m});for(let S=0,E=c.length;S<E;S++){let P=c[S];P.onProgress&&P.onProgress(b)}g.enqueue(_),x()}},y=>{g.error(y)})})()}});return new Response(p)}throw new Mh(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(l){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(c=>new DOMParser().parseFromString(c,o));case"json":return h.json();default:if(o===void 0)return h.text();{let c=/charset="?([^;"\s]*)"?/i.exec(o),u=c&&c[1]?c[1].toLowerCase():void 0,d=new TextDecoder(u);return h.arrayBuffer().then(m=>d.decode(m))}}}).then(h=>{Pn.add(e,h);let c=Li[e];delete Li[e];for(let u=0,d=c.length;u<d;u++){let m=c[u];m.onLoad&&m.onLoad(h)}}).catch(h=>{let c=Li[e];if(c===void 0)throw this.manager.itemError(e),h;delete Li[e];for(let u=0,d=c.length;u<d;u++){let m=c[u];m.onError&&m.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}};var _r=class extends ci{constructor(e){super(e)}load(e,t,i,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=Pn.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let o=pr("img");function l(){c(),Pn.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(u){c(),s&&s(u),r.manager.itemError(e),r.manager.itemEnd(e)}function c(){o.removeEventListener("load",l,!1),o.removeEventListener("error",h,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}};var Dn=class extends ci{constructor(e){super(e)}load(e,t,i,s){let r=new mt,a=new _r(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},i,s),r}},Ls=class extends Ze{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new he(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}};var ph=new pe,rd=new M,nd=new M,Ln=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new G(512,512),this.map=null,this.mapPass=null,this.matrix=new pe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Es,this._frameExtents=new G(1,1),this._viewportCount=1,this._viewports=[new Ie(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;rd.setFromMatrixPosition(e.matrixWorld),t.position.copy(rd),nd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(nd),t.updateMatrixWorld(),ph.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ph),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(ph)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),this.mapSize.x===512&&this.mapSize.y===512||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},wh=class extends Ln{constructor(){super(new yt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,i=2*_s*e.angle*this.focus,s=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;i===t.fov&&s===t.aspect&&r===t.far||(t.fov=i,t.aspect=s,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}},In=class extends Ls{constructor(e,t,i=0,s=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ze.DEFAULT_UP),this.updateMatrix(),this.target=new Ze,this.distance=i,this.angle=s,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new wh}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},ad=new pe,Xr=new M,mh=new M,Ch=class extends Ln{constructor(){super(new yt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new G(4,2),this._viewportCount=6,this._viewports=[new Ie(2,1,1,1),new Ie(0,1,1,1),new Ie(3,1,1,1),new Ie(1,1,1,1),new Ie(3,0,1,1),new Ie(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,s=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),Xr.setFromMatrixPosition(e.matrixWorld),i.position.copy(Xr),mh.copy(i.position),mh.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(mh),i.updateMatrixWorld(),s.makeTranslation(-Xr.x,-Xr.y,-Xr.z),ad.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ad)}},br=class extends Ls{constructor(e,t,i=0,s=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=s,this.shadow=new Ch}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},Is=class extends mr{constructor(e=-1,t=1,i=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2,r=i-e,a=i+e,o=s+t,l=s-t;if(this.view!==null&&this.view.enabled){let h=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}},Th=class extends Ln{constructor(){super(new Is(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},Us=class extends Ls{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ze.DEFAULT_UP),this.updateMatrix(),this.target=new Ze,this.shadow=new Th}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},zi=class extends Ls{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}};var Un=class{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,s=e.length;i<s;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}};var k0=new pe,N0=new pe,G0=new pe;var So=class extends yt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},Fs=class{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=od(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=od();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}};function od(){return performance.now()}var V0=new M,z0=new Ue,H0=new M,W0=new M;var j0=new M,X0=new Ue,q0=new M,Y0=new M;var Mo=class{constructor(e,t,i){let s,r,a;switch(this.binding=e,this.valueSize=i,t){case"quaternion":s=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":s=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:s=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=s,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,s=this.valueSize,r=e*s+s,a=this.cumulativeWeight;if(a===0){for(let o=0;o!==s;++o)i[r+o]=i[o];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(i,r,0,o,s)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,s=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,s,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,s=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let l=t*this._origIndex;this._mixBufferRegion(i,s,l,1-r,t)}a>0&&this._mixBufferRegionAdditive(i,s,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(i[l]!==i[l+t]){o.setValue(i,s);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,s=i*this._origIndex;e.getValue(t,s);for(let r=i,a=s;r!==a;++r)t[r]=t[s+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,s,r){if(s>=.5)for(let a=0;a!==r;++a)e[t+a]=e[i+a]}_slerp(e,t,i,s){Ue.slerpFlat(e,t,e,t,e,i,s)}_slerpAdditive(e,t,i,s,r){let a=this._workIndex*r;Ue.multiplyQuaternionsFlat(e,a,e,t,e,i),Ue.slerpFlat(e,t,e,t,e,a,s)}_lerp(e,t,i,s,r){let a=1-s;for(let o=0;o!==r;++o){let l=t+o;e[l]=e[l]*a+e[i+o]*s}}_lerpAdditive(e,t,i,s,r){for(let a=0;a!==r;++a){let o=t+a;e[o]=e[o]+e[i+a]*s}}},mc="\\[\\]\\.:\\/",qf=new RegExp("["+mc+"]","g"),fh="[^"+mc+"]",Yf="[^"+mc.replace("\\.","")+"]",Kf=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",fh)+/(WCOD+)?/.source.replace("WCOD",Yf)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fh)+"$"),Zf=["material","materials","bones","map"],Xe=class n{constructor(e,t,i){this.path=t,this.parsedPath=i||n.parseTrackName(t),this.node=n.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new n.Composite(e,t,i):new n(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(qf,"")}static parseTrackName(e){let t=Kf.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},s=i.nodeName&&i.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){let r=i.nodeName.substring(s+1);Zf.indexOf(r)!==-1&&(i.nodeName=i.nodeName.substring(0,s),i.objectName=r)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){let i=function(r){for(let a=0;a<r.length;a++){let o=r[a];if(o.name===t||o.uuid===t)return o;let l=i(o.children);if(l)return l}return null},s=i(e.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)e[t++]=i[s]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,s=t.propertyName,r=t.propertyIndex;if(e||(e=n.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(i){let h=t.objectIndex;switch(i){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let c=0;c<e.length;c++)if(e[c].name===h){h=c;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(e[i]===void 0)return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[i]}if(h!==void 0){if(e[h]===void 0)return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[h]}}let a=e[s];if(a===void 0){let h=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+s+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};Xe.Composite=class{constructor(n,e,t){let i=t||Xe.parseTrackName(e);this._targetGroup=n,this._bindings=n.subscribe_(e,i)}getValue(n,e){this.bind();let t=this._targetGroup.nCachedObjects_,i=this._bindings[t];i!==void 0&&i.getValue(n,e)}setValue(n,e){let t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=t.length;i!==s;++i)t[i].setValue(n,e)}bind(){let n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()}unbind(){let n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}},Xe.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Xe.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Xe.prototype.GetterByBindingType=[Xe.prototype._getValue_direct,Xe.prototype._getValue_array,Xe.prototype._getValue_arrayElement,Xe.prototype._getValue_toArray],Xe.prototype.SetterByBindingTypeAndVersioning=[[Xe.prototype._setValue_direct,Xe.prototype._setValue_direct_setNeedsUpdate,Xe.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_array,Xe.prototype._setValue_array_setNeedsUpdate,Xe.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_arrayElement,Xe.prototype._setValue_arrayElement_setNeedsUpdate,Xe.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_fromArray,Xe.prototype._setValue_fromArray_setNeedsUpdate,Xe.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var wo=class{constructor(e,t,i=null,s=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=s;let r=t.tracks,a=r.length,o=new Array(a),l={endingStart:gs,endingEnd:gs};for(let h=0;h!==a;++h){let c=r[h].createInterpolant(null);o[h]=c,c.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let s=this._clip.duration,r=e._clip.duration,a=r/s,o=s/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let s=this._mixer,r=s.time,a=this.timeScale,o=this._timeScaleInterpolant;o===null&&(o=s._lendControlInterpolant(),this._timeScaleInterpolant=o);let l=o.parameterPositions,h=o.sampleValues;return l[0]=r,l[1]=r+i,h[0]=e/a,h[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,s){if(!this.enabled)return void this._updateWeight(e);let r=this._startTime;if(r!==null){let l=(e-r)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);let a=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,h=this._propertyBindings;if(this.blendMode===Wd)for(let c=0,u=l.length;c!==u;++c)l[c].evaluate(a),h[c].accumulateAdditive(o);else for(let c=0,u=l.length;c!==u;++c)l[c].evaluate(a),h[c].accumulate(s,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(i!==null){let s=i.evaluate(e)[0];t*=s,e>i.parameterPositions[1]&&(this.stopFading(),s===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;i!==null&&(t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,s=this.time+e,r=this._loopCount,a=i===2202;if(e===0)return r===-1?s:a&&(1&r)==1?t-s:s;if(i===2200){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(s>=t)s=t;else{if(!(s<0)){this.time=s;break e}s=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),s>=t||s<0){let o=Math.floor(s/t);s-=t*o,r+=Math.abs(o);let l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,s=e>0?t:0,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){let h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=s,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=s;if(a&&(1&r)==1)return t-s}return s}_setEndings(e,t,i){let s=this._interpolantSettings;i?(s.endingStart=vs,s.endingEnd=vs):(s.endingStart=e?this.zeroSlopeAtStart?vs:gs:Qr,s.endingEnd=t?this.zeroSlopeAtEnd?vs:gs:Qr)}_scheduleFading(e,t,i){let s=this._mixer,r=s.time,a=this._weightInterpolant;a===null&&(a=s._lendControlInterpolant(),this._weightInterpolant=a);let o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=i,this}},Qf=new Float32Array(1),Fn=class extends yi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,s=e._clip.tracks,r=s.length,a=e._propertyBindings,o=e._interpolants,l=i.uuid,h=this._bindingsByRootAndName,c=h[l];c===void 0&&(c={},h[l]=c);for(let u=0;u!==r;++u){let d=s[u],m=d.name,f=c[m];if(f!==void 0)++f.referenceCount,a[u]=f;else{if(f=a[u],f!==void 0){f._cacheIndex===null&&(++f.referenceCount,this._addInactiveBinding(f,l,m));continue}let v=t&&t._propertyBindings[u].binding.parsedPath;f=new Mo(Xe.create(i,m,v),d.ValueTypeName,d.getValueSize()),++f.referenceCount,this._addInactiveBinding(f,l,m),a[u]=f}o[u].resultBuffer=f.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){let i=(e._localRoot||this._root).uuid,s=e._clip.uuid,r=this._actionsByClip[s];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,s,i)}let t=e._propertyBindings;for(let i=0,s=t.length;i!==s;++i){let r=t[i];r.useCount++==0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,s=t.length;i!==s;++i){let r=t[i];--r.useCount==0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;let e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){let s=this._actions,r=this._actionsByClip,a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{let o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=s.length,s.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],s=e._cacheIndex;i._cacheIndex=s,t[s]=i,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,h=l[l.length-1],c=e._byClipCacheIndex;h._byClipCacheIndex=c,l[c]=h,l.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,s=t.length;i!==s;++i){let r=t[i];--r.referenceCount==0&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,s=this._nActiveActions++,r=t[s];e._cacheIndex=s,t[s]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,s=--this._nActiveActions,r=t[s];e._cacheIndex=s,t[s]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){let s=this._bindingsByRootAndName,r=this._bindings,a=s[t];a===void 0&&(a={},s[t]=a),a[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,s=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[s],l=t[t.length-1],h=e._cacheIndex;l._cacheIndex=h,t[h]=l,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[s]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,s=this._nActiveBindings++,r=t[s];e._cacheIndex=s,t[s]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,s=--this._nActiveBindings,r=t[s];e._cacheIndex=s,t[s]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return i===void 0&&(i=new En(new Float32Array(2),new Float32Array(2),1,Qf),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,s=--this._nActiveControlInterpolants,r=t[s];e.__cacheIndex=s,t[s]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){let s=t||this._root,r=s.uuid,a=typeof e=="string"?Ds.findByName(s,e):e,o=a!==null?a.uuid:e,l=this._actionsByClip[o],h=null;if(i===void 0&&(i=a!==null?a.blendMode:Hd),l!==void 0){let u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===i)return u;h=l.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;let c=new wo(this,a,t,i);return this._bindAction(c,h),this._addInactiveAction(c,o,r),c}existingAction(e,t){let i=t||this._root,s=i.uuid,r=typeof e=="string"?Ds.findByName(i,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[s]||null}stopAllAction(){let e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,s=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==i;++h)t[h]._update(s,e,r,a);let o=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)o[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,s=this._actionsByClip,r=s[i];if(r!==void 0){let a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){let h=a[o];this._deactivateAction(h);let c=h._cacheIndex,u=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,u._cacheIndex=c,t[c]=u,t.pop(),this._removeInactiveBindingsForAction(h)}delete s[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let r in i){let a=i[r].actionByRoot[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName[t];if(s!==void 0)for(let r in s){let a=s[r];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){let i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}};var K0=new pe;var Z0=new G;var Q0=new M,J0=new M;var $0=new M;var ex=new M,tx=new pe,ix=new pe;var sx=new M,rx=new he,nx=new he;var ax=new M,ox=new M,lx=new M;var hx=new M,cx=new mr;var ux=new Nt;var dx=new M;function fc(n,e,t,i){let s=function(r){switch(r){case Mi:case Lh:return{byteLength:1,components:1};case as:case Ih:case zt:return{byteLength:2,components:1};case Oo:case ko:return{byteLength:2,components:4};case wi:case Bo:case Ut:return{byteLength:4,components:1};case Uh:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}(i);switch(t){case 1021:case 1024:return n*e;case 1025:return n*e*2;case Cr:case Vo:return n*e/s.components*s.byteLength;case 1030:case 1031:return n*e*2/s.components*s.byteLength;case 1022:return n*e*3/s.components*s.byteLength;case ut:case 1033:return n*e*4/s.components*s.byteLength;case 33776:case 33777:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case 33778:case 33779:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case 35841:case 35843:return Math.max(n,16)*Math.max(e,8)/4;case 35840:case 35842:return Math.max(n,8)*Math.max(e,8)/2;case 36196:case 37492:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case 37496:case 37808:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case 37809:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case 37810:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case 37811:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case 37812:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case 37813:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case 37814:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case 37815:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case 37816:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case 37817:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case 37818:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case 37819:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case 37820:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case 37821:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case 36492:case 36494:case 36495:return Math.ceil(n/4)*Math.ceil(e/4)*16;case 36283:case 36284:return Math.ceil(n/4)*Math.ceil(e/4)*8;case 36285:case 36286:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fa}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fa);function Ip(){let n=null,e=!1,t=null,i=null;function s(r,a){t(r,a),i=n.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(s),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){n=r}}}function Jf(n){let e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let i=e.get(t);i&&(n.deleteBuffer(i.buffer),e.delete(t))},update:function(t,i){if(t.isInterleavedBufferAttribute&&(t=t.data),t.isGLBufferAttribute){let r=e.get(t);return void((!r||r.version<t.version)&&e.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}let s=e.get(t);if(s===void 0)e.set(t,function(r,a){let o=r.array,l=r.usage,h=o.byteLength,c=n.createBuffer(),u;if(n.bindBuffer(a,c),n.bufferData(a,o,l),r.onUploadCallback(),o instanceof Float32Array)u=n.FLOAT;else if(o instanceof Uint16Array)u=r.isFloat16BufferAttribute?n.HALF_FLOAT:n.UNSIGNED_SHORT;else if(o instanceof Int16Array)u=n.SHORT;else if(o instanceof Uint32Array)u=n.UNSIGNED_INT;else if(o instanceof Int32Array)u=n.INT;else if(o instanceof Int8Array)u=n.BYTE;else if(o instanceof Uint8Array)u=n.UNSIGNED_BYTE;else{if(!(o instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+o);u=n.UNSIGNED_BYTE}return{buffer:c,type:u,bytesPerElement:o.BYTES_PER_ELEMENT,version:r.version,size:h}}(t,i));else if(s.version<t.version){if(s.size!==t.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");(function(r,a,o){let l=a.array,h=a.updateRanges;if(n.bindBuffer(o,r),h.length===0)n.bufferSubData(o,0,l);else{h.sort((u,d)=>u.start-d.start);let c=0;for(let u=1;u<h.length;u++){let d=h[c],m=h[u];m.start<=d.start+d.count+1?d.count=Math.max(d.count,m.start+m.count-d.start):(++c,h[c]=m)}h.length=c+1;for(let u=0,d=h.length;u<d;u++){let m=h[u];n.bufferSubData(o,m.start*l.BYTES_PER_ELEMENT,l,m.start,m.count)}a.clearUpdateRanges()}a.onUploadCallback()})(s.buffer,t,i),s.version=t.version}}}}var Te={alphahash_fragment:`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,alphahash_pars_fragment:`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,alphamap_fragment:`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,alphamap_pars_fragment:`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment:`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,alphatest_pars_fragment:`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aomap_fragment:`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,aomap_pars_fragment:`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,batching_pars_vertex:`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,batching_vertex:`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,begin_vertex:`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,beginnormal_vertex:`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs:`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,iridescence_fragment:`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bumpmap_pars_fragment:`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment:`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,clipping_planes_pars_fragment:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,clipping_planes_vertex:`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,color_fragment:`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,color_pars_vertex:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,color_vertex:`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,common:`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cube_uv_reflection_fragment:`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,defaultnormal_vertex:`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex:`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex:`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment:`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment:`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,envmap_fragment:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment:`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment:`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex:`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_physical_pars_fragment:`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,envmap_vertex:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex:`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fog_pars_vertex:`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fog_fragment:`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment:`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment:`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lightmap_pars_fragment:`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_fragment:`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lights_lambert_pars_fragment:`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lights_pars_begin:`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lights_toon_fragment:`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lights_toon_pars_fragment:`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lights_phong_fragment:`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment:`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lights_physical_fragment:`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,lights_physical_pars_fragment:`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin:`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps:`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lights_fragment_end:`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,logdepthbuf_fragment:`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment:`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex:`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_vertex:`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,map_fragment:`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,map_pars_fragment:`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment:`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment:`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment:`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment:`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphinstance_vertex:`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,morphcolor_vertex:`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,morphnormal_vertex:`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,morphtarget_pars_vertex:`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,morphtarget_vertex:`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,normal_fragment_begin:`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,normal_fragment_maps:`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,normal_pars_fragment:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_pars_vertex:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_vertex:`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,normalmap_pars_fragment:`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,clearcoat_normal_fragment_begin:`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,clearcoat_normal_fragment_maps:`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,clearcoat_pars_fragment:`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,iridescence_pars_fragment:`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,opaque_fragment:`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,packing:`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,premultiplied_alpha_fragment:`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex:`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment:`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment:`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment:`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment:`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment:`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,shadowmap_pars_vertex:`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex:`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,shadowmask_pars_fragment:`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,skinbase_vertex:`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex:`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,skinning_vertex:`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex:`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment:`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment:`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment:`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment:`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,transmission_fragment:`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,transmission_pars_fragment:`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uv_pars_fragment:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_pars_vertex:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_vertex:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,worldpos_vertex:`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,depth_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`},oe={common:{diffuse:{value:new he(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ae},alphaMap:{value:null},alphaMapTransform:{value:new Ae},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ae}},envmap:{envMap:{value:null},envMapRotation:{value:new Ae},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ae}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ae}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ae},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ae},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ae},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ae}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ae}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ae}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new he(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new he(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ae},alphaTest:{value:0},uvTransform:{value:new Ae}},sprite:{diffuse:{value:new he(16777215)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ae},alphaMap:{value:null},alphaMapTransform:{value:new Ae},alphaTest:{value:0}}},Ci={basic:{uniforms:Ft([oe.common,oe.specularmap,oe.envmap,oe.aomap,oe.lightmap,oe.fog]),vertexShader:Te.meshbasic_vert,fragmentShader:Te.meshbasic_frag},lambert:{uniforms:Ft([oe.common,oe.specularmap,oe.envmap,oe.aomap,oe.lightmap,oe.emissivemap,oe.bumpmap,oe.normalmap,oe.displacementmap,oe.fog,oe.lights,{emissive:{value:new he(0)}}]),vertexShader:Te.meshlambert_vert,fragmentShader:Te.meshlambert_frag},phong:{uniforms:Ft([oe.common,oe.specularmap,oe.envmap,oe.aomap,oe.lightmap,oe.emissivemap,oe.bumpmap,oe.normalmap,oe.displacementmap,oe.fog,oe.lights,{emissive:{value:new he(0)},specular:{value:new he(1118481)},shininess:{value:30}}]),vertexShader:Te.meshphong_vert,fragmentShader:Te.meshphong_frag},standard:{uniforms:Ft([oe.common,oe.envmap,oe.aomap,oe.lightmap,oe.emissivemap,oe.bumpmap,oe.normalmap,oe.displacementmap,oe.roughnessmap,oe.metalnessmap,oe.fog,oe.lights,{emissive:{value:new he(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Te.meshphysical_vert,fragmentShader:Te.meshphysical_frag},toon:{uniforms:Ft([oe.common,oe.aomap,oe.lightmap,oe.emissivemap,oe.bumpmap,oe.normalmap,oe.displacementmap,oe.gradientmap,oe.fog,oe.lights,{emissive:{value:new he(0)}}]),vertexShader:Te.meshtoon_vert,fragmentShader:Te.meshtoon_frag},matcap:{uniforms:Ft([oe.common,oe.bumpmap,oe.normalmap,oe.displacementmap,oe.fog,{matcap:{value:null}}]),vertexShader:Te.meshmatcap_vert,fragmentShader:Te.meshmatcap_frag},points:{uniforms:Ft([oe.points,oe.fog]),vertexShader:Te.points_vert,fragmentShader:Te.points_frag},dashed:{uniforms:Ft([oe.common,oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Te.linedashed_vert,fragmentShader:Te.linedashed_frag},depth:{uniforms:Ft([oe.common,oe.displacementmap]),vertexShader:Te.depth_vert,fragmentShader:Te.depth_frag},normal:{uniforms:Ft([oe.common,oe.bumpmap,oe.normalmap,oe.displacementmap,{opacity:{value:1}}]),vertexShader:Te.meshnormal_vert,fragmentShader:Te.meshnormal_frag},sprite:{uniforms:Ft([oe.sprite,oe.fog]),vertexShader:Te.sprite_vert,fragmentShader:Te.sprite_frag},background:{uniforms:{uvTransform:{value:new Ae},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Te.background_vert,fragmentShader:Te.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ae}},vertexShader:Te.backgroundCube_vert,fragmentShader:Te.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Te.cube_vert,fragmentShader:Te.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Te.equirect_vert,fragmentShader:Te.equirect_frag},distanceRGBA:{uniforms:Ft([oe.common,oe.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Te.distanceRGBA_vert,fragmentShader:Te.distanceRGBA_frag},shadow:{uniforms:Ft([oe.lights,oe.fog,{color:{value:new he(0)},opacity:{value:1}}]),vertexShader:Te.shadow_vert,fragmentShader:Te.shadow_frag}};Ci.physical={uniforms:Ft([Ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ae},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ae},clearcoatNormalScale:{value:new G(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ae},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ae},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ae},sheen:{value:0},sheenColor:{value:new he(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ae},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ae},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ae},transmissionSamplerSize:{value:new G},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ae},attenuationDistance:{value:0},attenuationColor:{value:new he(0)},specularColor:{value:new he(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ae},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ae},anisotropyVector:{value:new G},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ae}}]),vertexShader:Te.meshphysical_vert,fragmentShader:Te.meshphysical_frag};var Zo={r:0,b:0,g:0},Hs=new Ye,$f=new pe;function eg(n,e,t,i,s,r,a){let o=new he(0),l,h,c=r===!0?0:1,u=null,d=0,m=null;function f(p){let g=p.isScene===!0?p.background:null;return g&&g.isTexture&&(g=(p.backgroundBlurriness>0?t:e).get(g)),g}function v(p,g){p.getRGB(Zo,dc(n)),i.buffers.color.setClear(Zo.r,Zo.g,Zo.b,g,a)}return{getClearColor:function(){return o},setClearColor:function(p,g=1){o.set(p),c=g,v(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,v(o,c)},render:function(p){let g=!1,x=f(p);x===null?v(o,c):x&&x.isColor&&(v(x,1),g=!0);let y=n.xr.getEnvironmentBlendMode();y==="additive"?i.buffers.color.setClear(0,0,0,1,a):y==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(n.autoClear||g)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))},addToRenderList:function(p,g){let x=f(g);x&&(x.isCubeTexture||x.mapping===kn)?(h===void 0&&(h=new nt(new Ms(1,1,1),new we({name:"BackgroundCubeMaterial",uniforms:zs(Ci.backgroundCube.uniforms),vertexShader:Ci.backgroundCube.vertexShader,fragmentShader:Ci.backgroundCube.fragmentShader,side:At,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(y,_,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),Hs.copy(g.backgroundRotation),Hs.x*=-1,Hs.y*=-1,Hs.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Hs.y*=-1,Hs.z*=-1),h.material.uniforms.envMap.value=x,h.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4($f.makeRotationFromEuler(Hs)),h.material.toneMapped=Ve.getTransfer(x.colorSpace)!==Ke,u===x&&d===x.version&&m===n.toneMapping||(h.material.needsUpdate=!0,u=x,d=x.version,m=n.toneMapping),h.layers.enableAll(),p.unshift(h,h.geometry,h.material,0,0,null)):x&&x.isTexture&&(l===void 0&&(l=new nt(new yr(2,2),new we({name:"BackgroundMaterial",uniforms:zs(Ci.background.uniforms),vertexShader:Ci.background.vertexShader,fragmentShader:Ci.background.fragmentShader,side:ft,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=x,l.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,l.material.toneMapped=Ve.getTransfer(x.colorSpace)!==Ke,x.matrixAutoUpdate===!0&&x.updateMatrix(),l.material.uniforms.uvTransform.value.copy(x.matrix),u===x&&d===x.version&&m===n.toneMapping||(l.material.needsUpdate=!0,u=x,d=x.version,m=n.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){h!==void 0&&(h.geometry.dispose(),h.material.dispose()),l!==void 0&&(l.geometry.dispose(),l.material.dispose())}}}function tg(n,e){let t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},s=h(null),r=s,a=!1;function o(g){return n.bindVertexArray(g)}function l(g){return n.deleteVertexArray(g)}function h(g){let x=[],y=[],_=[];for(let b=0;b<t;b++)x[b]=0,y[b]=0,_[b]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:x,enabledAttributes:y,attributeDivisors:_,object:g,attributes:{},index:null}}function c(){let g=r.newAttributes;for(let x=0,y=g.length;x<y;x++)g[x]=0}function u(g){d(g,0)}function d(g,x){let y=r.newAttributes,_=r.enabledAttributes,b=r.attributeDivisors;y[g]=1,_[g]===0&&(n.enableVertexAttribArray(g),_[g]=1),b[g]!==x&&(n.vertexAttribDivisor(g,x),b[g]=x)}function m(){let g=r.newAttributes,x=r.enabledAttributes;for(let y=0,_=x.length;y<_;y++)x[y]!==g[y]&&(n.disableVertexAttribArray(y),x[y]=0)}function f(g,x,y,_,b,S,E){E===!0?n.vertexAttribIPointer(g,x,y,b,S):n.vertexAttribPointer(g,x,y,_,b,S)}function v(){p(),a=!0,r!==s&&(r=s,o(r.object))}function p(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(g,x,y,_,b){let S=!1,E=function(P,D,O){let B=O.wireframe===!0,V=i[P.id];V===void 0&&(V={},i[P.id]=V);let j=V[D.id];j===void 0&&(j={},V[D.id]=j);let z=j[B];return z===void 0&&(z=h(n.createVertexArray()),j[B]=z),z}(_,y,x);r!==E&&(r=E,o(r.object)),S=function(P,D,O,B){let V=r.attributes,j=D.attributes,z=0,q=O.getAttributes();for(let K in q)if(q[K].location>=0){let $=V[K],ee=j[K];if(ee===void 0&&(K==="instanceMatrix"&&P.instanceMatrix&&(ee=P.instanceMatrix),K==="instanceColor"&&P.instanceColor&&(ee=P.instanceColor)),$===void 0||$.attribute!==ee||ee&&$.data!==ee.data)return!0;z++}return r.attributesNum!==z||r.index!==B}(g,_,y,b),S&&function(P,D,O,B){let V={},j=D.attributes,z=0,q=O.getAttributes();for(let K in q)if(q[K].location>=0){let $=j[K];$===void 0&&(K==="instanceMatrix"&&P.instanceMatrix&&($=P.instanceMatrix),K==="instanceColor"&&P.instanceColor&&($=P.instanceColor));let ee={};ee.attribute=$,$&&$.data&&(ee.data=$.data),V[K]=ee,z++}r.attributes=V,r.attributesNum=z,r.index=B}(g,_,y,b),b!==null&&e.update(b,n.ELEMENT_ARRAY_BUFFER),(S||a)&&(a=!1,function(P,D,O,B){c();let V=B.attributes,j=O.getAttributes(),z=D.defaultAttributeValues;for(let q in j){let K=j[q];if(K.location>=0){let $=V[q];if($===void 0&&(q==="instanceMatrix"&&P.instanceMatrix&&($=P.instanceMatrix),q==="instanceColor"&&P.instanceColor&&($=P.instanceColor)),$!==void 0){let ee=$.normalized,le=$.itemSize,me=e.get($);if(me===void 0)continue;let J=me.buffer,re=me.type,ce=me.bytesPerElement,de=re===n.INT||re===n.UNSIGNED_INT||$.gpuType===Bo;if($.isInterleavedBufferAttribute){let ae=$.data,A=ae.stride,C=$.offset;if(ae.isInstancedInterleavedBuffer){for(let U=0;U<K.locationSize;U++)d(K.location+U,ae.meshPerAttribute);P.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=ae.meshPerAttribute*ae.count)}else for(let U=0;U<K.locationSize;U++)u(K.location+U);n.bindBuffer(n.ARRAY_BUFFER,J);for(let U=0;U<K.locationSize;U++)f(K.location+U,le/K.locationSize,re,ee,A*ce,(C+le/K.locationSize*U)*ce,de)}else{if($.isInstancedBufferAttribute){for(let ae=0;ae<K.locationSize;ae++)d(K.location+ae,$.meshPerAttribute);P.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let ae=0;ae<K.locationSize;ae++)u(K.location+ae);n.bindBuffer(n.ARRAY_BUFFER,J);for(let ae=0;ae<K.locationSize;ae++)f(K.location+ae,le/K.locationSize,re,ee,le*ce,le/K.locationSize*ae*ce,de)}}else if(z!==void 0){let ee=z[q];if(ee!==void 0)switch(ee.length){case 2:n.vertexAttrib2fv(K.location,ee);break;case 3:n.vertexAttrib3fv(K.location,ee);break;case 4:n.vertexAttrib4fv(K.location,ee);break;default:n.vertexAttrib1fv(K.location,ee)}}}}m()}(g,x,y,_),b!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(b).buffer))},reset:v,resetDefaultState:p,dispose:function(){v();for(let g in i){let x=i[g];for(let y in x){let _=x[y];for(let b in _)l(_[b].object),delete _[b];delete x[y]}delete i[g]}},releaseStatesOfGeometry:function(g){if(i[g.id]===void 0)return;let x=i[g.id];for(let y in x){let _=x[y];for(let b in _)l(_[b].object),delete _[b];delete x[y]}delete i[g.id]},releaseStatesOfProgram:function(g){for(let x in i){let y=i[x];if(y[g.id]===void 0)continue;let _=y[g.id];for(let b in _)l(_[b].object),delete _[b];delete y[g.id]}},initAttributes:c,enableAttribute:u,disableUnusedAttributes:m}}function ig(n,e,t){let i;function s(r,a,o){o!==0&&(n.drawArraysInstanced(i,r,a,o),t.update(a,i,o))}this.setMode=function(r){i=r},this.render=function(r,a){n.drawArrays(i,r,a),t.update(a,i,1)},this.renderInstances=s,this.renderMultiDraw=function(r,a,o){if(o===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,r,0,a,0,o);let l=0;for(let h=0;h<o;h++)l+=a[h];t.update(l,i,1)},this.renderMultiDrawInstances=function(r,a,o,l){if(o===0)return;let h=e.get("WEBGL_multi_draw");if(h===null)for(let c=0;c<r.length;c++)s(r[c],a[c],l[c]);else{h.multiDrawArraysInstancedWEBGL(i,r,0,a,0,l,0,o);let c=0;for(let u=0;u<o;u++)c+=a[u]*l[u];t.update(c,i,1)}}}function sg(n,e,t,i){let s;function r(d){if(d==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";d="mediump"}return d==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=t.precision!==void 0?t.precision:"highp",o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);let l=t.logarithmicDepthBuffer===!0,h=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),c=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),u=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){let d=e.get("EXT_texture_filter_anisotropic");s=n.getParameter(d.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s},getMaxPrecision:r,textureFormatReadable:function(d){return d===ut||i.convert(d)===n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(d){let m=d===zt&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(d!==Mi&&i.convert(d)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&d!==Ut&&!m)},precision:a,logarithmicDepthBuffer:l,reverseDepthBuffer:h,maxTextures:c,maxVertexTextures:u,maxTextureSize:n.getParameter(n.MAX_TEXTURE_SIZE),maxCubemapSize:n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:n.getParameter(n.MAX_VERTEX_ATTRIBS),maxVertexUniforms:n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:n.getParameter(n.MAX_VARYING_VECTORS),maxFragmentUniforms:n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:u>0,maxSamples:n.getParameter(n.MAX_SAMPLES)}}function rg(n){let e=this,t=null,i=0,s=!1,r=!1,a=new xi,o=new Ae,l={value:null,needsUpdate:!1};function h(c,u,d,m){let f=c!==null?c.length:0,v=null;if(f!==0){if(v=l.value,m!==!0||v===null){let p=d+4*f,g=u.matrixWorldInverse;o.getNormalMatrix(g),(v===null||v.length<p)&&(v=new Float32Array(p));for(let x=0,y=d;x!==f;++x,y+=4)a.copy(c[x]).applyMatrix4(g,o),a.normal.toArray(v,y),v[y+3]=a.constant}l.value=v,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,v}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(c,u){let d=c.length!==0||u||i!==0||s;return s=u,i=c.length,d},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(c,u){t=h(c,u,0)},this.setState=function(c,u,d){let m=c.clippingPlanes,f=c.clipIntersection,v=c.clipShadows,p=n.get(c);if(!s||m===null||m.length===0||r&&!v)r?h(null):function(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}();else{let g=r?0:i,x=4*g,y=p.clippingState||null;l.value=y,y=h(m,u,x,d);for(let _=0;_!==x;++_)y[_]=t[_];p.clippingState=y,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=g}}}function ng(n){let e=new WeakMap;function t(s,r){return r===Mr?s.mapping=Os:r===Uo&&(s.mapping=ks),s}function i(s){let r=s.target;r.removeEventListener("dispose",i);let a=e.get(r);a!==void 0&&(e.delete(r),a.dispose())}return{get:function(s){if(s&&s.isTexture){let r=s.mapping;if(r===Mr||r===Uo){if(e.has(s))return t(e.get(s).texture,s.mapping);{let a=s.image;if(a&&a.height>0){let o=new za(a.height);return o.fromEquirectangularTexture(n,s),e.set(s,o),s.addEventListener("dispose",i),t(o.texture,s.mapping)}return null}}}return s},dispose:function(){e=new WeakMap}}}var cp=[.125,.215,.35,.446,.526,.582],Vn=20,gc=new Is,up=new he,vc=null,xc=0,yc=0,_c=!1,js=(1+Math.sqrt(5))/2,Tr=1/js,dp=[new M(-js,Tr,0),new M(js,Tr,0),new M(-Tr,0,js),new M(Tr,0,js),new M(0,js,-Tr),new M(0,js,Tr),new M(-1,1,-1),new M(1,1,-1),new M(-1,1,1),new M(1,1,1)],$o=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,s=100){vc=this._renderer.getRenderTarget(),xc=this._renderer.getActiveCubeFace(),yc=this._renderer.getActiveMipmapLevel(),_c=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=fp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=mp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(vc,xc,yc),this._renderer.xr.enabled=_c,e.scissorTest=!1,Qo(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Os||e.mapping===ks?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),vc=this._renderer.getRenderTarget(),xc=this._renderer.getActiveCubeFace(),yc=this._renderer.getActiveMipmapLevel(),_c=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;let i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Qe,minFilter:Qe,generateMipmaps:!1,type:zt,format:ut,colorSpace:Qt,depthBuffer:!1},s=pp(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=pp(e,t,i);let{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(a){let o=[],l=[],h=[],c=a,u=a-4+1+cp.length;for(let d=0;d<u;d++){let m=Math.pow(2,c);l.push(m);let f=1/m;d>a-4?f=cp[d-a+4-1]:d===0&&(f=0),h.push(f);let v=1/(m-2),p=-v,g=1+v,x=[p,p,g,p,g,g,p,p,g,g,p,g],y=6,_=6,b=3,S=2,E=1,P=new Float32Array(b*_*y),D=new Float32Array(S*_*y),O=new Float32Array(E*_*y);for(let V=0;V<y;V++){let j=V%3*2/3-1,z=V>2?0:-1,q=[j,z,0,j+2/3,z,0,j+2/3,z+1,0,j,z,0,j+2/3,z+1,0,j,z+1,0];P.set(q,b*_*V),D.set(x,S*_*V);let K=[V,V,V,V,V,V];O.set(K,E*_*V)}let B=new We;B.setAttribute("position",new Et(P,b)),B.setAttribute("uv",new Et(D,S)),B.setAttribute("faceIndex",new Et(O,E)),o.push(B),c>4&&c--}return{lodPlanes:o,sizeLods:l,sigmas:h}}(r)),this._blurMaterial=function(a,o,l){let h=new Float32Array(Vn),c=new M(0,1,0);return new we({name:"SphericalGaussianBlur",defines:{n:Vn,CUBEUV_TEXEL_WIDTH:1/o,CUBEUV_TEXEL_HEIGHT:1/l,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:h},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:c}},vertexShader:Rc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}(r,e,t)}return s}_compileMaterial(e){let t=new nt(this._lodPlanes[0],e);this._renderer.compile(t,gc)}_sceneToCubeUV(e,t,i,s){let r=new yt(90,1,t,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,h=l.autoClear,c=l.toneMapping;l.getClearColor(up),l.toneMapping=Hi,l.autoClear=!1;let u=new ki({name:"PMREM.Background",side:At,depthWrite:!1,depthTest:!1}),d=new nt(new Ms,u),m=!1,f=e.background;f?f.isColor&&(u.color.copy(f),e.background=null,m=!0):(u.color.copy(up),m=!0);for(let v=0;v<6;v++){let p=v%3;p===0?(r.up.set(0,a[v],0),r.lookAt(o[v],0,0)):p===1?(r.up.set(0,0,a[v]),r.lookAt(0,o[v],0)):(r.up.set(0,a[v],0),r.lookAt(0,0,o[v]));let g=this._cubeSize;Qo(s,p*g,v>2?g:0,g,g),l.setRenderTarget(s),m&&l.render(d,r),l.render(e,r)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=c,l.autoClear=h,e.background=f}_textureToCubeUV(e,t){let i=this._renderer,s=e.mapping===Os||e.mapping===ks;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=fp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=mp());let r=s?this._cubemapMaterial:this._equirectMaterial,a=new nt(this._lodPlanes[0],r);r.uniforms.envMap.value=e;let o=this._cubeSize;Qo(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(a,gc)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;let s=this._lodPlanes.length;for(let r=1;r<s;r++){let a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=dp[(s-r-1)%dp.length];this._blur(e,r-1,r,a,o)}t.autoClear=i}_blur(e,t,i,s,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,s,"latitudinal",r),this._halfBlur(a,e,i,i,s,"longitudinal",r)}_halfBlur(e,t,i,s,r,a,o){let l=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");let c=new nt(this._lodPlanes[s],h),u=h.uniforms,d=this._sizeLods[i]-1,m=isFinite(r)?Math.PI/(2*d):2*Math.PI/39,f=r/m,v=isFinite(r)?1+Math.floor(3*f):Vn;v>Vn&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to 20`);let p=[],g=0;for(let _=0;_<Vn;++_){let b=_/f,S=Math.exp(-b*b/2);p.push(S),_===0?g+=S:_<v&&(g+=2*S)}for(let _=0;_<p.length;_++)p[_]=p[_]/g;u.envMap.value=e.texture,u.samples.value=v,u.weights.value=p,u.latitudinal.value=a==="latitudinal",o&&(u.poleAxis.value=o);let{_lodMax:x}=this;u.dTheta.value=m,u.mipInt.value=x-i;let y=this._sizeLods[s];Qo(t,3*y*(s>x-4?s-x+4:0),4*(this._cubeSize-y),3*y,2*y),l.setRenderTarget(t),l.render(c,gc)}};function pp(n,e,t){let i=new ct(n,e,t);return i.texture.mapping=kn,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Qo(n,e,t,i,s){n.viewport.set(e,t,i,s),n.scissor.set(e,t,i,s)}function mp(){return new we({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Rc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}function fp(){return new we({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Rc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}function Rc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ag(n){let e=new WeakMap,t=null;function i(s){let r=s.target;r.removeEventListener("dispose",i);let a=e.get(r);a!==void 0&&(e.delete(r),a.dispose())}return{get:function(s){if(s&&s.isTexture){let r=s.mapping,a=r===Mr||r===Uo,o=r===Os||r===ks;if(a||o){let l=e.get(s),h=l!==void 0?l.texture.pmremVersion:0;if(s.isRenderTargetTexture&&s.pmremVersion!==h)return t===null&&(t=new $o(n)),l=a?t.fromEquirectangular(s,l):t.fromCubemap(s,l),l.texture.pmremVersion=s.pmremVersion,e.set(s,l),l.texture;if(l!==void 0)return l.texture;{let c=s.image;return a&&c&&c.height>0||o&&c&&function(u){let d=0,m=6;for(let f=0;f<m;f++)u[f]!==void 0&&d++;return d===m}(c)?(t===null&&(t=new $o(n)),l=a?t.fromEquirectangular(s):t.fromCubemap(s),l.texture.pmremVersion=s.pmremVersion,e.set(s,l),s.addEventListener("dispose",i),l.texture):null}}}return s},dispose:function(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}}}function og(n){let e={};function t(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=n.getExtension(i)}return e[i]=s,s}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){let s=t(i);return s===null&&Vs("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function lg(n,e,t,i){let s={},r=new WeakMap;function a(l){let h=l.target;h.index!==null&&e.remove(h.index);for(let u in h.attributes)e.remove(h.attributes[u]);h.removeEventListener("dispose",a),delete s[h.id];let c=r.get(h);c&&(e.remove(c),r.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function o(l){let h=[],c=l.index,u=l.attributes.position,d=0;if(c!==null){let v=c.array;d=c.version;for(let p=0,g=v.length;p<g;p+=3){let x=v[p+0],y=v[p+1],_=v[p+2];h.push(x,y,y,_,_,x)}}else{if(u===void 0)return;{let v=u.array;d=u.version;for(let p=0,g=v.length/3-1;p<g;p+=3){let x=p+0,y=p+1,_=p+2;h.push(x,y,y,_,_,x)}}}let m=new(uc(h)?rn:Ss)(h,1);m.version=d;let f=r.get(l);f&&e.remove(f),r.set(l,m)}return{get:function(l,h){return s[h.id]===!0||(h.addEventListener("dispose",a),s[h.id]=!0,t.memory.geometries++),h},update:function(l){let h=l.attributes;for(let c in h)e.update(h[c],n.ARRAY_BUFFER)},getWireframeAttribute:function(l){let h=r.get(l);if(h){let c=l.index;c!==null&&h.version<c.version&&o(l)}else o(l);return r.get(l)}}}function hg(n,e,t){let i,s,r;function a(o,l,h){h!==0&&(n.drawElementsInstanced(i,l,s,o*r,h),t.update(l,i,h))}this.setMode=function(o){i=o},this.setIndex=function(o){s=o.type,r=o.bytesPerElement},this.render=function(o,l){n.drawElements(i,l,s,o*r),t.update(l,i,1)},this.renderInstances=a,this.renderMultiDraw=function(o,l,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,l,0,s,o,0,h);let c=0;for(let u=0;u<h;u++)c+=l[u];t.update(c,i,1)},this.renderMultiDrawInstances=function(o,l,h,c){if(h===0)return;let u=e.get("WEBGL_multi_draw");if(u===null)for(let d=0;d<o.length;d++)a(o[d]/r,l[d],c[d]);else{u.multiDrawElementsInstancedWEBGL(i,l,0,s,o,0,c,0,h);let d=0;for(let m=0;m<h;m++)d+=l[m]*c[m];t.update(d,i,1)}}}function cg(n){let e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,s){switch(e.calls++,i){case n.TRIANGLES:e.triangles+=s*(t/3);break;case n.LINES:e.lines+=s*(t/2);break;case n.LINE_STRIP:e.lines+=s*(t-1);break;case n.LINE_LOOP:e.lines+=s*t;break;case n.POINTS:e.points+=s*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function ug(n,e,t){let i=new WeakMap,s=new Ie;return{update:function(r,a,o){let l=r.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,c=h!==void 0?h.length:0,u=i.get(a);if(u===void 0||u.count!==c){let P=function(){S.dispose(),i.delete(a),a.removeEventListener("dispose",P)};u!==void 0&&u.texture.dispose();let d=a.morphAttributes.position!==void 0,m=a.morphAttributes.normal!==void 0,f=a.morphAttributes.color!==void 0,v=a.morphAttributes.position||[],p=a.morphAttributes.normal||[],g=a.morphAttributes.color||[],x=0;d===!0&&(x=1),m===!0&&(x=2),f===!0&&(x=3);let y=a.attributes.position.count*x,_=1;y>e.maxTextureSize&&(_=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);let b=new Float32Array(y*_*4*c),S=new tn(b,y,_,c);S.type=Ut,S.needsUpdate=!0;let E=4*x;for(let D=0;D<c;D++){let O=v[D],B=p[D],V=g[D],j=y*_*4*D;for(let z=0;z<O.count;z++){let q=z*E;d===!0&&(s.fromBufferAttribute(O,z),b[j+q+0]=s.x,b[j+q+1]=s.y,b[j+q+2]=s.z,b[j+q+3]=0),m===!0&&(s.fromBufferAttribute(B,z),b[j+q+4]=s.x,b[j+q+5]=s.y,b[j+q+6]=s.z,b[j+q+7]=0),f===!0&&(s.fromBufferAttribute(V,z),b[j+q+8]=s.x,b[j+q+9]=s.y,b[j+q+10]=s.z,b[j+q+11]=V.itemSize===4?s.w:1)}}u={count:c,texture:S,size:new G(y,_)},i.set(a,u),a.addEventListener("dispose",P)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)o.getUniforms().setValue(n,"morphTexture",r.morphTexture,t);else{let d=0;for(let f=0;f<l.length;f++)d+=l[f];let m=a.morphTargetsRelative?1:1-d;o.getUniforms().setValue(n,"morphTargetBaseInfluence",m),o.getUniforms().setValue(n,"morphTargetInfluences",l)}o.getUniforms().setValue(n,"morphTargetsTexture",u.texture,t),o.getUniforms().setValue(n,"morphTargetsTextureSize",u.size)}}}function dg(n,e,t,i){let s=new WeakMap;function r(a){let o=a.target;o.removeEventListener("dispose",r),t.remove(o.instanceMatrix),o.instanceColor!==null&&t.remove(o.instanceColor)}return{update:function(a){let o=i.render.frame,l=a.geometry,h=e.get(a,l);if(s.get(h)!==o&&(e.update(h),s.set(h,o)),a.isInstancedMesh&&(a.hasEventListener("dispose",r)===!1&&a.addEventListener("dispose",r),s.get(a)!==o&&(t.update(a.instanceMatrix,n.ARRAY_BUFFER),a.instanceColor!==null&&t.update(a.instanceColor,n.ARRAY_BUFFER),s.set(a,o))),a.isSkinnedMesh){let c=a.skeleton;s.get(c)!==o&&(c.update(),s.set(c,o))}return h},dispose:function(){s=new WeakMap}}}var Up=new mt,gp=new Ni(1,1),Fp=new tn,Bp=new Ga,Op=new nn,vp=[],xp=[],yp=new Float32Array(16),_p=new Float32Array(9),bp=new Float32Array(4);function Ar(n,e,t){let i=n[0];if(i<=0||i>0)return n;let s=e*t,r=vp[s];if(r===void 0&&(r=new Float32Array(s),vp[s]=r),e!==0){i.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(r,o)}return r}function St(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Mt(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function tl(n,e){let t=xp[e];t===void 0&&(t=new Int32Array(e),xp[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function pg(n,e){let t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function mg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(St(t,e))return;n.uniform2fv(this.addr,e),Mt(t,e)}}function fg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)t[0]===e.r&&t[1]===e.g&&t[2]===e.b||(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(St(t,e))return;n.uniform3fv(this.addr,e),Mt(t,e)}}function gg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(St(t,e))return;n.uniform4fv(this.addr,e),Mt(t,e)}}function vg(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(St(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,i))return;bp.set(i),n.uniformMatrix2fv(this.addr,!1,bp),Mt(t,i)}}function xg(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(St(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,i))return;_p.set(i),n.uniformMatrix3fv(this.addr,!1,_p),Mt(t,i)}}function yg(n,e){let t=this.cache,i=e.elements;if(i===void 0){if(St(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,i))return;yp.set(i),n.uniformMatrix4fv(this.addr,!1,yp),Mt(t,i)}}function _g(n,e){let t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function bg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(St(t,e))return;n.uniform2iv(this.addr,e),Mt(t,e)}}function Sg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(St(t,e))return;n.uniform3iv(this.addr,e),Mt(t,e)}}function Mg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(St(t,e))return;n.uniform4iv(this.addr,e),Mt(t,e)}}function wg(n,e){let t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Cg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(St(t,e))return;n.uniform2uiv(this.addr,e),Mt(t,e)}}function Tg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(St(t,e))return;n.uniform3uiv(this.addr,e),Mt(t,e)}}function Eg(n,e){let t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(St(t,e))return;n.uniform4uiv(this.addr,e),Mt(t,e)}}function Ag(n,e,t){let i=this.cache,s=t.allocateTextureUnit(),r;i[0]!==s&&(n.uniform1i(this.addr,s),i[0]=s),this.type===n.SAMPLER_2D_SHADOW?(gp.compareFunction=hc,r=gp):r=Up,t.setTexture2D(e||r,s)}function Pg(n,e,t){let i=this.cache,s=t.allocateTextureUnit();i[0]!==s&&(n.uniform1i(this.addr,s),i[0]=s),t.setTexture3D(e||Bp,s)}function Rg(n,e,t){let i=this.cache,s=t.allocateTextureUnit();i[0]!==s&&(n.uniform1i(this.addr,s),i[0]=s),t.setTextureCube(e||Op,s)}function Dg(n,e,t){let i=this.cache,s=t.allocateTextureUnit();i[0]!==s&&(n.uniform1i(this.addr,s),i[0]=s),t.setTexture2DArray(e||Fp,s)}function Lg(n,e){n.uniform1fv(this.addr,e)}function Ig(n,e){let t=Ar(e,this.size,2);n.uniform2fv(this.addr,t)}function Ug(n,e){let t=Ar(e,this.size,3);n.uniform3fv(this.addr,t)}function Fg(n,e){let t=Ar(e,this.size,4);n.uniform4fv(this.addr,t)}function Bg(n,e){let t=Ar(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function Og(n,e){let t=Ar(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function kg(n,e){let t=Ar(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function Ng(n,e){n.uniform1iv(this.addr,e)}function Gg(n,e){n.uniform2iv(this.addr,e)}function Vg(n,e){n.uniform3iv(this.addr,e)}function zg(n,e){n.uniform4iv(this.addr,e)}function Hg(n,e){n.uniform1uiv(this.addr,e)}function Wg(n,e){n.uniform2uiv(this.addr,e)}function jg(n,e){n.uniform3uiv(this.addr,e)}function Xg(n,e){n.uniform4uiv(this.addr,e)}function qg(n,e,t){let i=this.cache,s=e.length,r=tl(t,s);St(i,r)||(n.uniform1iv(this.addr,r),Mt(i,r));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||Up,r[a])}function Yg(n,e,t){let i=this.cache,s=e.length,r=tl(t,s);St(i,r)||(n.uniform1iv(this.addr,r),Mt(i,r));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||Bp,r[a])}function Kg(n,e,t){let i=this.cache,s=e.length,r=tl(t,s);St(i,r)||(n.uniform1iv(this.addr,r),Mt(i,r));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||Op,r[a])}function Zg(n,e,t){let i=this.cache,s=e.length,r=tl(t,s);St(i,r)||(n.uniform1iv(this.addr,r),Mt(i,r));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||Fp,r[a])}var Sc=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=function(s){switch(s){case 5126:return pg;case 35664:return mg;case 35665:return fg;case 35666:return gg;case 35674:return vg;case 35675:return xg;case 35676:return yg;case 5124:case 35670:return _g;case 35667:case 35671:return bg;case 35668:case 35672:return Sg;case 35669:case 35673:return Mg;case 5125:return wg;case 36294:return Cg;case 36295:return Tg;case 36296:return Eg;case 35678:case 36198:case 36298:case 36306:case 35682:return Ag;case 35679:case 36299:case 36307:return Pg;case 35680:case 36300:case 36308:case 36293:return Rg;case 36289:case 36303:case 36311:case 36292:return Dg}}(t.type)}},Mc=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(s){switch(s){case 5126:return Lg;case 35664:return Ig;case 35665:return Ug;case 35666:return Fg;case 35674:return Bg;case 35675:return Og;case 35676:return kg;case 5124:case 35670:return Ng;case 35667:case 35671:return Gg;case 35668:case 35672:return Vg;case 35669:case 35673:return zg;case 5125:return Hg;case 36294:return Wg;case 36295:return jg;case 36296:return Xg;case 35678:case 36198:case 36298:case 36306:case 35682:return qg;case 35679:case 36299:case 36307:return Yg;case 35680:case 36300:case 36308:case 36293:return Kg;case 36289:case 36303:case 36311:case 36292:return Zg}}(t.type)}},wc=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let s=this.seq;for(let r=0,a=s.length;r!==a;++r){let o=s[r];o.setValue(e,t[o.id],i)}}},bc=/(\w+)(\])?(\[|\.)?/g;function Sp(n,e){n.seq.push(e),n.map[e.id]=e}function Qg(n,e,t){let i=n.name,s=i.length;for(bc.lastIndex=0;;){let r=bc.exec(i),a=bc.lastIndex,o=r[1],l=r[2]==="]",h=r[3];if(l&&(o|=0),h===void 0||h==="["&&a+2===s){Sp(t,h===void 0?new Sc(o,n,e):new Mc(o,n,e));break}{let c=t.map[o];c===void 0&&(c=new wc(o),Sp(t,c)),t=c}}}var Er=class{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){let r=e.getActiveUniform(t,s);Qg(r,e.getUniformLocation(t,r.name),this)}}setValue(e,t,i,s){let r=this.map[t];r!==void 0&&r.setValue(e,i,s)}setOptional(e,t,i){let s=t[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,t,i,s){for(let r=0,a=t.length;r!==a;++r){let o=t[r],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,s)}}static seqWithValue(e,t){let i=[];for(let s=0,r=e.length;s!==r;++s){let a=e[s];a.id in t&&i.push(a)}return i}};function Mp(n,e,t){let i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}var Jg=37297,$g=0,wp=new Ae;function Cp(n,e,t){let i=n.getShaderParameter(e,n.COMPILE_STATUS),s=n.getShaderInfoLog(e).trim();if(i&&s==="")return"";let r=/ERROR: 0:(\d+)/.exec(s);if(r){let a=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+function(o,l){let h=o.split(`
`),c=[],u=Math.max(l-6,0),d=Math.min(l+6,h.length);for(let m=u;m<d;m++){let f=m+1;c.push(`${f===l?">":" "} ${f}: ${h[m]}`)}return c.join(`
`)}(n.getShaderSource(e),a)}return s}function ev(n,e){let t=function(i){Ve._getMatrix(wp,Ve.workingColorSpace,i);let s=`mat3( ${wp.elements.map(r=>r.toFixed(4))} )`;switch(Ve.getTransfer(i)){case Jr:return[s,"LinearTransferOETF"];case Ke:return[s,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[s,"LinearTransferOETF"]}}(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function tv(n,e){let t;switch(e){case Id:t="Linear";break;case Ud:t="Reinhard";break;case Fd:t="Cineon";break;case Bd:t="ACESFilmic";break;case kd:t="AgX";break;case Nd:t="Neutral";break;case Od:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}var Jo=new M;function iv(){return Ve.getLuminanceCoefficients(Jo),["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${Jo.x.toFixed(4)}, ${Jo.y.toFixed(4)}, ${Jo.z.toFixed(4)} );`,"	return dot( weights, rgb );","}"].join(`
`)}function zn(n){return n!==""}function Tp(n,e){let t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ep(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var sv=/^[ \t]*#include +<([\w\d./]+)>/gm;function Cc(n){return n.replace(sv,nv)}var rv=new Map;function nv(n,e){let t=Te[e];if(t===void 0){let i=rv.get(e);if(i===void 0)throw new Error("Can not resolve #include <"+e+">");t=Te[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i)}return Cc(t)}var av=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ap(n){return n.replace(av,ov)}function ov(n,e,t,i){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Pp(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function lv(n,e,t,i){let s=n.getContext(),r=t.defines,a=t.vertexShader,o=t.fragmentShader,l=function(B){let V="SHADOWMAP_TYPE_BASIC";return B.shadowMapType===Ah?V="SHADOWMAP_TYPE_PCF":B.shadowMapType===To?V="SHADOWMAP_TYPE_PCF_SOFT":B.shadowMapType===bi&&(V="SHADOWMAP_TYPE_VSM"),V}(t),h=function(B){let V="ENVMAP_TYPE_CUBE";if(B.envMap)switch(B.envMapMode){case Os:case ks:V="ENVMAP_TYPE_CUBE";break;case kn:V="ENVMAP_TYPE_CUBE_UV"}return V}(t),c=function(B){let V="ENVMAP_MODE_REFLECTION";return B.envMap&&B.envMapMode===ks&&(V="ENVMAP_MODE_REFRACTION"),V}(t),u=function(B){let V="ENVMAP_BLENDING_NONE";if(B.envMap)switch(B.combine){case Rd:V="ENVMAP_BLENDING_MULTIPLY";break;case Dd:V="ENVMAP_BLENDING_MIX";break;case Ld:V="ENVMAP_BLENDING_ADD"}return V}(t),d=function(B){let V=B.envMapCubeUVHeight;if(V===null)return null;let j=Math.log2(V)-2,z=1/V;return{texelWidth:1/(3*Math.max(Math.pow(2,j),112)),texelHeight:z,maxMip:j}}(t),m=function(B){return[B.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",B.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(zn).join(`
`)}(t),f=function(B){let V=[];for(let j in B){let z=B[j];z!==!1&&V.push("#define "+j+" "+z)}return V.join(`
`)}(r),v=s.createProgram(),p,g,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f].filter(zn).join(`
`),p.length>0&&(p+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f].filter(zn).join(`
`),g.length>0&&(g+=`
`)):(p=[Pp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(zn).join(`
`),g=[Pp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Hi?"#define TONE_MAPPING":"",t.toneMapping!==Hi?Te.tonemapping_pars_fragment:"",t.toneMapping!==Hi?tv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Te.colorspace_pars_fragment,ev("linearToOutputTexel",t.outputColorSpace),iv(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(zn).join(`
`)),a=Cc(a),a=Tp(a,t),a=Ep(a,t),o=Cc(o),o=Tp(o,t),o=Ep(o,t),a=Ap(a),o=Ap(o),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,p=[m,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,g=["#define varying in",t.glslVersion===cc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===cc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);let y=x+p+a,_=x+g+o,b=Mp(s,s.VERTEX_SHADER,y),S=Mp(s,s.FRAGMENT_SHADER,_);function E(B){if(n.debug.checkShaderErrors){let V=s.getProgramInfoLog(v).trim(),j=s.getShaderInfoLog(b).trim(),z=s.getShaderInfoLog(S).trim(),q=!0,K=!0;if(s.getProgramParameter(v,s.LINK_STATUS)===!1)if(q=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(s,v,b,S);else{let $=Cp(s,b,"vertex"),ee=Cp(s,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(v,s.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+V+`
`+$+`
`+ee)}else V!==""?console.warn("THREE.WebGLProgram: Program Info Log:",V):j!==""&&z!==""||(K=!1);K&&(B.diagnostics={runnable:q,programLog:V,vertexShader:{log:j,prefix:p},fragmentShader:{log:z,prefix:g}})}s.deleteShader(b),s.deleteShader(S),P=new Er(s,v),D=function(V,j){let z={},q=V.getProgramParameter(j,V.ACTIVE_ATTRIBUTES);for(let K=0;K<q;K++){let $=V.getActiveAttrib(j,K),ee=$.name,le=1;$.type===V.FLOAT_MAT2&&(le=2),$.type===V.FLOAT_MAT3&&(le=3),$.type===V.FLOAT_MAT4&&(le=4),z[ee]={type:$.type,location:V.getAttribLocation(j,ee),locationSize:le}}return z}(s,v)}let P,D;s.attachShader(v,b),s.attachShader(v,S),t.index0AttributeName!==void 0?s.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(v,0,"position"),s.linkProgram(v),this.getUniforms=function(){return P===void 0&&E(this),P},this.getAttributes=function(){return D===void 0&&E(this),D};let O=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return O===!1&&(O=s.getProgramParameter(v,Jg)),O},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=$g++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=b,this.fragmentShader=S,this}var hv=0,Tc=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){let t=this.shaderCache,i=t.get(e);return i===void 0&&(i=new Ec(e),t.set(e,i)),i}},Ec=class{constructor(e){this.id=hv++,this.code=e,this.usedTimes=0}};function cv(n,e,t,i,s,r,a){let o=new sn,l=new Tc,h=new Set,c=[],u=s.logarithmicDepthBuffer,d=s.vertexTextures,m=s.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(p){return h.add(p),p===0?"uv":`uv${p}`}return{getParameters:function(p,g,x,y,_){let b=y.fog,S=_.geometry,E=p.isMeshStandardMaterial?y.environment:null,P=(p.isMeshStandardMaterial?t:e).get(p.envMap||E),D=P&&P.mapping===kn?P.image.height:null,O=f[p.type];p.precision!==null&&(m=s.getMaxPrecision(p.precision),m!==p.precision&&console.warn("THREE.WebGLProgram.getParameters:",p.precision,"not supported, using",m,"instead."));let B=S.morphAttributes.position||S.morphAttributes.normal||S.morphAttributes.color,V=B!==void 0?B.length:0,j,z,q,K,$=0;if(S.morphAttributes.position!==void 0&&($=1),S.morphAttributes.normal!==void 0&&($=2),S.morphAttributes.color!==void 0&&($=3),O){let Or=Ci[O];j=Or.vertexShader,z=Or.fragmentShader}else j=p.vertexShader,z=p.fragmentShader,l.update(p),q=l.getVertexShaderID(p),K=l.getFragmentShaderID(p);let ee=n.getRenderTarget(),le=n.state.buffers.depth.getReversed(),me=_.isInstancedMesh===!0,J=_.isBatchedMesh===!0,re=!!p.map,ce=!!p.matcap,de=!!P,ae=!!p.aoMap,A=!!p.lightMap,C=!!p.bumpMap,U=!!p.normalMap,F=!!p.displacementMap,R=!!p.emissiveMap,I=!!p.metalnessMap,w=!!p.roughnessMap,L=p.anisotropy>0,H=p.clearcoat>0,te=p.dispersion>0,N=p.iridescence>0,Q=p.sheen>0,Z=p.transmission>0,se=L&&!!p.anisotropyMap,xe=H&&!!p.clearcoatMap,fe=H&&!!p.clearcoatNormalMap,Se=H&&!!p.clearcoatRoughnessMap,Ee=N&&!!p.iridescenceMap,He=N&&!!p.iridescenceThicknessMap,Ne=Q&&!!p.sheenColorMap,Me=Q&&!!p.sheenRoughnessMap,je=!!p.specularMap,tt=!!p.specularColorMap,lt=!!p.specularIntensityMap,be=Z&&!!p.transmissionMap,Ge=Z&&!!p.thicknessMap,et=!!p.gradientMap,Ys=!!p.alphaMap,ea=p.alphaTest>0,ii=!!p.alphaHash,fi=!!p.extensions,os=Hi;p.toneMapped&&(ee!==null&&ee.isXRRenderTarget!==!0||(os=n.toneMapping));let k={shaderID:O,shaderType:p.type,shaderName:p.name,vertexShader:j,fragmentShader:z,defines:p.defines,customVertexShaderID:q,customFragmentShaderID:K,isRawShaderMaterial:p.isRawShaderMaterial===!0,glslVersion:p.glslVersion,precision:m,batching:J,batchingColor:J&&_._colorsTexture!==null,instancing:me,instancingColor:me&&_.instanceColor!==null,instancingMorph:me&&_.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ee===null?n.outputColorSpace:ee.isXRRenderTarget===!0?ee.texture.colorSpace:Qt,alphaToCoverage:!!p.alphaToCoverage,map:re,matcap:ce,envMap:de,envMapMode:de&&P.mapping,envMapCubeUVHeight:D,aoMap:ae,lightMap:A,bumpMap:C,normalMap:U,displacementMap:d&&F,emissiveMap:R,normalMapObjectSpace:U&&p.normalMapType===qd,normalMapTangentSpace:U&&p.normalMapType===Xd,metalnessMap:I,roughnessMap:w,anisotropy:L,anisotropyMap:se,clearcoat:H,clearcoatMap:xe,clearcoatNormalMap:fe,clearcoatRoughnessMap:Se,dispersion:te,iridescence:N,iridescenceMap:Ee,iridescenceThicknessMap:He,sheen:Q,sheenColorMap:Ne,sheenRoughnessMap:Me,specularMap:je,specularColorMap:tt,specularIntensityMap:lt,transmission:Z,transmissionMap:be,thicknessMap:Ge,gradientMap:et,opaque:p.transparent===!1&&p.blending===Bn&&p.alphaToCoverage===!1,alphaMap:Ys,alphaTest:ea,alphaHash:ii,combine:p.combine,mapUv:re&&v(p.map.channel),aoMapUv:ae&&v(p.aoMap.channel),lightMapUv:A&&v(p.lightMap.channel),bumpMapUv:C&&v(p.bumpMap.channel),normalMapUv:U&&v(p.normalMap.channel),displacementMapUv:F&&v(p.displacementMap.channel),emissiveMapUv:R&&v(p.emissiveMap.channel),metalnessMapUv:I&&v(p.metalnessMap.channel),roughnessMapUv:w&&v(p.roughnessMap.channel),anisotropyMapUv:se&&v(p.anisotropyMap.channel),clearcoatMapUv:xe&&v(p.clearcoatMap.channel),clearcoatNormalMapUv:fe&&v(p.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&v(p.clearcoatRoughnessMap.channel),iridescenceMapUv:Ee&&v(p.iridescenceMap.channel),iridescenceThicknessMapUv:He&&v(p.iridescenceThicknessMap.channel),sheenColorMapUv:Ne&&v(p.sheenColorMap.channel),sheenRoughnessMapUv:Me&&v(p.sheenRoughnessMap.channel),specularMapUv:je&&v(p.specularMap.channel),specularColorMapUv:tt&&v(p.specularColorMap.channel),specularIntensityMapUv:lt&&v(p.specularIntensityMap.channel),transmissionMapUv:be&&v(p.transmissionMap.channel),thicknessMapUv:Ge&&v(p.thicknessMap.channel),alphaMapUv:Ys&&v(p.alphaMap.channel),vertexTangents:!!S.attributes.tangent&&(U||L),vertexColors:p.vertexColors,vertexAlphas:p.vertexColors===!0&&!!S.attributes.color&&S.attributes.color.itemSize===4,pointsUvs:_.isPoints===!0&&!!S.attributes.uv&&(re||Ys),fog:!!b,useFog:p.fog===!0,fogExp2:!!b&&b.isFogExp2,flatShading:p.flatShading===!0,sizeAttenuation:p.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:le,skinning:_.isSkinnedMesh===!0,morphTargets:S.morphAttributes.position!==void 0,morphNormals:S.morphAttributes.normal!==void 0,morphColors:S.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:$,numDirLights:g.directional.length,numPointLights:g.point.length,numSpotLights:g.spot.length,numSpotLightMaps:g.spotLightMap.length,numRectAreaLights:g.rectArea.length,numHemiLights:g.hemi.length,numDirLightShadows:g.directionalShadowMap.length,numPointLightShadows:g.pointShadowMap.length,numSpotLightShadows:g.spotShadowMap.length,numSpotLightShadowsWithMaps:g.numSpotLightShadowsWithMaps,numLightProbes:g.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:p.dithering,shadowMapEnabled:n.shadowMap.enabled&&x.length>0,shadowMapType:n.shadowMap.type,toneMapping:os,decodeVideoTexture:re&&p.map.isVideoTexture===!0&&Ve.getTransfer(p.map.colorSpace)===Ke,decodeVideoTextureEmissive:R&&p.emissiveMap.isVideoTexture===!0&&Ve.getTransfer(p.emissiveMap.colorSpace)===Ke,premultipliedAlpha:p.premultipliedAlpha,doubleSided:p.side===Je,flipSided:p.side===At,useDepthPacking:p.depthPacking>=0,depthPacking:p.depthPacking||0,index0AttributeName:p.index0AttributeName,extensionClipCullDistance:fi&&p.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(fi&&p.extensions.multiDraw===!0||J)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:p.customProgramCacheKey()};return k.vertexUv1s=h.has(1),k.vertexUv2s=h.has(2),k.vertexUv3s=h.has(3),h.clear(),k},getProgramCacheKey:function(p){let g=[];if(p.shaderID?g.push(p.shaderID):(g.push(p.customVertexShaderID),g.push(p.customFragmentShaderID)),p.defines!==void 0)for(let x in p.defines)g.push(x),g.push(p.defines[x]);return p.isRawShaderMaterial===!1&&(function(x,y){x.push(y.precision),x.push(y.outputColorSpace),x.push(y.envMapMode),x.push(y.envMapCubeUVHeight),x.push(y.mapUv),x.push(y.alphaMapUv),x.push(y.lightMapUv),x.push(y.aoMapUv),x.push(y.bumpMapUv),x.push(y.normalMapUv),x.push(y.displacementMapUv),x.push(y.emissiveMapUv),x.push(y.metalnessMapUv),x.push(y.roughnessMapUv),x.push(y.anisotropyMapUv),x.push(y.clearcoatMapUv),x.push(y.clearcoatNormalMapUv),x.push(y.clearcoatRoughnessMapUv),x.push(y.iridescenceMapUv),x.push(y.iridescenceThicknessMapUv),x.push(y.sheenColorMapUv),x.push(y.sheenRoughnessMapUv),x.push(y.specularMapUv),x.push(y.specularColorMapUv),x.push(y.specularIntensityMapUv),x.push(y.transmissionMapUv),x.push(y.thicknessMapUv),x.push(y.combine),x.push(y.fogExp2),x.push(y.sizeAttenuation),x.push(y.morphTargetsCount),x.push(y.morphAttributeCount),x.push(y.numDirLights),x.push(y.numPointLights),x.push(y.numSpotLights),x.push(y.numSpotLightMaps),x.push(y.numHemiLights),x.push(y.numRectAreaLights),x.push(y.numDirLightShadows),x.push(y.numPointLightShadows),x.push(y.numSpotLightShadows),x.push(y.numSpotLightShadowsWithMaps),x.push(y.numLightProbes),x.push(y.shadowMapType),x.push(y.toneMapping),x.push(y.numClippingPlanes),x.push(y.numClipIntersection),x.push(y.depthPacking)}(g,p),function(x,y){o.disableAll(),y.supportsVertexTextures&&o.enable(0),y.instancing&&o.enable(1),y.instancingColor&&o.enable(2),y.instancingMorph&&o.enable(3),y.matcap&&o.enable(4),y.envMap&&o.enable(5),y.normalMapObjectSpace&&o.enable(6),y.normalMapTangentSpace&&o.enable(7),y.clearcoat&&o.enable(8),y.iridescence&&o.enable(9),y.alphaTest&&o.enable(10),y.vertexColors&&o.enable(11),y.vertexAlphas&&o.enable(12),y.vertexUv1s&&o.enable(13),y.vertexUv2s&&o.enable(14),y.vertexUv3s&&o.enable(15),y.vertexTangents&&o.enable(16),y.anisotropy&&o.enable(17),y.alphaHash&&o.enable(18),y.batching&&o.enable(19),y.dispersion&&o.enable(20),y.batchingColor&&o.enable(21),x.push(o.mask),o.disableAll(),y.fog&&o.enable(0),y.useFog&&o.enable(1),y.flatShading&&o.enable(2),y.logarithmicDepthBuffer&&o.enable(3),y.reverseDepthBuffer&&o.enable(4),y.skinning&&o.enable(5),y.morphTargets&&o.enable(6),y.morphNormals&&o.enable(7),y.morphColors&&o.enable(8),y.premultipliedAlpha&&o.enable(9),y.shadowMapEnabled&&o.enable(10),y.doubleSided&&o.enable(11),y.flipSided&&o.enable(12),y.useDepthPacking&&o.enable(13),y.dithering&&o.enable(14),y.transmission&&o.enable(15),y.sheen&&o.enable(16),y.opaque&&o.enable(17),y.pointsUvs&&o.enable(18),y.decodeVideoTexture&&o.enable(19),y.decodeVideoTextureEmissive&&o.enable(20),y.alphaToCoverage&&o.enable(21),x.push(o.mask)}(g,p),g.push(n.outputColorSpace)),g.push(p.customProgramCacheKey),g.join()},getUniforms:function(p){let g=f[p.type],x;if(g){let y=Ci[g];x=ji.clone(y.uniforms)}else x=p.uniforms;return x},acquireProgram:function(p,g){let x;for(let y=0,_=c.length;y<_;y++){let b=c[y];if(b.cacheKey===g){x=b,++x.usedTimes;break}}return x===void 0&&(x=new lv(n,g,p,r),c.push(x)),x},releaseProgram:function(p){if(--p.usedTimes==0){let g=c.indexOf(p);c[g]=c[c.length-1],c.pop(),p.destroy()}},releaseShaderCache:function(p){l.remove(p)},programs:c,dispose:function(){l.dispose()}}}function uv(){let n=new WeakMap;return{has:function(e){return n.has(e)},get:function(e){let t=n.get(e);return t===void 0&&(t={},n.set(e,t)),t},remove:function(e){n.delete(e)},update:function(e,t,i){n.get(e)[t]=i},dispose:function(){n=new WeakMap}}}function dv(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function Rp(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Dp(){let n=[],e=0,t=[],i=[],s=[];function r(a,o,l,h,c,u){let d=n[e];return d===void 0?(d={id:a.id,object:a,geometry:o,material:l,groupOrder:h,renderOrder:a.renderOrder,z:c,group:u},n[e]=d):(d.id=a.id,d.object=a,d.geometry=o,d.material=l,d.groupOrder=h,d.renderOrder=a.renderOrder,d.z=c,d.group=u),e++,d}return{opaque:t,transmissive:i,transparent:s,init:function(){e=0,t.length=0,i.length=0,s.length=0},push:function(a,o,l,h,c,u){let d=r(a,o,l,h,c,u);l.transmission>0?i.push(d):l.transparent===!0?s.push(d):t.push(d)},unshift:function(a,o,l,h,c,u){let d=r(a,o,l,h,c,u);l.transmission>0?i.unshift(d):l.transparent===!0?s.unshift(d):t.unshift(d)},finish:function(){for(let a=e,o=n.length;a<o;a++){let l=n[a];if(l.id===null)break;l.id=null,l.object=null,l.geometry=null,l.material=null,l.group=null}},sort:function(a,o){t.length>1&&t.sort(a||dv),i.length>1&&i.sort(o||Rp),s.length>1&&s.sort(o||Rp)}}}function pv(){let n=new WeakMap;return{get:function(e,t){let i=n.get(e),s;return i===void 0?(s=new Dp,n.set(e,[s])):t>=i.length?(s=new Dp,i.push(s)):s=i[t],s},dispose:function(){n=new WeakMap}}}function mv(){let n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new M,color:new he};break;case"SpotLight":t={position:new M,direction:new M,color:new he,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new M,color:new he,distance:0,decay:0};break;case"HemisphereLight":t={direction:new M,skyColor:new he,groundColor:new he};break;case"RectAreaLight":t={color:new he,position:new M,halfWidth:new M,halfHeight:new M}}return n[e.id]=t,t}}}var fv=0;function gv(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function vv(n){let e=new mv,t=function(){let o={};return{get:function(l){if(o[l.id]!==void 0)return o[l.id];let h;switch(l.type){case"DirectionalLight":case"SpotLight":h={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"PointLight":h={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G,shadowCameraNear:1,shadowCameraFar:1e3}}return o[l.id]=h,h}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let o=0;o<9;o++)i.probe.push(new M);let s=new M,r=new pe,a=new pe;return{setup:function(o){let l=0,h=0,c=0;for(let E=0;E<9;E++)i.probe[E].set(0,0,0);let u=0,d=0,m=0,f=0,v=0,p=0,g=0,x=0,y=0,_=0,b=0;o.sort(gv);for(let E=0,P=o.length;E<P;E++){let D=o[E],O=D.color,B=D.intensity,V=D.distance,j=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)l+=O.r*B,h+=O.g*B,c+=O.b*B;else if(D.isLightProbe){for(let z=0;z<9;z++)i.probe[z].addScaledVector(D.sh.coefficients[z],B);b++}else if(D.isDirectionalLight){let z=e.get(D);if(z.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){let q=D.shadow,K=t.get(D);K.shadowIntensity=q.intensity,K.shadowBias=q.bias,K.shadowNormalBias=q.normalBias,K.shadowRadius=q.radius,K.shadowMapSize=q.mapSize,i.directionalShadow[u]=K,i.directionalShadowMap[u]=j,i.directionalShadowMatrix[u]=D.shadow.matrix,p++}i.directional[u]=z,u++}else if(D.isSpotLight){let z=e.get(D);z.position.setFromMatrixPosition(D.matrixWorld),z.color.copy(O).multiplyScalar(B),z.distance=V,z.coneCos=Math.cos(D.angle),z.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),z.decay=D.decay,i.spot[m]=z;let q=D.shadow;if(D.map&&(i.spotLightMap[y]=D.map,y++,q.updateMatrices(D),D.castShadow&&_++),i.spotLightMatrix[m]=q.matrix,D.castShadow){let K=t.get(D);K.shadowIntensity=q.intensity,K.shadowBias=q.bias,K.shadowNormalBias=q.normalBias,K.shadowRadius=q.radius,K.shadowMapSize=q.mapSize,i.spotShadow[m]=K,i.spotShadowMap[m]=j,x++}m++}else if(D.isRectAreaLight){let z=e.get(D);z.color.copy(O).multiplyScalar(B),z.halfWidth.set(.5*D.width,0,0),z.halfHeight.set(0,.5*D.height,0),i.rectArea[f]=z,f++}else if(D.isPointLight){let z=e.get(D);if(z.color.copy(D.color).multiplyScalar(D.intensity),z.distance=D.distance,z.decay=D.decay,D.castShadow){let q=D.shadow,K=t.get(D);K.shadowIntensity=q.intensity,K.shadowBias=q.bias,K.shadowNormalBias=q.normalBias,K.shadowRadius=q.radius,K.shadowMapSize=q.mapSize,K.shadowCameraNear=q.camera.near,K.shadowCameraFar=q.camera.far,i.pointShadow[d]=K,i.pointShadowMap[d]=j,i.pointShadowMatrix[d]=D.shadow.matrix,g++}i.point[d]=z,d++}else if(D.isHemisphereLight){let z=e.get(D);z.skyColor.copy(D.color).multiplyScalar(B),z.groundColor.copy(D.groundColor).multiplyScalar(B),i.hemi[v]=z,v++}}f>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=oe.LTC_FLOAT_1,i.rectAreaLTC2=oe.LTC_FLOAT_2):(i.rectAreaLTC1=oe.LTC_HALF_1,i.rectAreaLTC2=oe.LTC_HALF_2)),i.ambient[0]=l,i.ambient[1]=h,i.ambient[2]=c;let S=i.hash;S.directionalLength===u&&S.pointLength===d&&S.spotLength===m&&S.rectAreaLength===f&&S.hemiLength===v&&S.numDirectionalShadows===p&&S.numPointShadows===g&&S.numSpotShadows===x&&S.numSpotMaps===y&&S.numLightProbes===b||(i.directional.length=u,i.spot.length=m,i.rectArea.length=f,i.point.length=d,i.hemi.length=v,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=x,i.spotShadowMap.length=x,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=g,i.spotLightMatrix.length=x+y-_,i.spotLightMap.length=y,i.numSpotLightShadowsWithMaps=_,i.numLightProbes=b,S.directionalLength=u,S.pointLength=d,S.spotLength=m,S.rectAreaLength=f,S.hemiLength=v,S.numDirectionalShadows=p,S.numPointShadows=g,S.numSpotShadows=x,S.numSpotMaps=y,S.numLightProbes=b,i.version=fv++)},setupView:function(o,l){let h=0,c=0,u=0,d=0,m=0,f=l.matrixWorldInverse;for(let v=0,p=o.length;v<p;v++){let g=o[v];if(g.isDirectionalLight){let x=i.directional[h];x.direction.setFromMatrixPosition(g.matrixWorld),s.setFromMatrixPosition(g.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(f),h++}else if(g.isSpotLight){let x=i.spot[u];x.position.setFromMatrixPosition(g.matrixWorld),x.position.applyMatrix4(f),x.direction.setFromMatrixPosition(g.matrixWorld),s.setFromMatrixPosition(g.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(f),u++}else if(g.isRectAreaLight){let x=i.rectArea[d];x.position.setFromMatrixPosition(g.matrixWorld),x.position.applyMatrix4(f),a.identity(),r.copy(g.matrixWorld),r.premultiply(f),a.extractRotation(r),x.halfWidth.set(.5*g.width,0,0),x.halfHeight.set(0,.5*g.height,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),d++}else if(g.isPointLight){let x=i.point[c];x.position.setFromMatrixPosition(g.matrixWorld),x.position.applyMatrix4(f),c++}else if(g.isHemisphereLight){let x=i.hemi[m];x.direction.setFromMatrixPosition(g.matrixWorld),x.direction.transformDirection(f),m++}}},state:i}}function Lp(n){let e=new vv(n),t=[],i=[],s={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(r){s.camera=r,t.length=0,i.length=0},state:s,setupLights:function(){e.setup(t)},setupLightsView:function(r){e.setupView(t,r)},pushLight:function(r){t.push(r)},pushShadow:function(r){i.push(r)}}}function xv(n){let e=new WeakMap;return{get:function(t,i=0){let s=e.get(t),r;return s===void 0?(r=new Lp(n),e.set(t,[r])):i>=s.length?(r=new Lp(n),s.push(r)):r=s[i],r},dispose:function(){e=new WeakMap}}}function yv(n,e,t){let i=new Es,s=new G,r=new G,a=new Ie,o=new go({depthPacking:jd}),l=new vo,h={},c=t.maxTextureSize,u={[ft]:At,[At]:ft,[Je]:Je},d=new we({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new G},radius:{value:4}},vertexShader:`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fragmentShader:`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`}),m=d.clone();m.defines.HORIZONTAL_PASS=1;let f=new We;f.setAttribute("position",new Et(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let v=new nt(f,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ah;let g=this.type;function x(S,E){let P=e.update(v);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,m.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new ct(s.x,s.y)),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,n.setRenderTarget(S.mapPass),n.clear(),n.renderBufferDirect(E,null,P,d,v,null),m.uniforms.shadow_pass.value=S.mapPass.texture,m.uniforms.resolution.value=S.mapSize,m.uniforms.radius.value=S.radius,n.setRenderTarget(S.map),n.clear(),n.renderBufferDirect(E,null,P,m,v,null)}function y(S,E,P,D){let O=null,B=P.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(B!==void 0)O=B;else if(O=P.isPointLight===!0?l:o,n.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0){let V=O.uuid,j=E.uuid,z=h[V];z===void 0&&(z={},h[V]=z);let q=z[j];q===void 0&&(q=O.clone(),z[j]=q,E.addEventListener("dispose",b)),O=q}return O.visible=E.visible,O.wireframe=E.wireframe,O.side=D===bi?E.shadowSide!==null?E.shadowSide:E.side:E.shadowSide!==null?E.shadowSide:u[E.side],O.alphaMap=E.alphaMap,O.alphaTest=E.alphaTest,O.map=E.map,O.clipShadows=E.clipShadows,O.clippingPlanes=E.clippingPlanes,O.clipIntersection=E.clipIntersection,O.displacementMap=E.displacementMap,O.displacementScale=E.displacementScale,O.displacementBias=E.displacementBias,O.wireframeLinewidth=E.wireframeLinewidth,O.linewidth=E.linewidth,P.isPointLight===!0&&O.isMeshDistanceMaterial===!0&&(n.properties.get(O).light=P),O}function _(S,E,P,D,O){if(S.visible===!1)return;if(S.layers.test(E.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&O===bi)&&(!S.frustumCulled||i.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,S.matrixWorld);let V=e.update(S),j=S.material;if(Array.isArray(j)){let z=V.groups;for(let q=0,K=z.length;q<K;q++){let $=z[q],ee=j[$.materialIndex];if(ee&&ee.visible){let le=y(S,ee,D,O);S.onBeforeShadow(n,S,E,P,V,le,$),n.renderBufferDirect(P,null,V,le,S,$),S.onAfterShadow(n,S,E,P,V,le,$)}}}else if(j.visible){let z=y(S,j,D,O);S.onBeforeShadow(n,S,E,P,V,z,null),n.renderBufferDirect(P,null,V,z,S,null),S.onAfterShadow(n,S,E,P,V,z,null)}}let B=S.children;for(let V=0,j=B.length;V<j;V++)_(B[V],E,P,D,O)}function b(S){S.target.removeEventListener("dispose",b);for(let E in h){let P=h[E],D=S.target.uuid;D in P&&(P[D].dispose(),delete P[D])}}this.render=function(S,E,P){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||S.length===0)return;let D=n.getRenderTarget(),O=n.getActiveCubeFace(),B=n.getActiveMipmapLevel(),V=n.state;V.setBlending(Si),V.buffers.color.setClear(1,1,1,1),V.buffers.depth.setTest(!0),V.setScissorTest(!1);let j=g!==bi&&this.type===bi,z=g===bi&&this.type!==bi;for(let q=0,K=S.length;q<K;q++){let $=S[q],ee=$.shadow;if(ee===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(ee.autoUpdate===!1&&ee.needsUpdate===!1)continue;s.copy(ee.mapSize);let le=ee.getFrameExtents();if(s.multiply(le),r.copy(ee.mapSize),(s.x>c||s.y>c)&&(s.x>c&&(r.x=Math.floor(c/le.x),s.x=r.x*le.x,ee.mapSize.x=r.x),s.y>c&&(r.y=Math.floor(c/le.y),s.y=r.y*le.y,ee.mapSize.y=r.y)),ee.map===null||j===!0||z===!0){let J=this.type!==bi?{minFilter:rt,magFilter:rt}:{};ee.map!==null&&ee.map.dispose(),ee.map=new ct(s.x,s.y,J),ee.map.texture.name=$.name+".shadowMap",ee.camera.updateProjectionMatrix()}n.setRenderTarget(ee.map),n.clear();let me=ee.getViewportCount();for(let J=0;J<me;J++){let re=ee.getViewport(J);a.set(r.x*re.x,r.y*re.y,r.x*re.z,r.y*re.w),V.viewport(a),ee.updateMatrices($,J),i=ee.getFrustum(),_(E,P,ee.camera,$,this.type)}ee.isPointLightShadow!==!0&&this.type===bi&&x(ee,P),ee.needsUpdate=!1}g=this.type,p.needsUpdate=!1,n.setRenderTarget(D,O,B)}}var _v={[Eo]:Ao,[Po]:Lo,[Ro]:Io,[On]:Do,[Ao]:Eo,[Lo]:Po,[Io]:Ro,[Do]:On};function bv(n,e){let t=new function(){let w=!1,L=new Ie,H=null,te=new Ie(0,0,0,0);return{setMask:function(N){H===N||w||(n.colorMask(N,N,N,N),H=N)},setLocked:function(N){w=N},setClear:function(N,Q,Z,se,xe){xe===!0&&(N*=se,Q*=se,Z*=se),L.set(N,Q,Z,se),te.equals(L)===!1&&(n.clearColor(N,Q,Z,se),te.copy(L))},reset:function(){w=!1,H=null,te.set(-1,0,0,0)}}},i=new function(){let w=!1,L=!1,H=null,te=null,N=null;return{setReversed:function(Q){if(L!==Q){let Z=e.get("EXT_clip_control");L?Z.clipControlEXT(Z.LOWER_LEFT_EXT,Z.ZERO_TO_ONE_EXT):Z.clipControlEXT(Z.LOWER_LEFT_EXT,Z.NEGATIVE_ONE_TO_ONE_EXT);let se=N;N=null,this.setClear(se)}L=Q},getReversed:function(){return L},setTest:function(Q){Q?de(n.DEPTH_TEST):ae(n.DEPTH_TEST)},setMask:function(Q){H===Q||w||(n.depthMask(Q),H=Q)},setFunc:function(Q){if(L&&(Q=_v[Q]),te!==Q){switch(Q){case Eo:n.depthFunc(n.NEVER);break;case Ao:n.depthFunc(n.ALWAYS);break;case Po:n.depthFunc(n.LESS);break;case On:n.depthFunc(n.LEQUAL);break;case Ro:n.depthFunc(n.EQUAL);break;case Do:n.depthFunc(n.GEQUAL);break;case Lo:n.depthFunc(n.GREATER);break;case Io:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}te=Q}},setLocked:function(Q){w=Q},setClear:function(Q){N!==Q&&(L&&(Q=1-Q),n.clearDepth(Q),N=Q)},reset:function(){w=!1,H=null,te=null,N=null,L=!1}}},s=new function(){let w=!1,L=null,H=null,te=null,N=null,Q=null,Z=null,se=null,xe=null;return{setTest:function(fe){w||(fe?de(n.STENCIL_TEST):ae(n.STENCIL_TEST))},setMask:function(fe){L===fe||w||(n.stencilMask(fe),L=fe)},setFunc:function(fe,Se,Ee){H===fe&&te===Se&&N===Ee||(n.stencilFunc(fe,Se,Ee),H=fe,te=Se,N=Ee)},setOp:function(fe,Se,Ee){Q===fe&&Z===Se&&se===Ee||(n.stencilOp(fe,Se,Ee),Q=fe,Z=Se,se=Ee)},setLocked:function(fe){w=fe},setClear:function(fe){xe!==fe&&(n.clearStencil(fe),xe=fe)},reset:function(){w=!1,L=null,H=null,te=null,N=null,Q=null,Z=null,se=null,xe=null}}},r=new WeakMap,a=new WeakMap,o={},l={},h=new WeakMap,c=[],u=null,d=!1,m=null,f=null,v=null,p=null,g=null,x=null,y=null,_=new he(0,0,0),b=0,S=!1,E=null,P=null,D=null,O=null,B=null,V=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS),j=!1,z=0,q=n.getParameter(n.VERSION);q.indexOf("WebGL")!==-1?(z=parseFloat(/^WebGL (\d)/.exec(q)[1]),j=z>=1):q.indexOf("OpenGL ES")!==-1&&(z=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),j=z>=2);let K=null,$={},ee=n.getParameter(n.SCISSOR_BOX),le=n.getParameter(n.VIEWPORT),me=new Ie().fromArray(ee),J=new Ie().fromArray(le);function re(w,L,H,te){let N=new Uint8Array(4),Q=n.createTexture();n.bindTexture(w,Q),n.texParameteri(w,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(w,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Z=0;Z<H;Z++)w===n.TEXTURE_3D||w===n.TEXTURE_2D_ARRAY?n.texImage3D(L,0,n.RGBA,1,1,te,0,n.RGBA,n.UNSIGNED_BYTE,N):n.texImage2D(L+Z,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,N);return Q}let ce={};function de(w){o[w]!==!0&&(n.enable(w),o[w]=!0)}function ae(w){o[w]!==!1&&(n.disable(w),o[w]=!1)}ce[n.TEXTURE_2D]=re(n.TEXTURE_2D,n.TEXTURE_2D,1),ce[n.TEXTURE_CUBE_MAP]=re(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),ce[n.TEXTURE_2D_ARRAY]=re(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),ce[n.TEXTURE_3D]=re(n.TEXTURE_3D,n.TEXTURE_3D,1,1),t.setClear(0,0,0,1),i.setClear(1),s.setClear(0),de(n.DEPTH_TEST),i.setFunc(On),F(!1),R(Eh),de(n.CULL_FACE),U(Si);let A={[Sr]:n.FUNC_ADD,[ud]:n.FUNC_SUBTRACT,[dd]:n.FUNC_REVERSE_SUBTRACT};A[pd]=n.MIN,A[md]=n.MAX;let C={[fd]:n.ZERO,[gd]:n.ONE,[vd]:n.SRC_COLOR,[yd]:n.SRC_ALPHA,[Cd]:n.SRC_ALPHA_SATURATE,[Md]:n.DST_COLOR,[bd]:n.DST_ALPHA,[xd]:n.ONE_MINUS_SRC_COLOR,[_d]:n.ONE_MINUS_SRC_ALPHA,[wd]:n.ONE_MINUS_DST_COLOR,[Sd]:n.ONE_MINUS_DST_ALPHA,[Td]:n.CONSTANT_COLOR,[Ed]:n.ONE_MINUS_CONSTANT_COLOR,[Ad]:n.CONSTANT_ALPHA,[Pd]:n.ONE_MINUS_CONSTANT_ALPHA};function U(w,L,H,te,N,Q,Z,se,xe,fe){if(w!==Si){if(d===!1&&(de(n.BLEND),d=!0),w===cd)N=N||L,Q=Q||H,Z=Z||te,L===f&&N===g||(n.blendEquationSeparate(A[L],A[N]),f=L,g=N),H===v&&te===p&&Q===x&&Z===y||(n.blendFuncSeparate(C[H],C[te],C[Q],C[Z]),v=H,p=te,x=Q,y=Z),se.equals(_)!==!1&&xe===b||(n.blendColor(se.r,se.g,se.b,xe),_.copy(se),b=xe),m=w,S=!1;else if(w!==m||fe!==S){if(f===Sr&&g===Sr||(n.blendEquation(n.FUNC_ADD),f=Sr,g=Sr),fe)switch(w){case Bn:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Bs:n.blendFunc(n.ONE,n.ONE);break;case Ph:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Rh:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",w)}else switch(w){case Bn:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Bs:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case Ph:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Rh:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",w)}v=null,p=null,x=null,y=null,_.set(0,0,0),b=0,m=w,S=fe}}else d===!0&&(ae(n.BLEND),d=!1)}function F(w){E!==w&&(w?n.frontFace(n.CW):n.frontFace(n.CCW),E=w)}function R(w){w!==ld?(de(n.CULL_FACE),w!==P&&(w===Eh?n.cullFace(n.BACK):w===hd?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):ae(n.CULL_FACE),P=w}function I(w,L,H){w?(de(n.POLYGON_OFFSET_FILL),O===L&&B===H||(n.polygonOffset(L,H),O=L,B=H)):ae(n.POLYGON_OFFSET_FILL)}return{buffers:{color:t,depth:i,stencil:s},enable:de,disable:ae,bindFramebuffer:function(w,L){return l[w]!==L&&(n.bindFramebuffer(w,L),l[w]=L,w===n.DRAW_FRAMEBUFFER&&(l[n.FRAMEBUFFER]=L),w===n.FRAMEBUFFER&&(l[n.DRAW_FRAMEBUFFER]=L),!0)},drawBuffers:function(w,L){let H=c,te=!1;if(w){H=h.get(L),H===void 0&&(H=[],h.set(L,H));let N=w.textures;if(H.length!==N.length||H[0]!==n.COLOR_ATTACHMENT0){for(let Q=0,Z=N.length;Q<Z;Q++)H[Q]=n.COLOR_ATTACHMENT0+Q;H.length=N.length,te=!0}}else H[0]!==n.BACK&&(H[0]=n.BACK,te=!0);te&&n.drawBuffers(H)},useProgram:function(w){return u!==w&&(n.useProgram(w),u=w,!0)},setBlending:U,setMaterial:function(w,L){w.side===Je?ae(n.CULL_FACE):de(n.CULL_FACE);let H=w.side===At;L&&(H=!H),F(H),w.blending===Bn&&w.transparent===!1?U(Si):U(w.blending,w.blendEquation,w.blendSrc,w.blendDst,w.blendEquationAlpha,w.blendSrcAlpha,w.blendDstAlpha,w.blendColor,w.blendAlpha,w.premultipliedAlpha),i.setFunc(w.depthFunc),i.setTest(w.depthTest),i.setMask(w.depthWrite),t.setMask(w.colorWrite);let te=w.stencilWrite;s.setTest(te),te&&(s.setMask(w.stencilWriteMask),s.setFunc(w.stencilFunc,w.stencilRef,w.stencilFuncMask),s.setOp(w.stencilFail,w.stencilZFail,w.stencilZPass)),I(w.polygonOffset,w.polygonOffsetFactor,w.polygonOffsetUnits),w.alphaToCoverage===!0?de(n.SAMPLE_ALPHA_TO_COVERAGE):ae(n.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:F,setCullFace:R,setLineWidth:function(w){w!==D&&(j&&n.lineWidth(w),D=w)},setPolygonOffset:I,setScissorTest:function(w){w?de(n.SCISSOR_TEST):ae(n.SCISSOR_TEST)},activeTexture:function(w){w===void 0&&(w=n.TEXTURE0+V-1),K!==w&&(n.activeTexture(w),K=w)},bindTexture:function(w,L,H){H===void 0&&(H=K===null?n.TEXTURE0+V-1:K);let te=$[H];te===void 0&&(te={type:void 0,texture:void 0},$[H]=te),te.type===w&&te.texture===L||(K!==H&&(n.activeTexture(H),K=H),n.bindTexture(w,L||ce[w]),te.type=w,te.texture=L)},unbindTexture:function(){let w=$[K];w!==void 0&&w.type!==void 0&&(n.bindTexture(w.type,null),w.type=void 0,w.texture=void 0)},compressedTexImage2D:function(){try{n.compressedTexImage2D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},compressedTexImage3D:function(){try{n.compressedTexImage3D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},texImage2D:function(){try{n.texImage2D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},texImage3D:function(){try{n.texImage3D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},updateUBOMapping:function(w,L){let H=a.get(L);H===void 0&&(H=new WeakMap,a.set(L,H));let te=H.get(w);te===void 0&&(te=n.getUniformBlockIndex(L,w.name),H.set(w,te))},uniformBlockBinding:function(w,L){let H=a.get(L).get(w);r.get(L)!==H&&(n.uniformBlockBinding(L,H,w.__bindingPointIndex),r.set(L,H))},texStorage2D:function(){try{n.texStorage2D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},texStorage3D:function(){try{n.texStorage3D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},texSubImage2D:function(){try{n.texSubImage2D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},texSubImage3D:function(){try{n.texSubImage3D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},compressedTexSubImage2D:function(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},compressedTexSubImage3D:function(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(w){console.error("THREE.WebGLState:",w)}},scissor:function(w){me.equals(w)===!1&&(n.scissor(w.x,w.y,w.z,w.w),me.copy(w))},viewport:function(w){J.equals(w)===!1&&(n.viewport(w.x,w.y,w.z,w.w),J.copy(w))},reset:function(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),i.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),o={},K=null,$={},l={},h=new WeakMap,c=[],u=null,d=!1,m=null,f=null,v=null,p=null,g=null,x=null,y=null,_=new he(0,0,0),b=0,S=!1,E=null,P=null,D=null,O=null,B=null,me.set(0,0,n.canvas.width,n.canvas.height),J.set(0,0,n.canvas.width,n.canvas.height),t.reset(),i.reset(),s.reset()}}}function Sv(n,e,t,i,s,r,a){let o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator<"u"&&/OculusBrowser/g.test(navigator.userAgent),h=new G,c=new WeakMap,u,d=new WeakMap,m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function f(A,C){return m?new OffscreenCanvas(A,C):pr("canvas")}function v(A,C,U){let F=1,R=ae(A);if((R.width>U||R.height>U)&&(F=U/Math.max(R.width,R.height)),F<1){if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap||typeof VideoFrame<"u"&&A instanceof VideoFrame){let I=Math.floor(F*R.width),w=Math.floor(F*R.height);u===void 0&&(u=f(I,w));let L=C?f(I,w):u;return L.width=I,L.height=w,L.getContext("2d").drawImage(A,0,0,I,w),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+I+"x"+w+")."),L}return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),A}return A}function p(A){return A.generateMipmaps}function g(A){n.generateMipmap(A)}function x(A){return A.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:A.isWebGL3DRenderTarget?n.TEXTURE_3D:A.isWebGLArrayRenderTarget||A.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function y(A,C,U,F,R=!1){if(A!==null){if(n[A]!==void 0)return n[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let I=C;if(C===n.RED&&(U===n.FLOAT&&(I=n.R32F),U===n.HALF_FLOAT&&(I=n.R16F),U===n.UNSIGNED_BYTE&&(I=n.R8)),C===n.RED_INTEGER&&(U===n.UNSIGNED_BYTE&&(I=n.R8UI),U===n.UNSIGNED_SHORT&&(I=n.R16UI),U===n.UNSIGNED_INT&&(I=n.R32UI),U===n.BYTE&&(I=n.R8I),U===n.SHORT&&(I=n.R16I),U===n.INT&&(I=n.R32I)),C===n.RG&&(U===n.FLOAT&&(I=n.RG32F),U===n.HALF_FLOAT&&(I=n.RG16F),U===n.UNSIGNED_BYTE&&(I=n.RG8)),C===n.RG_INTEGER&&(U===n.UNSIGNED_BYTE&&(I=n.RG8UI),U===n.UNSIGNED_SHORT&&(I=n.RG16UI),U===n.UNSIGNED_INT&&(I=n.RG32UI),U===n.BYTE&&(I=n.RG8I),U===n.SHORT&&(I=n.RG16I),U===n.INT&&(I=n.RG32I)),C===n.RGB_INTEGER&&(U===n.UNSIGNED_BYTE&&(I=n.RGB8UI),U===n.UNSIGNED_SHORT&&(I=n.RGB16UI),U===n.UNSIGNED_INT&&(I=n.RGB32UI),U===n.BYTE&&(I=n.RGB8I),U===n.SHORT&&(I=n.RGB16I),U===n.INT&&(I=n.RGB32I)),C===n.RGBA_INTEGER&&(U===n.UNSIGNED_BYTE&&(I=n.RGBA8UI),U===n.UNSIGNED_SHORT&&(I=n.RGBA16UI),U===n.UNSIGNED_INT&&(I=n.RGBA32UI),U===n.BYTE&&(I=n.RGBA8I),U===n.SHORT&&(I=n.RGBA16I),U===n.INT&&(I=n.RGBA32I)),C===n.RGB&&U===n.UNSIGNED_INT_5_9_9_9_REV&&(I=n.RGB9_E5),C===n.RGBA){let w=R?Jr:Ve.getTransfer(F);U===n.FLOAT&&(I=n.RGBA32F),U===n.HALF_FLOAT&&(I=n.RGBA16F),U===n.UNSIGNED_BYTE&&(I=w===Ke?n.SRGB8_ALPHA8:n.RGBA8),U===n.UNSIGNED_SHORT_4_4_4_4&&(I=n.RGBA4),U===n.UNSIGNED_SHORT_5_5_5_1&&(I=n.RGB5_A1)}return I!==n.R16F&&I!==n.R32F&&I!==n.RG16F&&I!==n.RG32F&&I!==n.RGBA16F&&I!==n.RGBA32F||e.get("EXT_color_buffer_float"),I}function _(A,C){let U;return A?C===null||C===wi||C===wr?U=n.DEPTH24_STENCIL8:C===Ut?U=n.DEPTH32F_STENCIL8:C===as&&(U=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===wi||C===wr?U=n.DEPTH_COMPONENT24:C===Ut?U=n.DEPTH_COMPONENT32F:C===as&&(U=n.DEPTH_COMPONENT16),U}function b(A,C){return p(A)===!0||A.isFramebufferTexture&&A.minFilter!==rt&&A.minFilter!==Qe?Math.log2(Math.max(C.width,C.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?C.mipmaps.length:1}function S(A){let C=A.target;C.removeEventListener("dispose",S),function(U){let F=i.get(U);if(F.__webglInit===void 0)return;let R=U.source,I=d.get(R);if(I){let w=I[F.__cacheKey];w.usedTimes--,w.usedTimes===0&&P(U),Object.keys(I).length===0&&d.delete(R)}i.remove(U)}(C),C.isVideoTexture&&c.delete(C)}function E(A){let C=A.target;C.removeEventListener("dispose",E),function(U){let F=i.get(U);if(U.depthTexture&&(U.depthTexture.dispose(),i.remove(U.depthTexture)),U.isWebGLCubeRenderTarget)for(let I=0;I<6;I++){if(Array.isArray(F.__webglFramebuffer[I]))for(let w=0;w<F.__webglFramebuffer[I].length;w++)n.deleteFramebuffer(F.__webglFramebuffer[I][w]);else n.deleteFramebuffer(F.__webglFramebuffer[I]);F.__webglDepthbuffer&&n.deleteRenderbuffer(F.__webglDepthbuffer[I])}else{if(Array.isArray(F.__webglFramebuffer))for(let I=0;I<F.__webglFramebuffer.length;I++)n.deleteFramebuffer(F.__webglFramebuffer[I]);else n.deleteFramebuffer(F.__webglFramebuffer);if(F.__webglDepthbuffer&&n.deleteRenderbuffer(F.__webglDepthbuffer),F.__webglMultisampledFramebuffer&&n.deleteFramebuffer(F.__webglMultisampledFramebuffer),F.__webglColorRenderbuffer)for(let I=0;I<F.__webglColorRenderbuffer.length;I++)F.__webglColorRenderbuffer[I]&&n.deleteRenderbuffer(F.__webglColorRenderbuffer[I]);F.__webglDepthRenderbuffer&&n.deleteRenderbuffer(F.__webglDepthRenderbuffer)}let R=U.textures;for(let I=0,w=R.length;I<w;I++){let L=i.get(R[I]);L.__webglTexture&&(n.deleteTexture(L.__webglTexture),a.memory.textures--),i.remove(R[I])}i.remove(U)}(C)}function P(A){let C=i.get(A);n.deleteTexture(C.__webglTexture);let U=A.source;delete d.get(U)[C.__cacheKey],a.memory.textures--}let D=0;function O(A,C){let U=i.get(A);if(A.isVideoTexture&&function(F){let R=a.render.frame;c.get(F)!==R&&(c.set(F,R),F.update())}(A),A.isRenderTargetTexture===!1&&A.version>0&&U.__version!==A.version){let F=A.image;if(F===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(F.complete!==!1)return void K(U,A,C);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.bindTexture(n.TEXTURE_2D,U.__webglTexture,n.TEXTURE0+C)}let B={[_t]:n.REPEAT,[Oi]:n.CLAMP_TO_EDGE,[Ba]:n.MIRRORED_REPEAT},V={[rt]:n.NEAREST,[$t]:n.NEAREST_MIPMAP_NEAREST,[Nn]:n.NEAREST_MIPMAP_LINEAR,[Qe]:n.LINEAR,[Fo]:n.LINEAR_MIPMAP_NEAREST,[Ns]:n.LINEAR_MIPMAP_LINEAR},j={[Yd]:n.NEVER,[ep]:n.ALWAYS,[Kd]:n.LESS,[hc]:n.LEQUAL,[Zd]:n.EQUAL,[$d]:n.GEQUAL,[Qd]:n.GREATER,[Jd]:n.NOTEQUAL};function z(A,C){if(C.type!==Ut||e.has("OES_texture_float_linear")!==!1||C.magFilter!==Qe&&C.magFilter!==Fo&&C.magFilter!==Nn&&C.magFilter!==Ns&&C.minFilter!==Qe&&C.minFilter!==Fo&&C.minFilter!==Nn&&C.minFilter!==Ns||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(A,n.TEXTURE_WRAP_S,B[C.wrapS]),n.texParameteri(A,n.TEXTURE_WRAP_T,B[C.wrapT]),A!==n.TEXTURE_3D&&A!==n.TEXTURE_2D_ARRAY||n.texParameteri(A,n.TEXTURE_WRAP_R,B[C.wrapR]),n.texParameteri(A,n.TEXTURE_MAG_FILTER,V[C.magFilter]),n.texParameteri(A,n.TEXTURE_MIN_FILTER,V[C.minFilter]),C.compareFunction&&(n.texParameteri(A,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(A,n.TEXTURE_COMPARE_FUNC,j[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===rt||C.minFilter!==Nn&&C.minFilter!==Ns||C.type===Ut&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||i.get(C).__currentAnisotropy){let U=e.get("EXT_texture_filter_anisotropic");n.texParameterf(A,U.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,s.getMaxAnisotropy())),i.get(C).__currentAnisotropy=C.anisotropy}}}function q(A,C){let U=!1;A.__webglInit===void 0&&(A.__webglInit=!0,C.addEventListener("dispose",S));let F=C.source,R=d.get(F);R===void 0&&(R={},d.set(F,R));let I=function(w){let L=[];return L.push(w.wrapS),L.push(w.wrapT),L.push(w.wrapR||0),L.push(w.magFilter),L.push(w.minFilter),L.push(w.anisotropy),L.push(w.internalFormat),L.push(w.format),L.push(w.type),L.push(w.generateMipmaps),L.push(w.premultiplyAlpha),L.push(w.flipY),L.push(w.unpackAlignment),L.push(w.colorSpace),L.join()}(C);if(I!==A.__cacheKey){R[I]===void 0&&(R[I]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,U=!0),R[I].usedTimes++;let w=R[A.__cacheKey];w!==void 0&&(R[A.__cacheKey].usedTimes--,w.usedTimes===0&&P(C)),A.__cacheKey=I,A.__webglTexture=R[I].texture}return U}function K(A,C,U){let F=n.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(F=n.TEXTURE_2D_ARRAY),C.isData3DTexture&&(F=n.TEXTURE_3D);let R=q(A,C),I=C.source;t.bindTexture(F,A.__webglTexture,n.TEXTURE0+U);let w=i.get(I);if(I.version!==w.__version||R===!0){t.activeTexture(n.TEXTURE0+U);let L=Ve.getPrimaries(Ve.workingColorSpace),H=C.colorSpace===Gs?null:Ve.getPrimaries(C.colorSpace),te=C.colorSpace===Gs||L===H?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,C.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,C.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,te);let N=v(C.image,!1,s.maxTextureSize);N=de(C,N);let Q=r.convert(C.format,C.colorSpace),Z=r.convert(C.type),se,xe=y(C.internalFormat,Q,Z,C.colorSpace,C.isVideoTexture);z(F,C);let fe=C.mipmaps,Se=C.isVideoTexture!==!0,Ee=w.__version===void 0||R===!0,He=I.dataReady,Ne=b(C,N);if(C.isDepthTexture)xe=_(C.format===xs,C.type),Ee&&(Se?t.texStorage2D(n.TEXTURE_2D,1,xe,N.width,N.height):t.texImage2D(n.TEXTURE_2D,0,xe,N.width,N.height,0,Q,Z,null));else if(C.isDataTexture)if(fe.length>0){Se&&Ee&&t.texStorage2D(n.TEXTURE_2D,Ne,xe,fe[0].width,fe[0].height);for(let Me=0,je=fe.length;Me<je;Me++)se=fe[Me],Se?He&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Q,Z,se.data):t.texImage2D(n.TEXTURE_2D,Me,xe,se.width,se.height,0,Q,Z,se.data);C.generateMipmaps=!1}else Se?(Ee&&t.texStorage2D(n.TEXTURE_2D,Ne,xe,N.width,N.height),He&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,N.width,N.height,Q,Z,N.data)):t.texImage2D(n.TEXTURE_2D,0,xe,N.width,N.height,0,Q,Z,N.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){Se&&Ee&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ne,xe,fe[0].width,fe[0].height,N.depth);for(let Me=0,je=fe.length;Me<je;Me++)if(se=fe[Me],C.format!==ut)if(Q!==null)if(Se){if(He)if(C.layerUpdates.size>0){let tt=fc(se.width,se.height,C.format,C.type);for(let lt of C.layerUpdates){let be=se.data.subarray(lt*tt/se.data.BYTES_PER_ELEMENT,(lt+1)*tt/se.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,lt,se.width,se.height,1,Q,be)}C.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,0,se.width,se.height,N.depth,Q,se.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,Me,xe,se.width,se.height,N.depth,0,se.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Se?He&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,0,se.width,se.height,N.depth,Q,Z,se.data):t.texImage3D(n.TEXTURE_2D_ARRAY,Me,xe,se.width,se.height,N.depth,0,Q,Z,se.data)}else{Se&&Ee&&t.texStorage2D(n.TEXTURE_2D,Ne,xe,fe[0].width,fe[0].height);for(let Me=0,je=fe.length;Me<je;Me++)se=fe[Me],C.format!==ut?Q!==null?Se?He&&t.compressedTexSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Q,se.data):t.compressedTexImage2D(n.TEXTURE_2D,Me,xe,se.width,se.height,0,se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Se?He&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Q,Z,se.data):t.texImage2D(n.TEXTURE_2D,Me,xe,se.width,se.height,0,Q,Z,se.data)}else if(C.isDataArrayTexture)if(Se){if(Ee&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ne,xe,N.width,N.height,N.depth),He)if(C.layerUpdates.size>0){let Me=fc(N.width,N.height,C.format,C.type);for(let je of C.layerUpdates){let tt=N.data.subarray(je*Me/N.data.BYTES_PER_ELEMENT,(je+1)*Me/N.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,je,N.width,N.height,1,Q,Z,tt)}C.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,N.width,N.height,N.depth,Q,Z,N.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,xe,N.width,N.height,N.depth,0,Q,Z,N.data);else if(C.isData3DTexture)Se?(Ee&&t.texStorage3D(n.TEXTURE_3D,Ne,xe,N.width,N.height,N.depth),He&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,N.width,N.height,N.depth,Q,Z,N.data)):t.texImage3D(n.TEXTURE_3D,0,xe,N.width,N.height,N.depth,0,Q,Z,N.data);else if(C.isFramebufferTexture){if(Ee)if(Se)t.texStorage2D(n.TEXTURE_2D,Ne,xe,N.width,N.height);else{let Me=N.width,je=N.height;for(let tt=0;tt<Ne;tt++)t.texImage2D(n.TEXTURE_2D,tt,xe,Me,je,0,Q,Z,null),Me>>=1,je>>=1}}else if(fe.length>0){if(Se&&Ee){let Me=ae(fe[0]);t.texStorage2D(n.TEXTURE_2D,Ne,xe,Me.width,Me.height)}for(let Me=0,je=fe.length;Me<je;Me++)se=fe[Me],Se?He&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,Q,Z,se):t.texImage2D(n.TEXTURE_2D,Me,xe,Q,Z,se);C.generateMipmaps=!1}else if(Se){if(Ee){let Me=ae(N);t.texStorage2D(n.TEXTURE_2D,Ne,xe,Me.width,Me.height)}He&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Q,Z,N)}else t.texImage2D(n.TEXTURE_2D,0,xe,Q,Z,N);p(C)&&g(F),w.__version=I.version,C.onUpdate&&C.onUpdate(C)}A.__version=C.version}function $(A,C,U,F,R,I){let w=r.convert(U.format,U.colorSpace),L=r.convert(U.type),H=y(U.internalFormat,w,L,U.colorSpace),te=i.get(C),N=i.get(U);if(N.__renderTarget=C,!te.__hasExternalTextures){let Q=Math.max(1,C.width>>I),Z=Math.max(1,C.height>>I);R===n.TEXTURE_3D||R===n.TEXTURE_2D_ARRAY?t.texImage3D(R,I,H,Q,Z,C.depth,0,w,L,null):t.texImage2D(R,I,H,Q,Z,0,w,L,null)}t.bindFramebuffer(n.FRAMEBUFFER,A),ce(C)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,F,R,N.__webglTexture,0,re(C)):(R===n.TEXTURE_2D||R>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&R<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,F,R,N.__webglTexture,I),t.bindFramebuffer(n.FRAMEBUFFER,null)}function ee(A,C,U){if(n.bindRenderbuffer(n.RENDERBUFFER,A),C.depthBuffer){let F=C.depthTexture,R=F&&F.isDepthTexture?F.type:null,I=_(C.stencilBuffer,R),w=C.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,L=re(C);ce(C)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,L,I,C.width,C.height):U?n.renderbufferStorageMultisample(n.RENDERBUFFER,L,I,C.width,C.height):n.renderbufferStorage(n.RENDERBUFFER,I,C.width,C.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,w,n.RENDERBUFFER,A)}else{let F=C.textures;for(let R=0;R<F.length;R++){let I=F[R],w=r.convert(I.format,I.colorSpace),L=r.convert(I.type),H=y(I.internalFormat,w,L,I.colorSpace),te=re(C);U&&ce(C)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,te,H,C.width,C.height):ce(C)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,te,H,C.width,C.height):n.renderbufferStorage(n.RENDERBUFFER,H,C.width,C.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function le(A){let C=i.get(A),U=A.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==A.depthTexture){let F=A.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),F){let R=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,F.removeEventListener("dispose",R)};F.addEventListener("dispose",R),C.__depthDisposeCallback=R}C.__boundDepthTexture=F}if(A.depthTexture&&!C.__autoAllocateDepthBuffer){if(U)throw new Error("target.depthTexture not supported in Cube render targets");(function(F,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,F),!R.depthTexture||!R.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");let I=i.get(R.depthTexture);I.__renderTarget=R,I.__webglTexture&&R.depthTexture.image.width===R.width&&R.depthTexture.image.height===R.height||(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),O(R.depthTexture,0);let w=I.__webglTexture,L=re(R);if(R.depthTexture.format===Zt)ce(R)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,w,0,L):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,w,0);else{if(R.depthTexture.format!==xs)throw new Error("Unknown depthTexture format");ce(R)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,w,0,L):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,w,0)}})(C.__webglFramebuffer,A)}else if(U){C.__webglDepthbuffer=[];for(let F=0;F<6;F++)if(t.bindFramebuffer(n.FRAMEBUFFER,C.__webglFramebuffer[F]),C.__webglDepthbuffer[F]===void 0)C.__webglDepthbuffer[F]=n.createRenderbuffer(),ee(C.__webglDepthbuffer[F],A,!1);else{let R=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,I=C.__webglDepthbuffer[F];n.bindRenderbuffer(n.RENDERBUFFER,I),n.framebufferRenderbuffer(n.FRAMEBUFFER,R,n.RENDERBUFFER,I)}}else if(t.bindFramebuffer(n.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=n.createRenderbuffer(),ee(C.__webglDepthbuffer,A,!1);else{let F=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,R=C.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,R),n.framebufferRenderbuffer(n.FRAMEBUFFER,F,n.RENDERBUFFER,R)}t.bindFramebuffer(n.FRAMEBUFFER,null)}let me=[],J=[];function re(A){return Math.min(s.maxSamples,A.samples)}function ce(A){let C=i.get(A);return A.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function de(A,C){let U=A.colorSpace,F=A.format,R=A.type;return A.isCompressedTexture===!0||A.isVideoTexture===!0||U!==Qt&&U!==Gs&&(Ve.getTransfer(U)===Ke?F===ut&&R===Mi||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",U)),C}function ae(A){return typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement?(h.width=A.naturalWidth||A.width,h.height=A.naturalHeight||A.height):typeof VideoFrame<"u"&&A instanceof VideoFrame?(h.width=A.displayWidth,h.height=A.displayHeight):(h.width=A.width,h.height=A.height),h}this.allocateTextureUnit=function(){let A=D;return A>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+s.maxTextures),D+=1,A},this.resetTextureUnits=function(){D=0},this.setTexture2D=O,this.setTexture2DArray=function(A,C){let U=i.get(A);A.version>0&&U.__version!==A.version?K(U,A,C):t.bindTexture(n.TEXTURE_2D_ARRAY,U.__webglTexture,n.TEXTURE0+C)},this.setTexture3D=function(A,C){let U=i.get(A);A.version>0&&U.__version!==A.version?K(U,A,C):t.bindTexture(n.TEXTURE_3D,U.__webglTexture,n.TEXTURE0+C)},this.setTextureCube=function(A,C){let U=i.get(A);A.version>0&&U.__version!==A.version?function(F,R,I){if(R.image.length!==6)return;let w=q(F,R),L=R.source;t.bindTexture(n.TEXTURE_CUBE_MAP,F.__webglTexture,n.TEXTURE0+I);let H=i.get(L);if(L.version!==H.__version||w===!0){t.activeTexture(n.TEXTURE0+I);let te=Ve.getPrimaries(Ve.workingColorSpace),N=R.colorSpace===Gs?null:Ve.getPrimaries(R.colorSpace),Q=R.colorSpace===Gs||te===N?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Q);let Z=R.isCompressedTexture||R.image[0].isCompressedTexture,se=R.image[0]&&R.image[0].isDataTexture,xe=[];for(let be=0;be<6;be++)xe[be]=Z||se?se?R.image[be].image:R.image[be]:v(R.image[be],!0,s.maxCubemapSize),xe[be]=de(R,xe[be]);let fe=xe[0],Se=r.convert(R.format,R.colorSpace),Ee=r.convert(R.type),He=y(R.internalFormat,Se,Ee,R.colorSpace),Ne=R.isVideoTexture!==!0,Me=H.__version===void 0||w===!0,je=L.dataReady,tt,lt=b(R,fe);if(z(n.TEXTURE_CUBE_MAP,R),Z){Ne&&Me&&t.texStorage2D(n.TEXTURE_CUBE_MAP,lt,He,fe.width,fe.height);for(let be=0;be<6;be++){tt=xe[be].mipmaps;for(let Ge=0;Ge<tt.length;Ge++){let et=tt[Ge];R.format!==ut?Se!==null?Ne?je&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge,0,0,et.width,et.height,Se,et.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge,He,et.width,et.height,0,et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ne?je&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge,0,0,et.width,et.height,Se,Ee,et.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge,He,et.width,et.height,0,Se,Ee,et.data)}}}else{if(tt=R.mipmaps,Ne&&Me){tt.length>0&&lt++;let be=ae(xe[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,lt,He,be.width,be.height)}for(let be=0;be<6;be++)if(se){Ne?je&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,xe[be].width,xe[be].height,Se,Ee,xe[be].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,He,xe[be].width,xe[be].height,0,Se,Ee,xe[be].data);for(let Ge=0;Ge<tt.length;Ge++){let et=tt[Ge].image[be].image;Ne?je&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge+1,0,0,et.width,et.height,Se,Ee,et.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge+1,He,et.width,et.height,0,Se,Ee,et.data)}}else{Ne?je&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,Se,Ee,xe[be]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,He,Se,Ee,xe[be]);for(let Ge=0;Ge<tt.length;Ge++){let et=tt[Ge];Ne?je&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge+1,0,0,Se,Ee,et.image[be]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ge+1,He,Se,Ee,et.image[be])}}}p(R)&&g(n.TEXTURE_CUBE_MAP),H.__version=L.version,R.onUpdate&&R.onUpdate(R)}F.__version=R.version}(U,A,C):t.bindTexture(n.TEXTURE_CUBE_MAP,U.__webglTexture,n.TEXTURE0+C)},this.rebindTextures=function(A,C,U){let F=i.get(A);C!==void 0&&$(F.__webglFramebuffer,A,A.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),U!==void 0&&le(A)},this.setupRenderTarget=function(A){let C=A.texture,U=i.get(A),F=i.get(C);A.addEventListener("dispose",E);let R=A.textures,I=A.isWebGLCubeRenderTarget===!0,w=R.length>1;if(w||(F.__webglTexture===void 0&&(F.__webglTexture=n.createTexture()),F.__version=C.version,a.memory.textures++),I){U.__webglFramebuffer=[];for(let L=0;L<6;L++)if(C.mipmaps&&C.mipmaps.length>0){U.__webglFramebuffer[L]=[];for(let H=0;H<C.mipmaps.length;H++)U.__webglFramebuffer[L][H]=n.createFramebuffer()}else U.__webglFramebuffer[L]=n.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){U.__webglFramebuffer=[];for(let L=0;L<C.mipmaps.length;L++)U.__webglFramebuffer[L]=n.createFramebuffer()}else U.__webglFramebuffer=n.createFramebuffer();if(w)for(let L=0,H=R.length;L<H;L++){let te=i.get(R[L]);te.__webglTexture===void 0&&(te.__webglTexture=n.createTexture(),a.memory.textures++)}if(A.samples>0&&ce(A)===!1){U.__webglMultisampledFramebuffer=n.createFramebuffer(),U.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,U.__webglMultisampledFramebuffer);for(let L=0;L<R.length;L++){let H=R[L];U.__webglColorRenderbuffer[L]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,U.__webglColorRenderbuffer[L]);let te=r.convert(H.format,H.colorSpace),N=r.convert(H.type),Q=y(H.internalFormat,te,N,H.colorSpace,A.isXRRenderTarget===!0),Z=re(A);n.renderbufferStorageMultisample(n.RENDERBUFFER,Z,Q,A.width,A.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+L,n.RENDERBUFFER,U.__webglColorRenderbuffer[L])}n.bindRenderbuffer(n.RENDERBUFFER,null),A.depthBuffer&&(U.__webglDepthRenderbuffer=n.createRenderbuffer(),ee(U.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(I){t.bindTexture(n.TEXTURE_CUBE_MAP,F.__webglTexture),z(n.TEXTURE_CUBE_MAP,C);for(let L=0;L<6;L++)if(C.mipmaps&&C.mipmaps.length>0)for(let H=0;H<C.mipmaps.length;H++)$(U.__webglFramebuffer[L][H],A,C,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+L,H);else $(U.__webglFramebuffer[L],A,C,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+L,0);p(C)&&g(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(w){for(let L=0,H=R.length;L<H;L++){let te=R[L],N=i.get(te);t.bindTexture(n.TEXTURE_2D,N.__webglTexture),z(n.TEXTURE_2D,te),$(U.__webglFramebuffer,A,te,n.COLOR_ATTACHMENT0+L,n.TEXTURE_2D,0),p(te)&&g(n.TEXTURE_2D)}t.unbindTexture()}else{let L=n.TEXTURE_2D;if((A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(L=A.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(L,F.__webglTexture),z(L,C),C.mipmaps&&C.mipmaps.length>0)for(let H=0;H<C.mipmaps.length;H++)$(U.__webglFramebuffer[H],A,C,n.COLOR_ATTACHMENT0,L,H);else $(U.__webglFramebuffer,A,C,n.COLOR_ATTACHMENT0,L,0);p(C)&&g(L),t.unbindTexture()}A.depthBuffer&&le(A)},this.updateRenderTargetMipmap=function(A){let C=A.textures;for(let U=0,F=C.length;U<F;U++){let R=C[U];if(p(R)){let I=x(A),w=i.get(R).__webglTexture;t.bindTexture(I,w),g(I),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function(A){if(A.samples>0){if(ce(A)===!1){let C=A.textures,U=A.width,F=A.height,R=n.COLOR_BUFFER_BIT,I=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,w=i.get(A),L=C.length>1;if(L)for(let H=0;H<C.length;H++)t.bindFramebuffer(n.FRAMEBUFFER,w.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+H,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,w.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+H,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,w.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,w.__webglFramebuffer);for(let H=0;H<C.length;H++){if(A.resolveDepthBuffer&&(A.depthBuffer&&(R|=n.DEPTH_BUFFER_BIT),A.stencilBuffer&&A.resolveStencilBuffer&&(R|=n.STENCIL_BUFFER_BIT)),L){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,w.__webglColorRenderbuffer[H]);let te=i.get(C[H]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,te,0)}n.blitFramebuffer(0,0,U,F,0,0,U,F,R,n.NEAREST),l===!0&&(me.length=0,J.length=0,me.push(n.COLOR_ATTACHMENT0+H),A.depthBuffer&&A.resolveDepthBuffer===!1&&(me.push(I),J.push(I),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,J)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,me))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),L)for(let H=0;H<C.length;H++){t.bindFramebuffer(n.FRAMEBUFFER,w.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+H,n.RENDERBUFFER,w.__webglColorRenderbuffer[H]);let te=i.get(C[H]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,w.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+H,n.TEXTURE_2D,te,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,w.__webglMultisampledFramebuffer)}else if(A.depthBuffer&&A.resolveDepthBuffer===!1&&l){let C=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[C])}}},this.setupDepthRenderbuffer=le,this.setupFrameBufferTexture=$,this.useMultisampledRTT=ce}function Mv(n,e){return{convert:function(t,i=Gs){let s,r=Ve.getTransfer(i);if(t===Mi)return n.UNSIGNED_BYTE;if(t===Oo)return n.UNSIGNED_SHORT_4_4_4_4;if(t===ko)return n.UNSIGNED_SHORT_5_5_5_1;if(t===Uh)return n.UNSIGNED_INT_5_9_9_9_REV;if(t===Lh)return n.BYTE;if(t===Ih)return n.SHORT;if(t===as)return n.UNSIGNED_SHORT;if(t===Bo)return n.INT;if(t===wi)return n.UNSIGNED_INT;if(t===Ut)return n.FLOAT;if(t===zt)return n.HALF_FLOAT;if(t===No)return n.ALPHA;if(t===Gn)return n.RGB;if(t===ut)return n.RGBA;if(t===Go)return n.LUMINANCE;if(t===Vd)return n.LUMINANCE_ALPHA;if(t===Zt)return n.DEPTH_COMPONENT;if(t===xs)return n.DEPTH_STENCIL;if(t===Cr)return n.RED;if(t===Vo)return n.RED_INTEGER;if(t===zo)return n.RG;if(t===Fh)return n.RG_INTEGER;if(t===Bh)return n.RGBA_INTEGER;if(t===Ho||t===Wo||t===jo||t===Xo)if(r===Ke){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s===null)return null;if(t===Ho)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===Wo)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===jo)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===Xo)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),s===null)return null;if(t===Ho)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Wo)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===jo)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Xo)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===Oh||t===kh||t===Nh||t===Gh){if(s=e.get("WEBGL_compressed_texture_pvrtc"),s===null)return null;if(t===Oh)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===kh)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Nh)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Gh)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Vh||t===zh||t===Hh){if(s=e.get("WEBGL_compressed_texture_etc"),s===null)return null;if(t===Vh||t===zh)return r===Ke?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(t===Hh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(t===Wh||t===jh||t===Xh||t===qh||t===Yh||t===Kh||t===Zh||t===Qh||t===Jh||t===$h||t===ec||t===tc||t===ic||t===sc){if(s=e.get("WEBGL_compressed_texture_astc"),s===null)return null;if(t===Wh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===jh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===Xh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===qh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===Yh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===Kh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===Zh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===Qh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===Jh)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===$h)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===ec)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===tc)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===ic)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===sc)return r===Ke?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(t===qo||t===rc||t===nc){if(s=e.get("EXT_texture_compression_bptc"),s===null)return null;if(t===qo)return r===Ke?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(t===rc)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(t===nc)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(t===zd||t===ac||t===oc||t===lc){if(s=e.get("EXT_texture_compression_rgtc"),s===null)return null;if(t===qo)return s.COMPRESSED_RED_RGTC1_EXT;if(t===ac)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(t===oc)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(t===lc)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return t===wr?n.UNSIGNED_INT_24_8:n[t]!==void 0?n[t]:null}}}var wv={type:"move"},Hn=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new bt,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new bt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new M,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new M),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new bt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new M,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new M),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let s=null,r=null,a=null,o=this._targetRay,l=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(let v of e.hand.values()){let p=t.getJointPose(v,i),g=this._getHandJoint(h,v);p!==null&&(g.matrix.fromArray(p.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=p.radius),g.visible=p!==null}let c=h.joints["index-finger-tip"],u=h.joints["thumb-tip"],d=c.position.distanceTo(u.position),m=.02,f=.005;h.inputState.pinching&&d>m+f?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&d<=m-f&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,i),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(wv)))}return o!==null&&(o.visible=s!==null),l!==null&&(l.visible=r!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){let i=new bt;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}},Ac=class{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){let s=new mt;e.properties.get(s).__webglTexture=t.texture,t.depthNear==i.depthNear&&t.depthFar==i.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){let t=e.cameras[0].viewport,i=new we({vertexShader:`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,fragmentShader:`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new nt(new yr(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}},Pc=class extends yi{constructor(e,t){super();let i=this,s=null,r=1,a=null,o="local-floor",l=1,h=null,c=null,u=null,d=null,m=null,f=null,v=new Ac,p=t.getContextAttributes(),g=null,x=null,y=[],_=[],b=new G,S=null,E=new yt;E.viewport=new Ie;let P=new yt;P.viewport=new Ie;let D=[E,P],O=new So,B=null,V=null;function j(J){let re=_.indexOf(J.inputSource);if(re===-1)return;let ce=y[re];ce!==void 0&&(ce.update(J.inputSource,J.frame,h||a),ce.dispatchEvent({type:J.type,data:J.inputSource}))}function z(){s.removeEventListener("select",j),s.removeEventListener("selectstart",j),s.removeEventListener("selectend",j),s.removeEventListener("squeeze",j),s.removeEventListener("squeezestart",j),s.removeEventListener("squeezeend",j),s.removeEventListener("end",z),s.removeEventListener("inputsourceschange",q);for(let J=0;J<y.length;J++){let re=_[J];re!==null&&(_[J]=null,y[J].disconnect(re))}B=null,V=null,v.reset(),e.setRenderTarget(g),m=null,d=null,u=null,s=null,x=null,me.stop(),i.isPresenting=!1,e.setPixelRatio(S),e.setSize(b.width,b.height,!1),i.dispatchEvent({type:"sessionend"})}function q(J){for(let re=0;re<J.removed.length;re++){let ce=J.removed[re],de=_.indexOf(ce);de>=0&&(_[de]=null,y[de].disconnect(ce))}for(let re=0;re<J.added.length;re++){let ce=J.added[re],de=_.indexOf(ce);if(de===-1){for(let A=0;A<y.length;A++){if(A>=_.length){_.push(ce),de=A;break}if(_[A]===null){_[A]=ce,de=A;break}}if(de===-1)break}let ae=y[de];ae&&ae.connect(ce)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let re=y[J];return re===void 0&&(re=new Hn,y[J]=re),re.getTargetRaySpace()},this.getControllerGrip=function(J){let re=y[J];return re===void 0&&(re=new Hn,y[J]=re),re.getGripSpace()},this.getHand=function(J){let re=y[J];return re===void 0&&(re=new Hn,y[J]=re),re.getHandSpace()},this.setFramebufferScaleFactor=function(J){r=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){o=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(J){h=J},this.getBaseLayer=function(){return d!==null?d:m},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return s},this.setSession=async function(J){if(s=J,s!==null){if(g=e.getRenderTarget(),s.addEventListener("select",j),s.addEventListener("selectstart",j),s.addEventListener("selectend",j),s.addEventListener("squeeze",j),s.addEventListener("squeezestart",j),s.addEventListener("squeezeend",j),s.addEventListener("end",z),s.addEventListener("inputsourceschange",q),p.xrCompatible!==!0&&await t.makeXRCompatible(),S=e.getPixelRatio(),e.getSize(b),s.renderState.layers===void 0){let re={antialias:p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(s,t,re),s.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),x=new ct(m.framebufferWidth,m.framebufferHeight,{format:ut,type:Mi,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil})}else{let re=null,ce=null,de=null;p.depth&&(de=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,re=p.stencil?xs:Zt,ce=p.stencil?wr:wi);let ae={colorFormat:t.RGBA8,depthFormat:de,scaleFactor:r};u=new XRWebGLBinding(s,t),d=u.createProjectionLayer(ae),s.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new ct(d.textureWidth,d.textureHeight,{format:ut,type:Mi,depthTexture:new Ni(d.textureWidth,d.textureHeight,ce,void 0,void 0,void 0,void 0,void 0,void 0,re),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(l),h=null,a=await s.requestReferenceSpace(o),me.setContext(s),me.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};let K=new M,$=new M;function ee(J,re){re===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(re.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(s===null)return;let re=J.near,ce=J.far;v.texture!==null&&(v.depthNear>0&&(re=v.depthNear),v.depthFar>0&&(ce=v.depthFar)),O.near=P.near=E.near=re,O.far=P.far=E.far=ce,B===O.near&&V===O.far||(s.updateRenderState({depthNear:O.near,depthFar:O.far}),B=O.near,V=O.far),E.layers.mask=2|J.layers.mask,P.layers.mask=4|J.layers.mask,O.layers.mask=E.layers.mask|P.layers.mask;let de=J.parent,ae=O.cameras;ee(O,de);for(let A=0;A<ae.length;A++)ee(ae[A],de);ae.length===2?function(A,C,U){K.setFromMatrixPosition(C.matrixWorld),$.setFromMatrixPosition(U.matrixWorld);let F=K.distanceTo($),R=C.projectionMatrix.elements,I=U.projectionMatrix.elements,w=R[14]/(R[10]-1),L=R[14]/(R[10]+1),H=(R[9]+1)/R[5],te=(R[9]-1)/R[5],N=(R[8]-1)/R[0],Q=(I[8]+1)/I[0],Z=w*N,se=w*Q,xe=F/(-N+Q),fe=xe*-N;if(C.matrixWorld.decompose(A.position,A.quaternion,A.scale),A.translateX(fe),A.translateZ(xe),A.matrixWorld.compose(A.position,A.quaternion,A.scale),A.matrixWorldInverse.copy(A.matrixWorld).invert(),R[10]===-1)A.projectionMatrix.copy(C.projectionMatrix),A.projectionMatrixInverse.copy(C.projectionMatrixInverse);else{let Se=w+xe,Ee=L+xe,He=Z-fe,Ne=se+(F-fe),Me=H*L/Ee*Se,je=te*L/Ee*Se;A.projectionMatrix.makePerspective(He,Ne,Me,je,Se,Ee),A.projectionMatrixInverse.copy(A.projectionMatrix).invert()}}(O,E,P):O.projectionMatrix.copy(E.projectionMatrix),function(A,C,U){U===null?A.matrix.copy(C.matrixWorld):(A.matrix.copy(U.matrixWorld),A.matrix.invert(),A.matrix.multiply(C.matrixWorld)),A.matrix.decompose(A.position,A.quaternion,A.scale),A.updateMatrixWorld(!0),A.projectionMatrix.copy(C.projectionMatrix),A.projectionMatrixInverse.copy(C.projectionMatrixInverse),A.isPerspectiveCamera&&(A.fov=2*_s*Math.atan(1/A.projectionMatrix.elements[5]),A.zoom=1)}(J,O,de)},this.getCamera=function(){return O},this.getFoveation=function(){if(d!==null||m!==null)return l},this.setFoveation=function(J){l=J,d!==null&&(d.fixedFoveation=J),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=J)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(O)};let le=null,me=new Ip;me.setAnimationLoop(function(J,re){if(c=re.getViewerPose(h||a),f=re,c!==null){let ce=c.views;m!==null&&(e.setRenderTargetFramebuffer(x,m.framebuffer),e.setRenderTarget(x));let de=!1;ce.length!==O.cameras.length&&(O.cameras.length=0,de=!0);for(let A=0;A<ce.length;A++){let C=ce[A],U=null;if(m!==null)U=m.getViewport(C);else{let R=u.getViewSubImage(d,C);U=R.viewport,A===0&&(e.setRenderTargetTextures(x,R.colorTexture,d.ignoreDepthValues?void 0:R.depthStencilTexture),e.setRenderTarget(x))}let F=D[A];F===void 0&&(F=new yt,F.layers.enable(A),F.viewport=new Ie,D[A]=F),F.matrix.fromArray(C.transform.matrix),F.matrix.decompose(F.position,F.quaternion,F.scale),F.projectionMatrix.fromArray(C.projectionMatrix),F.projectionMatrixInverse.copy(F.projectionMatrix).invert(),F.viewport.set(U.x,U.y,U.width,U.height),A===0&&(O.matrix.copy(F.matrix),O.matrix.decompose(O.position,O.quaternion,O.scale)),de===!0&&O.cameras.push(F)}let ae=s.enabledFeatures;if(ae&&ae.includes("depth-sensing")){let A=u.getDepthInformation(ce[0]);A&&A.isValid&&A.texture&&v.init(e,A,s.renderState)}}for(let ce=0;ce<y.length;ce++){let de=_[ce],ae=y[ce];de!==null&&ae!==void 0&&ae.update(de,re,h||a)}le&&le(J,re),re.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:re}),f=null}),this.setAnimationLoop=function(J){le=J},this.dispose=function(){}}},Ws=new Ye,Cv=new pe;function Tv(n,e){function t(s,r){s.matrixAutoUpdate===!0&&s.updateMatrix(),r.value.copy(s.matrix)}function i(s,r){s.opacity.value=r.opacity,r.color&&s.diffuse.value.copy(r.color),r.emissive&&s.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(s.map.value=r.map,t(r.map,s.mapTransform)),r.alphaMap&&(s.alphaMap.value=r.alphaMap,t(r.alphaMap,s.alphaMapTransform)),r.bumpMap&&(s.bumpMap.value=r.bumpMap,t(r.bumpMap,s.bumpMapTransform),s.bumpScale.value=r.bumpScale,r.side===At&&(s.bumpScale.value*=-1)),r.normalMap&&(s.normalMap.value=r.normalMap,t(r.normalMap,s.normalMapTransform),s.normalScale.value.copy(r.normalScale),r.side===At&&s.normalScale.value.negate()),r.displacementMap&&(s.displacementMap.value=r.displacementMap,t(r.displacementMap,s.displacementMapTransform),s.displacementScale.value=r.displacementScale,s.displacementBias.value=r.displacementBias),r.emissiveMap&&(s.emissiveMap.value=r.emissiveMap,t(r.emissiveMap,s.emissiveMapTransform)),r.specularMap&&(s.specularMap.value=r.specularMap,t(r.specularMap,s.specularMapTransform)),r.alphaTest>0&&(s.alphaTest.value=r.alphaTest);let a=e.get(r),o=a.envMap,l=a.envMapRotation;o&&(s.envMap.value=o,Ws.copy(l),Ws.x*=-1,Ws.y*=-1,Ws.z*=-1,o.isCubeTexture&&o.isRenderTargetTexture===!1&&(Ws.y*=-1,Ws.z*=-1),s.envMapRotation.value.setFromMatrix4(Cv.makeRotationFromEuler(Ws)),s.flipEnvMap.value=o.isCubeTexture&&o.isRenderTargetTexture===!1?-1:1,s.reflectivity.value=r.reflectivity,s.ior.value=r.ior,s.refractionRatio.value=r.refractionRatio),r.lightMap&&(s.lightMap.value=r.lightMap,s.lightMapIntensity.value=r.lightMapIntensity,t(r.lightMap,s.lightMapTransform)),r.aoMap&&(s.aoMap.value=r.aoMap,s.aoMapIntensity.value=r.aoMapIntensity,t(r.aoMap,s.aoMapTransform))}return{refreshFogUniforms:function(s,r){r.color.getRGB(s.fogColor.value,dc(n)),r.isFog?(s.fogNear.value=r.near,s.fogFar.value=r.far):r.isFogExp2&&(s.fogDensity.value=r.density)},refreshMaterialUniforms:function(s,r,a,o,l){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(s,r):r.isMeshToonMaterial?(i(s,r),function(h,c){c.gradientMap&&(h.gradientMap.value=c.gradientMap)}(s,r)):r.isMeshPhongMaterial?(i(s,r),function(h,c){h.specular.value.copy(c.specular),h.shininess.value=Math.max(c.shininess,1e-4)}(s,r)):r.isMeshStandardMaterial?(i(s,r),function(h,c){h.metalness.value=c.metalness,c.metalnessMap&&(h.metalnessMap.value=c.metalnessMap,t(c.metalnessMap,h.metalnessMapTransform)),h.roughness.value=c.roughness,c.roughnessMap&&(h.roughnessMap.value=c.roughnessMap,t(c.roughnessMap,h.roughnessMapTransform)),c.envMap&&(h.envMapIntensity.value=c.envMapIntensity)}(s,r),r.isMeshPhysicalMaterial&&function(h,c,u){h.ior.value=c.ior,c.sheen>0&&(h.sheenColor.value.copy(c.sheenColor).multiplyScalar(c.sheen),h.sheenRoughness.value=c.sheenRoughness,c.sheenColorMap&&(h.sheenColorMap.value=c.sheenColorMap,t(c.sheenColorMap,h.sheenColorMapTransform)),c.sheenRoughnessMap&&(h.sheenRoughnessMap.value=c.sheenRoughnessMap,t(c.sheenRoughnessMap,h.sheenRoughnessMapTransform))),c.clearcoat>0&&(h.clearcoat.value=c.clearcoat,h.clearcoatRoughness.value=c.clearcoatRoughness,c.clearcoatMap&&(h.clearcoatMap.value=c.clearcoatMap,t(c.clearcoatMap,h.clearcoatMapTransform)),c.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap.value=c.clearcoatRoughnessMap,t(c.clearcoatRoughnessMap,h.clearcoatRoughnessMapTransform)),c.clearcoatNormalMap&&(h.clearcoatNormalMap.value=c.clearcoatNormalMap,t(c.clearcoatNormalMap,h.clearcoatNormalMapTransform),h.clearcoatNormalScale.value.copy(c.clearcoatNormalScale),c.side===At&&h.clearcoatNormalScale.value.negate())),c.dispersion>0&&(h.dispersion.value=c.dispersion),c.iridescence>0&&(h.iridescence.value=c.iridescence,h.iridescenceIOR.value=c.iridescenceIOR,h.iridescenceThicknessMinimum.value=c.iridescenceThicknessRange[0],h.iridescenceThicknessMaximum.value=c.iridescenceThicknessRange[1],c.iridescenceMap&&(h.iridescenceMap.value=c.iridescenceMap,t(c.iridescenceMap,h.iridescenceMapTransform)),c.iridescenceThicknessMap&&(h.iridescenceThicknessMap.value=c.iridescenceThicknessMap,t(c.iridescenceThicknessMap,h.iridescenceThicknessMapTransform))),c.transmission>0&&(h.transmission.value=c.transmission,h.transmissionSamplerMap.value=u.texture,h.transmissionSamplerSize.value.set(u.width,u.height),c.transmissionMap&&(h.transmissionMap.value=c.transmissionMap,t(c.transmissionMap,h.transmissionMapTransform)),h.thickness.value=c.thickness,c.thicknessMap&&(h.thicknessMap.value=c.thicknessMap,t(c.thicknessMap,h.thicknessMapTransform)),h.attenuationDistance.value=c.attenuationDistance,h.attenuationColor.value.copy(c.attenuationColor)),c.anisotropy>0&&(h.anisotropyVector.value.set(c.anisotropy*Math.cos(c.anisotropyRotation),c.anisotropy*Math.sin(c.anisotropyRotation)),c.anisotropyMap&&(h.anisotropyMap.value=c.anisotropyMap,t(c.anisotropyMap,h.anisotropyMapTransform))),h.specularIntensity.value=c.specularIntensity,h.specularColor.value.copy(c.specularColor),c.specularColorMap&&(h.specularColorMap.value=c.specularColorMap,t(c.specularColorMap,h.specularColorMapTransform)),c.specularIntensityMap&&(h.specularIntensityMap.value=c.specularIntensityMap,t(c.specularIntensityMap,h.specularIntensityMapTransform))}(s,r,l)):r.isMeshMatcapMaterial?(i(s,r),function(h,c){c.matcap&&(h.matcap.value=c.matcap)}(s,r)):r.isMeshDepthMaterial?i(s,r):r.isMeshDistanceMaterial?(i(s,r),function(h,c){let u=e.get(c).light;h.referencePosition.value.setFromMatrixPosition(u.matrixWorld),h.nearDistance.value=u.shadow.camera.near,h.farDistance.value=u.shadow.camera.far}(s,r)):r.isMeshNormalMaterial?i(s,r):r.isLineBasicMaterial?(function(h,c){h.diffuse.value.copy(c.color),h.opacity.value=c.opacity,c.map&&(h.map.value=c.map,t(c.map,h.mapTransform))}(s,r),r.isLineDashedMaterial&&function(h,c){h.dashSize.value=c.dashSize,h.totalSize.value=c.dashSize+c.gapSize,h.scale.value=c.scale}(s,r)):r.isPointsMaterial?function(h,c,u,d){h.diffuse.value.copy(c.color),h.opacity.value=c.opacity,h.size.value=c.size*u,h.scale.value=.5*d,c.map&&(h.map.value=c.map,t(c.map,h.uvTransform)),c.alphaMap&&(h.alphaMap.value=c.alphaMap,t(c.alphaMap,h.alphaMapTransform)),c.alphaTest>0&&(h.alphaTest.value=c.alphaTest)}(s,r,a,o):r.isSpriteMaterial?function(h,c){h.diffuse.value.copy(c.color),h.opacity.value=c.opacity,h.rotation.value=c.rotation,c.map&&(h.map.value=c.map,t(c.map,h.mapTransform)),c.alphaMap&&(h.alphaMap.value=c.alphaMap,t(c.alphaMap,h.alphaMapTransform)),c.alphaTest>0&&(h.alphaTest.value=c.alphaTest)}(s,r):r.isShadowMaterial?(s.color.value.copy(r.color),s.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Ev(n,e,t,i){let s={},r={},a=[],o=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(u,d,m,f){let v=u.value,p=d+"_"+m;if(f[p]===void 0)return f[p]=typeof v=="number"||typeof v=="boolean"?v:v.clone(),!0;{let g=f[p];if(typeof v=="number"||typeof v=="boolean"){if(g!==v)return f[p]=v,!0}else if(g.equals(v)===!1)return g.copy(v),!0}return!1}function h(u){let d={boundary:0,storage:0};return typeof u=="number"||typeof u=="boolean"?(d.boundary=4,d.storage=4):u.isVector2?(d.boundary=8,d.storage=8):u.isVector3||u.isColor?(d.boundary=16,d.storage=12):u.isVector4?(d.boundary=16,d.storage=16):u.isMatrix3?(d.boundary=48,d.storage=48):u.isMatrix4?(d.boundary=64,d.storage=64):u.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",u),d}function c(u){let d=u.target;d.removeEventListener("dispose",c);let m=a.indexOf(d.__bindingPointIndex);a.splice(m,1),n.deleteBuffer(s[d.id]),delete s[d.id],delete r[d.id]}return{bind:function(u,d){let m=d.program;i.uniformBlockBinding(u,m)},update:function(u,d){let m=s[u.id];m===void 0&&(function(p){let g=p.uniforms,x=0,y=16;for(let b=0,S=g.length;b<S;b++){let E=Array.isArray(g[b])?g[b]:[g[b]];for(let P=0,D=E.length;P<D;P++){let O=E[P],B=Array.isArray(O.value)?O.value:[O.value];for(let V=0,j=B.length;V<j;V++){let z=h(B[V]),q=x%y,K=q%z.boundary,$=q+K;x+=K,$!==0&&y-$<z.storage&&(x+=y-$),O.__data=new Float32Array(z.storage/Float32Array.BYTES_PER_ELEMENT),O.__offset=x,x+=z.storage}}}let _=x%y;_>0&&(x+=y-_),p.__size=x,p.__cache={}}(u),m=function(p){let g=function(){for(let b=0;b<o;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();p.__bindingPointIndex=g;let x=n.createBuffer(),y=p.__size,_=p.usage;return n.bindBuffer(n.UNIFORM_BUFFER,x),n.bufferData(n.UNIFORM_BUFFER,y,_),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,g,x),x}(u),s[u.id]=m,u.addEventListener("dispose",c));let f=d.program;i.updateUBOMapping(u,f);let v=e.render.frame;r[u.id]!==v&&(function(p){let g=s[p.id],x=p.uniforms,y=p.__cache;n.bindBuffer(n.UNIFORM_BUFFER,g);for(let _=0,b=x.length;_<b;_++){let S=Array.isArray(x[_])?x[_]:[x[_]];for(let E=0,P=S.length;E<P;E++){let D=S[E];if(l(D,_,E,y)===!0){let O=D.__offset,B=Array.isArray(D.value)?D.value:[D.value],V=0;for(let j=0;j<B.length;j++){let z=B[j],q=h(z);typeof z=="number"||typeof z=="boolean"?(D.__data[0]=z,n.bufferSubData(n.UNIFORM_BUFFER,O+V,D.__data)):z.isMatrix3?(D.__data[0]=z.elements[0],D.__data[1]=z.elements[1],D.__data[2]=z.elements[2],D.__data[3]=0,D.__data[4]=z.elements[3],D.__data[5]=z.elements[4],D.__data[6]=z.elements[5],D.__data[7]=0,D.__data[8]=z.elements[6],D.__data[9]=z.elements[7],D.__data[10]=z.elements[8],D.__data[11]=0):(z.toArray(D.__data,V),V+=q.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,O,D.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}(u),r[u.id]=v)},dispose:function(){for(let u in s)n.deleteBuffer(s[u]);a=[],s={},r={}}}}var el=class{constructor(e={}){let{canvas:t=tp(),context:i=null,depth:s=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:h=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e,m;if(this.isWebGLRenderer=!0,i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=i.getContextAttributes().alpha}else m=a;let f=new Uint32Array(4),v=new Int32Array(4),p=null,g=null,x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Pt,this.toneMapping=Hi,this.toneMappingExposure=1;let _=this,b=!1,S=0,E=0,P=null,D=-1,O=null,B=new Ie,V=new Ie,j=null,z=new he(0),q=0,K=t.width,$=t.height,ee=1,le=null,me=null,J=new Ie(0,0,K,$),re=new Ie(0,0,K,$),ce=!1,de=new Es,ae=!1,A=!1,C=new pe,U=new pe,F=new M,R=new Ie,I={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},w=!1;function L(){return P===null?ee:1}let H,te,N,Q,Z,se,xe,fe,Se,Ee,He,Ne,Me,je,tt,lt,be,Ge,et,Ys,ea,ii,fi,os,k=i;function Or(T,W){return t.getContext(T,W)}try{let T={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:h,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Fa}`),t.addEventListener("webglcontextlost",ru,!1),t.addEventListener("webglcontextrestored",nu,!1),t.addEventListener("webglcontextcreationerror",au,!1),k===null){let W="webgl2";if(k=Or(W,T),k===null)throw Or(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}function su(){H=new og(k),H.init(),ii=new Mv(k,H),te=new sg(k,H,e,ii),N=new bv(k,H),te.reverseDepthBuffer&&d&&N.buffers.depth.setReversed(!0),Q=new cg(k),Z=new uv,se=new Sv(k,H,N,Z,te,ii,Q),xe=new ng(_),fe=new ag(_),Se=new Jf(k),fi=new tg(k,Se),Ee=new lg(k,Se,Q,fi),He=new dg(k,Ee,Se,Q),et=new ug(k,te,se),lt=new rg(Z),Ne=new cv(_,xe,fe,H,te,fi,lt),Me=new Tv(_,Z),je=new pv,tt=new xv(H),Ge=new eg(_,xe,fe,N,He,m,l),be=new yv(_,He,te),os=new Ev(k,Q,te,N),Ys=new ig(k,H,Q),ea=new hg(k,H,Q),Q.programs=Ne.programs,_.capabilities=te,_.extensions=H,_.properties=Z,_.renderLists=je,_.shadowMap=be,_.state=N,_.info=Q}su();let Ct=new Pc(_,k);function ru(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function nu(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;let T=Q.autoReset,W=be.enabled,Y=be.autoUpdate,ie=be.needsUpdate,X=be.type;su(),Q.autoReset=T,be.enabled=W,be.autoUpdate=Y,be.needsUpdate=ie,be.type=X}function au(T){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",T.statusMessage)}function ou(T){let W=T.target;W.removeEventListener("dispose",ou),function(Y){(function(ie){let X=Z.get(ie).programs;X!==void 0&&(X.forEach(function(ne){Ne.releaseProgram(ne)}),ie.isShaderMaterial&&Ne.releaseShaderCache(ie))})(Y),Z.remove(Y)}(W)}function lu(T,W,Y){T.transparent===!0&&T.side===Je&&T.forceSinglePass===!1?(T.side=At,T.needsUpdate=!0,ia(T,W,Y),T.side=ft,T.needsUpdate=!0,ia(T,W,Y),T.side=Je):ia(T,W,Y)}this.xr=Ct,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){let T=H.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){let T=H.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return ee},this.setPixelRatio=function(T){T!==void 0&&(ee=T,this.setSize(K,$,!1))},this.getSize=function(T){return T.set(K,$)},this.setSize=function(T,W,Y=!0){Ct.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(K=T,$=W,t.width=Math.floor(T*ee),t.height=Math.floor(W*ee),Y===!0&&(t.style.width=T+"px",t.style.height=W+"px"),this.setViewport(0,0,T,W))},this.getDrawingBufferSize=function(T){return T.set(K*ee,$*ee).floor()},this.setDrawingBufferSize=function(T,W,Y){K=T,$=W,ee=Y,t.width=Math.floor(T*Y),t.height=Math.floor(W*Y),this.setViewport(0,0,T,W)},this.getCurrentViewport=function(T){return T.copy(B)},this.getViewport=function(T){return T.copy(J)},this.setViewport=function(T,W,Y,ie){T.isVector4?J.set(T.x,T.y,T.z,T.w):J.set(T,W,Y,ie),N.viewport(B.copy(J).multiplyScalar(ee).round())},this.getScissor=function(T){return T.copy(re)},this.setScissor=function(T,W,Y,ie){T.isVector4?re.set(T.x,T.y,T.z,T.w):re.set(T,W,Y,ie),N.scissor(V.copy(re).multiplyScalar(ee).round())},this.getScissorTest=function(){return ce},this.setScissorTest=function(T){N.setScissorTest(ce=T)},this.setOpaqueSort=function(T){le=T},this.setTransparentSort=function(T){me=T},this.getClearColor=function(T){return T.copy(Ge.getClearColor())},this.setClearColor=function(){Ge.setClearColor.apply(Ge,arguments)},this.getClearAlpha=function(){return Ge.getClearAlpha()},this.setClearAlpha=function(){Ge.setClearAlpha.apply(Ge,arguments)},this.clear=function(T=!0,W=!0,Y=!0){let ie=0;if(T){let X=!1;if(P!==null){let ne=P.texture.format;X=ne===Bh||ne===Fh||ne===Vo}if(X){let ne=P.texture.type,ve=ne===Mi||ne===wi||ne===as||ne===wr||ne===Oo||ne===ko,ye=Ge.getClearColor(),Ce=Ge.getClearAlpha(),De=ye.r,Pe=ye.g,Le=ye.b;ve?(f[0]=De,f[1]=Pe,f[2]=Le,f[3]=Ce,k.clearBufferuiv(k.COLOR,0,f)):(v[0]=De,v[1]=Pe,v[2]=Le,v[3]=Ce,k.clearBufferiv(k.COLOR,0,v))}else ie|=k.COLOR_BUFFER_BIT}W&&(ie|=k.DEPTH_BUFFER_BIT),Y&&(ie|=k.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),k.clear(ie)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ru,!1),t.removeEventListener("webglcontextrestored",nu,!1),t.removeEventListener("webglcontextcreationerror",au,!1),Ge.dispose(),je.dispose(),tt.dispose(),Z.dispose(),xe.dispose(),fe.dispose(),He.dispose(),fi.dispose(),os.dispose(),Ne.dispose(),Ct.dispose(),Ct.removeEventListener("sessionstart",hu),Ct.removeEventListener("sessionend",cu),ls.stop()},this.renderBufferDirect=function(T,W,Y,ie,X,ne){W===null&&(W=I);let ve=X.isMesh&&X.matrixWorld.determinant()<0,ye=function($e,dt,Ot,Fe,Re){dt.isScene!==!0&&(dt=I),se.resetTextureUnits();let si=dt.fog,Ul=Fe.isMeshStandardMaterial?dt.environment:null,sa=P===null?_.outputColorSpace:P.isXRRenderTarget===!0?P.texture.colorSpace:Qt,Qi=(Fe.isMeshStandardMaterial?fe:xe).get(Fe.envMap||Ul),gi=Fe.vertexColors===!0&&!!Ot.attributes.color&&Ot.attributes.color.itemSize===4,Ks=!!Ot.attributes.tangent&&(!!Fe.normalMap||Fe.anisotropy>0),Ti=!!Ot.morphAttributes.position,Fl=!!Ot.morphAttributes.normal,Zs=!!Ot.morphAttributes.color,gu=Hi;Fe.toneMapped&&(P!==null&&P.isXRRenderTarget!==!0||(gu=_.toneMapping));let vu=Ot.morphAttributes.position||Ot.morphAttributes.normal||Ot.morphAttributes.color,rf=vu!==void 0?vu.length:0,ze=Z.get(Fe),nf=g.state.lights;if(ae===!0&&(A===!0||$e!==O)){let qt=$e===O&&Fe.id===D;lt.setState(Fe,$e,qt)}let ri=!1;Fe.version===ze.__version?ze.needsLights&&ze.lightsStateVersion!==nf.state.version||ze.outputColorSpace!==sa||Re.isBatchedMesh&&ze.batching===!1?ri=!0:Re.isBatchedMesh||ze.batching!==!0?Re.isBatchedMesh&&ze.batchingColor===!0&&Re.colorTexture===null||Re.isBatchedMesh&&ze.batchingColor===!1&&Re.colorTexture!==null||Re.isInstancedMesh&&ze.instancing===!1?ri=!0:Re.isInstancedMesh||ze.instancing!==!0?Re.isSkinnedMesh&&ze.skinning===!1?ri=!0:Re.isSkinnedMesh||ze.skinning!==!0?Re.isInstancedMesh&&ze.instancingColor===!0&&Re.instanceColor===null||Re.isInstancedMesh&&ze.instancingColor===!1&&Re.instanceColor!==null||Re.isInstancedMesh&&ze.instancingMorph===!0&&Re.morphTexture===null||Re.isInstancedMesh&&ze.instancingMorph===!1&&Re.morphTexture!==null||ze.envMap!==Qi||Fe.fog===!0&&ze.fog!==si?ri=!0:ze.numClippingPlanes===void 0||ze.numClippingPlanes===lt.numPlanes&&ze.numIntersection===lt.numIntersection?(ze.vertexAlphas!==gi||ze.vertexTangents!==Ks||ze.morphTargets!==Ti||ze.morphNormals!==Fl||ze.morphColors!==Zs||ze.toneMapping!==gu||ze.morphTargetsCount!==rf)&&(ri=!0):ri=!0:ri=!0:ri=!0:ri=!0:(ri=!0,ze.__version=Fe.version);let hs=ze.currentProgram;ri===!0&&(hs=ia(Fe,dt,Re));let xu=!1,kr=!1,Bl=!1,pt=hs.getUniforms(),Ji=ze.uniforms;if(N.useProgram(hs.program)&&(xu=!0,kr=!0,Bl=!0),Fe.id!==D&&(D=Fe.id,kr=!0),xu||O!==$e){N.buffers.depth.getReversed()?(C.copy($e.projectionMatrix),sp(C),rp(C),pt.setValue(k,"projectionMatrix",C)):pt.setValue(k,"projectionMatrix",$e.projectionMatrix),pt.setValue(k,"viewMatrix",$e.matrixWorldInverse);let qt=pt.map.cameraPosition;qt!==void 0&&qt.setValue(k,F.setFromMatrixPosition($e.matrixWorld)),te.logarithmicDepthBuffer&&pt.setValue(k,"logDepthBufFC",2/(Math.log($e.far+1)/Math.LN2)),(Fe.isMeshPhongMaterial||Fe.isMeshToonMaterial||Fe.isMeshLambertMaterial||Fe.isMeshBasicMaterial||Fe.isMeshStandardMaterial||Fe.isShaderMaterial)&&pt.setValue(k,"isOrthographic",$e.isOrthographicCamera===!0),O!==$e&&(O=$e,kr=!0,Bl=!0)}if(Re.isSkinnedMesh){pt.setOptional(k,Re,"bindMatrix"),pt.setOptional(k,Re,"bindMatrixInverse");let qt=Re.skeleton;qt&&(qt.boneTexture===null&&qt.computeBoneTexture(),pt.setValue(k,"boneTexture",qt.boneTexture,se))}Re.isBatchedMesh&&(pt.setOptional(k,Re,"batchingTexture"),pt.setValue(k,"batchingTexture",Re._matricesTexture,se),pt.setOptional(k,Re,"batchingIdTexture"),pt.setValue(k,"batchingIdTexture",Re._indirectTexture,se),pt.setOptional(k,Re,"batchingColorTexture"),Re._colorsTexture!==null&&pt.setValue(k,"batchingColorTexture",Re._colorsTexture,se));let Ol=Ot.morphAttributes;Ol.position===void 0&&Ol.normal===void 0&&Ol.color===void 0||et.update(Re,Ot,hs),(kr||ze.receiveShadow!==Re.receiveShadow)&&(ze.receiveShadow=Re.receiveShadow,pt.setValue(k,"receiveShadow",Re.receiveShadow)),Fe.isMeshGouraudMaterial&&Fe.envMap!==null&&(Ji.envMap.value=Qi,Ji.flipEnvMap.value=Qi.isCubeTexture&&Qi.isRenderTargetTexture===!1?-1:1),Fe.isMeshStandardMaterial&&Fe.envMap===null&&dt.environment!==null&&(Ji.envMapIntensity.value=dt.environmentIntensity),kr&&(pt.setValue(k,"toneMappingExposure",_.toneMappingExposure),ze.needsLights&&(ni=Bl,(vi=Ji).ambientLightColor.needsUpdate=ni,vi.lightProbe.needsUpdate=ni,vi.directionalLights.needsUpdate=ni,vi.directionalLightShadows.needsUpdate=ni,vi.pointLights.needsUpdate=ni,vi.pointLightShadows.needsUpdate=ni,vi.spotLights.needsUpdate=ni,vi.spotLightShadows.needsUpdate=ni,vi.rectAreaLights.needsUpdate=ni,vi.hemisphereLights.needsUpdate=ni),si&&Fe.fog===!0&&Me.refreshFogUniforms(Ji,si),Me.refreshMaterialUniforms(Ji,Fe,ee,$,g.state.transmissionRenderTarget[$e.id]),Er.upload(k,mu(ze),Ji,se));var vi,ni;if(Fe.isShaderMaterial&&Fe.uniformsNeedUpdate===!0&&(Er.upload(k,mu(ze),Ji,se),Fe.uniformsNeedUpdate=!1),Fe.isSpriteMaterial&&pt.setValue(k,"center",Re.center),pt.setValue(k,"modelViewMatrix",Re.modelViewMatrix),pt.setValue(k,"normalMatrix",Re.normalMatrix),pt.setValue(k,"modelMatrix",Re.matrixWorld),Fe.isShaderMaterial||Fe.isRawShaderMaterial){let qt=Fe.uniformsGroups;for(let kl=0,af=qt.length;kl<af;kl++){let yu=qt[kl];os.update(yu,hs),os.bind(yu,hs)}}return hs}(T,W,Y,ie,X);N.setMaterial(ie,ve);let Ce=Y.index,De=1;if(ie.wireframe===!0){if(Ce=Ee.getWireframeAttribute(Y),Ce===void 0)return;De=2}let Pe=Y.drawRange,Le=Y.attributes.position,ke=Pe.start*De,it=(Pe.start+Pe.count)*De;ne!==null&&(ke=Math.max(ke,ne.start*De),it=Math.min(it,(ne.start+ne.count)*De)),Ce!==null?(ke=Math.max(ke,0),it=Math.min(it,Ce.count)):Le!=null&&(ke=Math.max(ke,0),it=Math.min(it,Le.count));let Dt=it-ke;if(Dt<0||Dt===1/0)return;let st;fi.setup(X,ie,ye,Y,Ce);let ot=Ys;if(Ce!==null&&(st=Se.get(Ce),ot=ea,ot.setIndex(st)),X.isMesh)ie.wireframe===!0?(N.setLineWidth(ie.wireframeLinewidth*L()),ot.setMode(k.LINES)):ot.setMode(k.TRIANGLES);else if(X.isLine){let $e=ie.linewidth;$e===void 0&&($e=1),N.setLineWidth($e*L()),X.isLineSegments?ot.setMode(k.LINES):X.isLineLoop?ot.setMode(k.LINE_LOOP):ot.setMode(k.LINE_STRIP)}else X.isPoints?ot.setMode(k.POINTS):X.isSprite&&ot.setMode(k.TRIANGLES);if(X.isBatchedMesh)if(X._multiDrawInstances!==null)ot.renderMultiDrawInstances(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount,X._multiDrawInstances);else if(H.get("WEBGL_multi_draw"))ot.renderMultiDraw(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount);else{let $e=X._multiDrawStarts,dt=X._multiDrawCounts,Ot=X._multiDrawCount,Fe=Ce?Se.get(Ce).bytesPerElement:1,Re=Z.get(ie).currentProgram.getUniforms();for(let si=0;si<Ot;si++)Re.setValue(k,"_gl_DrawID",si),ot.render($e[si]/Fe,dt[si])}else if(X.isInstancedMesh)ot.renderInstances(ke,Dt,X.count);else if(Y.isInstancedBufferGeometry){let $e=Y._maxInstanceCount!==void 0?Y._maxInstanceCount:1/0,dt=Math.min(Y.instanceCount,$e);ot.renderInstances(ke,Dt,dt)}else ot.render(ke,Dt)},this.compile=function(T,W,Y=null){Y===null&&(Y=T),g=tt.get(Y),g.init(W),y.push(g),Y.traverseVisible(function(X){X.isLight&&X.layers.test(W.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),T!==Y&&T.traverseVisible(function(X){X.isLight&&X.layers.test(W.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),g.setupLights();let ie=new Set;return T.traverse(function(X){if(!(X.isMesh||X.isPoints||X.isLine||X.isSprite))return;let ne=X.material;if(ne)if(Array.isArray(ne))for(let ve=0;ve<ne.length;ve++){let ye=ne[ve];lu(ye,Y,X),ie.add(ye)}else lu(ne,Y,X),ie.add(ne)}),y.pop(),g=null,ie},this.compileAsync=function(T,W,Y=null){let ie=this.compile(T,W,Y);return new Promise(X=>{function ne(){ie.forEach(function(ve){Z.get(ve).currentProgram.isReady()&&ie.delete(ve)}),ie.size!==0?setTimeout(ne,10):X(T)}H.get("KHR_parallel_shader_compile")!==null?ne():setTimeout(ne,10)})};let Ll=null;function hu(){ls.stop()}function cu(){ls.start()}let ls=new Ip;function Il(T,W,Y,ie){if(T.visible===!1)return;if(T.layers.test(W.layers)){if(T.isGroup)Y=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(W);else if(T.isLight)g.pushLight(T),T.castShadow&&g.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||de.intersectsSprite(T)){ie&&R.setFromMatrixPosition(T.matrixWorld).applyMatrix4(U);let ne=He.update(T),ve=T.material;ve.visible&&p.push(T,ne,ve,Y,R.z,null)}}else if((T.isMesh||T.isLine||T.isPoints)&&(!T.frustumCulled||de.intersectsObject(T))){let ne=He.update(T),ve=T.material;if(ie&&(T.boundingSphere!==void 0?(T.boundingSphere===null&&T.computeBoundingSphere(),R.copy(T.boundingSphere.center)):(ne.boundingSphere===null&&ne.computeBoundingSphere(),R.copy(ne.boundingSphere.center)),R.applyMatrix4(T.matrixWorld).applyMatrix4(U)),Array.isArray(ve)){let ye=ne.groups;for(let Ce=0,De=ye.length;Ce<De;Ce++){let Pe=ye[Ce],Le=ve[Pe.materialIndex];Le&&Le.visible&&p.push(T,ne,Le,Y,R.z,Pe)}}else ve.visible&&p.push(T,ne,ve,Y,R.z,null)}}let X=T.children;for(let ne=0,ve=X.length;ne<ve;ne++)Il(X[ne],W,Y,ie)}function uu(T,W,Y,ie){let X=T.opaque,ne=T.transmissive,ve=T.transparent;g.setupLightsView(Y),ae===!0&&lt.setGlobalState(_.clippingPlanes,Y),ie&&N.viewport(B.copy(ie)),X.length>0&&ta(X,W,Y),ne.length>0&&ta(ne,W,Y),ve.length>0&&ta(ve,W,Y),N.buffers.depth.setTest(!0),N.buffers.depth.setMask(!0),N.buffers.color.setMask(!0),N.setPolygonOffset(!1)}function du(T,W,Y,ie){if((Y.isScene===!0?Y.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ie.id]===void 0&&(g.state.transmissionRenderTarget[ie.id]=new ct(1,1,{generateMipmaps:!0,type:H.has("EXT_color_buffer_half_float")||H.has("EXT_color_buffer_float")?zt:Mi,minFilter:Ns,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ve.workingColorSpace}));let X=g.state.transmissionRenderTarget[ie.id],ne=ie.viewport||B;X.setSize(ne.z,ne.w);let ve=_.getRenderTarget();_.setRenderTarget(X),_.getClearColor(z),q=_.getClearAlpha(),q<1&&_.setClearColor(16777215,.5),_.clear(),w&&Ge.render(Y);let ye=_.toneMapping;_.toneMapping=Hi;let Ce=ie.viewport;if(ie.viewport!==void 0&&(ie.viewport=void 0),g.setupLightsView(ie),ae===!0&&lt.setGlobalState(_.clippingPlanes,ie),ta(T,Y,ie),se.updateMultisampleRenderTarget(X),se.updateRenderTargetMipmap(X),H.has("WEBGL_multisampled_render_to_texture")===!1){let De=!1;for(let Pe=0,Le=W.length;Pe<Le;Pe++){let ke=W[Pe],it=ke.object,Dt=ke.geometry,st=ke.material,ot=ke.group;if(st.side===Je&&it.layers.test(ie.layers)){let $e=st.side;st.side=At,st.needsUpdate=!0,pu(it,Y,ie,Dt,st,ot),st.side=$e,st.needsUpdate=!0,De=!0}}De===!0&&(se.updateMultisampleRenderTarget(X),se.updateRenderTargetMipmap(X))}_.setRenderTarget(ve),_.setClearColor(z,q),Ce!==void 0&&(ie.viewport=Ce),_.toneMapping=ye}function ta(T,W,Y){let ie=W.isScene===!0?W.overrideMaterial:null;for(let X=0,ne=T.length;X<ne;X++){let ve=T[X],ye=ve.object,Ce=ve.geometry,De=ie===null?ve.material:ie,Pe=ve.group;ye.layers.test(Y.layers)&&pu(ye,W,Y,Ce,De,Pe)}}function pu(T,W,Y,ie,X,ne){T.onBeforeRender(_,W,Y,ie,X,ne),T.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),X.onBeforeRender(_,W,Y,ie,T,ne),X.transparent===!0&&X.side===Je&&X.forceSinglePass===!1?(X.side=At,X.needsUpdate=!0,_.renderBufferDirect(Y,W,ie,X,T,ne),X.side=ft,X.needsUpdate=!0,_.renderBufferDirect(Y,W,ie,X,T,ne),X.side=Je):_.renderBufferDirect(Y,W,ie,X,T,ne),T.onAfterRender(_,W,Y,ie,X,ne)}function ia(T,W,Y){W.isScene!==!0&&(W=I);let ie=Z.get(T),X=g.state.lights,ne=g.state.shadowsArray,ve=X.state.version,ye=Ne.getParameters(T,X.state,ne,W,Y),Ce=Ne.getProgramCacheKey(ye),De=ie.programs;ie.environment=T.isMeshStandardMaterial?W.environment:null,ie.fog=W.fog,ie.envMap=(T.isMeshStandardMaterial?fe:xe).get(T.envMap||ie.environment),ie.envMapRotation=ie.environment!==null&&T.envMap===null?W.environmentRotation:T.envMapRotation,De===void 0&&(T.addEventListener("dispose",ou),De=new Map,ie.programs=De);let Pe=De.get(Ce);if(Pe!==void 0){if(ie.currentProgram===Pe&&ie.lightsStateVersion===ve)return fu(T,ye),Pe}else ye.uniforms=Ne.getUniforms(T),T.onBeforeCompile(ye,_),Pe=Ne.acquireProgram(ye,Ce),De.set(Ce,Pe),ie.uniforms=ye.uniforms;let Le=ie.uniforms;return(T.isShaderMaterial||T.isRawShaderMaterial)&&T.clipping!==!0||(Le.clippingPlanes=lt.uniform),fu(T,ye),ie.needsLights=function(ke){return ke.isMeshLambertMaterial||ke.isMeshToonMaterial||ke.isMeshPhongMaterial||ke.isMeshStandardMaterial||ke.isShadowMaterial||ke.isShaderMaterial&&ke.lights===!0}(T),ie.lightsStateVersion=ve,ie.needsLights&&(Le.ambientLightColor.value=X.state.ambient,Le.lightProbe.value=X.state.probe,Le.directionalLights.value=X.state.directional,Le.directionalLightShadows.value=X.state.directionalShadow,Le.spotLights.value=X.state.spot,Le.spotLightShadows.value=X.state.spotShadow,Le.rectAreaLights.value=X.state.rectArea,Le.ltc_1.value=X.state.rectAreaLTC1,Le.ltc_2.value=X.state.rectAreaLTC2,Le.pointLights.value=X.state.point,Le.pointLightShadows.value=X.state.pointShadow,Le.hemisphereLights.value=X.state.hemi,Le.directionalShadowMap.value=X.state.directionalShadowMap,Le.directionalShadowMatrix.value=X.state.directionalShadowMatrix,Le.spotShadowMap.value=X.state.spotShadowMap,Le.spotLightMatrix.value=X.state.spotLightMatrix,Le.spotLightMap.value=X.state.spotLightMap,Le.pointShadowMap.value=X.state.pointShadowMap,Le.pointShadowMatrix.value=X.state.pointShadowMatrix),ie.currentProgram=Pe,ie.uniformsList=null,Pe}function mu(T){if(T.uniformsList===null){let W=T.currentProgram.getUniforms();T.uniformsList=Er.seqWithValue(W.seq,T.uniforms)}return T.uniformsList}function fu(T,W){let Y=Z.get(T);Y.outputColorSpace=W.outputColorSpace,Y.batching=W.batching,Y.batchingColor=W.batchingColor,Y.instancing=W.instancing,Y.instancingColor=W.instancingColor,Y.instancingMorph=W.instancingMorph,Y.skinning=W.skinning,Y.morphTargets=W.morphTargets,Y.morphNormals=W.morphNormals,Y.morphColors=W.morphColors,Y.morphTargetsCount=W.morphTargetsCount,Y.numClippingPlanes=W.numClippingPlanes,Y.numIntersection=W.numClipIntersection,Y.vertexAlphas=W.vertexAlphas,Y.vertexTangents=W.vertexTangents,Y.toneMapping=W.toneMapping}ls.setAnimationLoop(function(T){Ll&&Ll(T)}),typeof self<"u"&&ls.setContext(self),this.setAnimationLoop=function(T){Ll=T,Ct.setAnimationLoop(T),T===null?ls.stop():ls.start()},Ct.addEventListener("sessionstart",hu),Ct.addEventListener("sessionend",cu),this.render=function(T,W){if(W!==void 0&&W.isCamera!==!0)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(b===!0)return;if(T.matrixWorldAutoUpdate===!0&&T.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),Ct.enabled===!0&&Ct.isPresenting===!0&&(Ct.cameraAutoUpdate===!0&&Ct.updateCamera(W),W=Ct.getCamera()),T.isScene===!0&&T.onBeforeRender(_,T,W,P),g=tt.get(T,y.length),g.init(W),y.push(g),U.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),de.setFromProjectionMatrix(U),A=this.localClippingEnabled,ae=lt.init(this.clippingPlanes,A),p=je.get(T,x.length),p.init(),x.push(p),Ct.enabled===!0&&Ct.isPresenting===!0){let ne=_.xr.getDepthSensingMesh();ne!==null&&Il(ne,W,-1/0,_.sortObjects)}Il(T,W,0,_.sortObjects),p.finish(),_.sortObjects===!0&&p.sort(le,me),w=Ct.enabled===!1||Ct.isPresenting===!1||Ct.hasDepthSensing()===!1,w&&Ge.addToRenderList(p,T),this.info.render.frame++,ae===!0&&lt.beginShadows();let Y=g.state.shadowsArray;be.render(Y,T,W),ae===!0&&lt.endShadows(),this.info.autoReset===!0&&this.info.reset();let ie=p.opaque,X=p.transmissive;if(g.setupLights(),W.isArrayCamera){let ne=W.cameras;if(X.length>0)for(let ve=0,ye=ne.length;ve<ye;ve++)du(ie,X,T,ne[ve]);w&&Ge.render(T);for(let ve=0,ye=ne.length;ve<ye;ve++){let Ce=ne[ve];uu(p,T,Ce,Ce.viewport)}}else X.length>0&&du(ie,X,T,W),w&&Ge.render(T),uu(p,T,W);P!==null&&(se.updateMultisampleRenderTarget(P),se.updateRenderTargetMipmap(P)),T.isScene===!0&&T.onAfterRender(_,T,W),fi.resetDefaultState(),D=-1,O=null,y.pop(),y.length>0?(g=y[y.length-1],ae===!0&&lt.setGlobalState(_.clippingPlanes,g.state.camera)):g=null,x.pop(),p=x.length>0?x[x.length-1]:null},this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return P},this.setRenderTargetTextures=function(T,W,Y){Z.get(T.texture).__webglTexture=W,Z.get(T.depthTexture).__webglTexture=Y;let ie=Z.get(T);ie.__hasExternalTextures=!0,ie.__autoAllocateDepthBuffer=Y===void 0,ie.__autoAllocateDepthBuffer||H.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ie.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(T,W){let Y=Z.get(T);Y.__webglFramebuffer=W,Y.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(T,W=0,Y=0){P=T,S=W,E=Y;let ie=!0,X=null,ne=!1,ve=!1;if(T){let ye=Z.get(T);if(ye.__useDefaultFramebuffer!==void 0)N.bindFramebuffer(k.FRAMEBUFFER,null),ie=!1;else if(ye.__webglFramebuffer===void 0)se.setupRenderTarget(T);else if(ye.__hasExternalTextures)se.rebindTextures(T,Z.get(T.texture).__webglTexture,Z.get(T.depthTexture).__webglTexture);else if(T.depthBuffer){let Pe=T.depthTexture;if(ye.__boundDepthTexture!==Pe){if(Pe!==null&&Z.has(Pe)&&(T.width!==Pe.image.width||T.height!==Pe.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");se.setupDepthRenderbuffer(T)}}let Ce=T.texture;(Ce.isData3DTexture||Ce.isDataArrayTexture||Ce.isCompressedArrayTexture)&&(ve=!0);let De=Z.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(X=Array.isArray(De[W])?De[W][Y]:De[W],ne=!0):X=T.samples>0&&se.useMultisampledRTT(T)===!1?Z.get(T).__webglMultisampledFramebuffer:Array.isArray(De)?De[Y]:De,B.copy(T.viewport),V.copy(T.scissor),j=T.scissorTest}else B.copy(J).multiplyScalar(ee).floor(),V.copy(re).multiplyScalar(ee).floor(),j=ce;if(N.bindFramebuffer(k.FRAMEBUFFER,X)&&ie&&N.drawBuffers(T,X),N.viewport(B),N.scissor(V),N.setScissorTest(j),ne){let ye=Z.get(T.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+W,ye.__webglTexture,Y)}else if(ve){let ye=Z.get(T.texture),Ce=W||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,ye.__webglTexture,Y||0,Ce)}D=-1},this.readRenderTargetPixels=function(T,W,Y,ie,X,ne,ve){if(!T||!T.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ye=Z.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&ve!==void 0&&(ye=ye[ve]),ye){N.bindFramebuffer(k.FRAMEBUFFER,ye);try{let Ce=T.texture,De=Ce.format,Pe=Ce.type;if(!te.textureFormatReadable(De))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!te.textureTypeReadable(Pe))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");W>=0&&W<=T.width-ie&&Y>=0&&Y<=T.height-X&&k.readPixels(W,Y,ie,X,ii.convert(De),ii.convert(Pe),ne)}finally{let Ce=P!==null?Z.get(P).__webglFramebuffer:null;N.bindFramebuffer(k.FRAMEBUFFER,Ce)}}},this.readRenderTargetPixelsAsync=async function(T,W,Y,ie,X,ne,ve){if(!T||!T.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ye=Z.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&ve!==void 0&&(ye=ye[ve]),ye){let Ce=T.texture,De=Ce.format,Pe=Ce.type;if(!te.textureFormatReadable(De))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!te.textureTypeReadable(Pe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(W>=0&&W<=T.width-ie&&Y>=0&&Y<=T.height-X){N.bindFramebuffer(k.FRAMEBUFFER,ye);let Le=k.createBuffer();k.bindBuffer(k.PIXEL_PACK_BUFFER,Le),k.bufferData(k.PIXEL_PACK_BUFFER,ne.byteLength,k.STREAM_READ),k.readPixels(W,Y,ie,X,ii.convert(De),ii.convert(Pe),0);let ke=P!==null?Z.get(P).__webglFramebuffer:null;N.bindFramebuffer(k.FRAMEBUFFER,ke);let it=k.fenceSync(k.SYNC_GPU_COMMANDS_COMPLETE,0);return k.flush(),await ip(k,it,4),k.bindBuffer(k.PIXEL_PACK_BUFFER,Le),k.getBufferSubData(k.PIXEL_PACK_BUFFER,0,ne),k.deleteBuffer(Le),k.deleteSync(it),ne}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(T,W=null,Y=0){T.isTexture!==!0&&(Vs("WebGLRenderer: copyFramebufferToTexture function signature has changed."),W=arguments[0]||null,T=arguments[1]);let ie=Math.pow(2,-Y),X=Math.floor(T.image.width*ie),ne=Math.floor(T.image.height*ie),ve=W!==null?W.x:0,ye=W!==null?W.y:0;se.setTexture2D(T,0),k.copyTexSubImage2D(k.TEXTURE_2D,Y,0,0,ve,ye,X,ne),N.unbindTexture()};let tf=k.createFramebuffer(),sf=k.createFramebuffer();this.copyTextureToTexture=function(T,W,Y=null,ie=null,X=0,ne=null){let ve,ye,Ce,De,Pe,Le,ke,it,Dt;T.isTexture!==!0&&(Vs("WebGLRenderer: copyTextureToTexture function signature has changed."),ie=arguments[0]||null,T=arguments[1],W=arguments[2],ne=arguments[3]||0,Y=null),ne===null&&(X!==0?(Vs("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ne=X,X=0):ne=0);let st=T.isCompressedTexture?T.mipmaps[ne]:T.image;if(Y!==null)ve=Y.max.x-Y.min.x,ye=Y.max.y-Y.min.y,Ce=Y.isBox3?Y.max.z-Y.min.z:1,De=Y.min.x,Pe=Y.min.y,Le=Y.isBox3?Y.min.z:0;else{let gi=Math.pow(2,-X);ve=Math.floor(st.width*gi),ye=Math.floor(st.height*gi),Ce=T.isDataArrayTexture?st.depth:T.isData3DTexture?Math.floor(st.depth*gi):1,De=0,Pe=0,Le=0}ie!==null?(ke=ie.x,it=ie.y,Dt=ie.z):(ke=0,it=0,Dt=0);let ot=ii.convert(W.format),$e=ii.convert(W.type),dt;W.isData3DTexture?(se.setTexture3D(W,0),dt=k.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(se.setTexture2DArray(W,0),dt=k.TEXTURE_2D_ARRAY):(se.setTexture2D(W,0),dt=k.TEXTURE_2D),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,W.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,W.unpackAlignment);let Ot=k.getParameter(k.UNPACK_ROW_LENGTH),Fe=k.getParameter(k.UNPACK_IMAGE_HEIGHT),Re=k.getParameter(k.UNPACK_SKIP_PIXELS),si=k.getParameter(k.UNPACK_SKIP_ROWS),Ul=k.getParameter(k.UNPACK_SKIP_IMAGES);k.pixelStorei(k.UNPACK_ROW_LENGTH,st.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,st.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,De),k.pixelStorei(k.UNPACK_SKIP_ROWS,Pe),k.pixelStorei(k.UNPACK_SKIP_IMAGES,Le);let sa=T.isDataArrayTexture||T.isData3DTexture,Qi=W.isDataArrayTexture||W.isData3DTexture;if(T.isDepthTexture){let gi=Z.get(T),Ks=Z.get(W),Ti=Z.get(gi.__renderTarget),Fl=Z.get(Ks.__renderTarget);N.bindFramebuffer(k.READ_FRAMEBUFFER,Ti.__webglFramebuffer),N.bindFramebuffer(k.DRAW_FRAMEBUFFER,Fl.__webglFramebuffer);for(let Zs=0;Zs<Ce;Zs++)sa&&(k.framebufferTextureLayer(k.READ_FRAMEBUFFER,k.COLOR_ATTACHMENT0,Z.get(T).__webglTexture,X,Le+Zs),k.framebufferTextureLayer(k.DRAW_FRAMEBUFFER,k.COLOR_ATTACHMENT0,Z.get(W).__webglTexture,ne,Dt+Zs)),k.blitFramebuffer(De,Pe,ve,ye,ke,it,ve,ye,k.DEPTH_BUFFER_BIT,k.NEAREST);N.bindFramebuffer(k.READ_FRAMEBUFFER,null),N.bindFramebuffer(k.DRAW_FRAMEBUFFER,null)}else if(X!==0||T.isRenderTargetTexture||Z.has(T)){let gi=Z.get(T),Ks=Z.get(W);N.bindFramebuffer(k.READ_FRAMEBUFFER,tf),N.bindFramebuffer(k.DRAW_FRAMEBUFFER,sf);for(let Ti=0;Ti<Ce;Ti++)sa?k.framebufferTextureLayer(k.READ_FRAMEBUFFER,k.COLOR_ATTACHMENT0,gi.__webglTexture,X,Le+Ti):k.framebufferTexture2D(k.READ_FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_2D,gi.__webglTexture,X),Qi?k.framebufferTextureLayer(k.DRAW_FRAMEBUFFER,k.COLOR_ATTACHMENT0,Ks.__webglTexture,ne,Dt+Ti):k.framebufferTexture2D(k.DRAW_FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_2D,Ks.__webglTexture,ne),X!==0?k.blitFramebuffer(De,Pe,ve,ye,ke,it,ve,ye,k.COLOR_BUFFER_BIT,k.NEAREST):Qi?k.copyTexSubImage3D(dt,ne,ke,it,Dt+Ti,De,Pe,ve,ye):k.copyTexSubImage2D(dt,ne,ke,it,De,Pe,ve,ye);N.bindFramebuffer(k.READ_FRAMEBUFFER,null),N.bindFramebuffer(k.DRAW_FRAMEBUFFER,null)}else Qi?T.isDataTexture||T.isData3DTexture?k.texSubImage3D(dt,ne,ke,it,Dt,ve,ye,Ce,ot,$e,st.data):W.isCompressedArrayTexture?k.compressedTexSubImage3D(dt,ne,ke,it,Dt,ve,ye,Ce,ot,st.data):k.texSubImage3D(dt,ne,ke,it,Dt,ve,ye,Ce,ot,$e,st):T.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,ne,ke,it,ve,ye,ot,$e,st.data):T.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,ne,ke,it,st.width,st.height,ot,st.data):k.texSubImage2D(k.TEXTURE_2D,ne,ke,it,ve,ye,ot,$e,st);k.pixelStorei(k.UNPACK_ROW_LENGTH,Ot),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Fe),k.pixelStorei(k.UNPACK_SKIP_PIXELS,Re),k.pixelStorei(k.UNPACK_SKIP_ROWS,si),k.pixelStorei(k.UNPACK_SKIP_IMAGES,Ul),ne===0&&W.generateMipmaps&&k.generateMipmap(dt),N.unbindTexture()},this.copyTextureToTexture3D=function(T,W,Y=null,ie=null,X=0){return T.isTexture!==!0&&(Vs("WebGLRenderer: copyTextureToTexture3D function signature has changed."),Y=arguments[0]||null,ie=arguments[1]||null,T=arguments[2],W=arguments[3],X=arguments[4]||0),Vs('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(T,W,Y,ie,X)},this.initRenderTarget=function(T){Z.get(T).__webglFramebuffer===void 0&&se.setupRenderTarget(T)},this.initTexture=function(T){T.isCubeTexture?se.setTextureCube(T,0):T.isData3DTexture?se.setTexture3D(T,0):T.isDataArrayTexture||T.isCompressedArrayTexture?se.setTexture2DArray(T,0):se.setTexture2D(T,0),N.unbindTexture()},this.resetState=function(){S=0,E=0,P=null,N.reset(),fi.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ys}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorspace=Ve._getDrawingBufferColorSpace(e),t.unpackColorSpace=Ve._getUnpackColorSpace()}};var il=class{constructor(e="images/assets/",t){this.assetRoot=e,this.mobile=t,this.pxlTimer=null,this.verboseLoading=!1,this.texLoader=new _r,this.textLoaderArray=[],this.channelFormats=[No,Cr,zo,Gn,ut,Go,Zt]}get curMS(){return this.pxlTimer.curMS}setDependencies(e){this.pxlTimer=e.pxlTimer}updateUrl(e,t={},i=""){window.history.replaceState?window.history.replaceState(t,i,e):window.history.pushState(t,i,e)}copyRoomUrl(){let e=window.location,t=document.activeElement,i=document.createElement("textarea");i.value=e,document.body.appendChild(i),i.focus(),i.select();let s=!1;try{s=document.execCommand("copy")?"successful":"unsuccessful"}catch{}return document.body.removeChild(i),t.focus(),s}checkInt(e){return e%1==0}degToRad(e){return e*(Math.PI/180)}toHundreths(e){if(!e)return 0;if(Number.isInteger(e))return e;{let t=(e+"").split(".");return parseFloat(t[0]+"."+t[1].substr(0,2))}}toTenths(e){if(!e)return 0;if(Number.isInteger(e))return e;{let t=(e+"").split(".");return parseFloat(t[0]+"."+t[1].substr(0,1))}}getDateTime(){let e=new Date,t=(e.getFullYear()+"").padStart(2,"0")+"-"+(e.getMonth()+1+"").padStart(2,"0")+"-"+(e.getDate()+"").padStart(2,"0"),i=(e.getHours()+"").padStart(2,"0")+":"+(e.getMinutes()+"").padStart(2,"0")+":"+(e.getSeconds()+"").padStart(2,"0");return[t,i]}cleanStrict(e){let t=document.createElement("div");t.innerHTML=e,t=t.innerText;let i=t.match(/([a-zA-Z0-9])\w+/g);return i&&(t=i.join(" ")),t}cleanBasic(e){let t=document.createElement("div");t.innerHTML=e,t=t.innerText;let i=t.match(/([a-zA-Z0-9\s\w-+()\[\]])+/g);return i&&(t=i.join("")),t}cleanString(e){let t=document.createElement("div");return t.innerHTML=e,t=t.innerText,t}randomFloat(e,t){return Math.random()*(t-e)+e}screenToNDC(e,t,i,s){let r=e/i*2-1,a=-(t/s)*2+1;return new G(r,a)}componentToHex(e){var t=e.toString(16);return t.padStart(2,"0")}rgbToHex(e,t,i){return"#"+this.componentToHex(Math.min(255,Math.max(0,Math.round(e))))+this.componentToHex(Math.min(255,Math.max(0,Math.round(t))))+this.componentToHex(Math.min(255,Math.max(0,Math.round(i))))}hexToRgb(e){e[0]=="#"?e=e.substr(1,6):e=e.substr(0,6);let i,s,r;return e.length==3?(i=e[0]+e[0],s=e[1]+e[1],r=e[2]+e[2]):(i=e[0]+e[1],s=e[2]+e[3],r=e[4]+e[5]),i=parseInt(i,16),s=parseInt(s,16),r=parseInt(r,16),[i,s,r]}stringToRgb(e,t=null,i=!1){let s=[255,0,0];if(e){let r=e.length,a="";for(let l=0;l<r;++l)a+=e[r-1-l].charCodeAt(0).toString(16);let o=a.length;if(o>6){let l=1;e=="tussin"?l=0:e=="fexofenadine"&&(l=-1);let h=Math.max(0,parseInt((o-6)/2+l));a=a.substr(h,6)}s=this.hexToRgb(a)}if(t!=null){let r=Math.max(...s),a=Math.min(...s),o=r*t;s[0]=parseInt(Math.min(255,(s[0]-a)/(r-a)*255+o)),s[1]=parseInt(Math.min(255,(s[1]-a)/(r-a)*255+o)),s[2]=parseInt(Math.min(255,(s[2]-a)/(r-a)*255+o))}return i==!0&&(s[0]=s[0]/255,s[1]=s[1]/255,s[2]=s[2]/255),s}colorTosRGB(e){return typeof e=="object"&&(e.hasOwnProperty&&e.hasOwnProperty("r")&&(e.r=this.tosRGB(e.r),e.g=this.tosRGB(e.g),e.b=this.tosRGB(e.b)),e.hasOwnProperty&&e.hasOwnProperty("x")&&(e.x=this.tosRGB(e.x),e.y=this.tosRGB(e.y),e.z=this.tosRGB(e.z))),e}tosRGB(e){return e<=.0031308?e*=12.92:e=1.055*Math.pow(e,this.oneTwoPFour)-.055,e}colorToLinear(e){return typeof e=="object"&&(e.hasOwnProperty&&e.hasOwnProperty("r")&&(e.r=this.toLinear(e.r),e.g=this.toLinear(e.g),e.b=this.toLinear(e.b)),e.hasOwnProperty&&e.hasOwnProperty("x")&&(e.x=this.toLinear(e.x),e.y=this.toLinear(e.y),e.z=this.toLinear(e.z))),e}toLinear(e){return e<=.04045?e*=this.twelvePNineTwoDiv:e=Math.pow((e+.055)*this.onePOFiveFiveDiv,2.4),e}gammaCorrectColor(e,t="2.2",i="1.8"){return typeof e=="object"&&(e.hasOwnProperty&&e.hasOwnProperty("r")&&(e.r=this.gammaCorrect(e.r,t,i),e.g=this.gammaCorrect(e.g,t,i),e.b=this.gammaCorrect(e.b,t,i)),e.hasOwnProperty&&e.hasOwnProperty("x")&&(e.x=this.gammaCorrect(e.x,t,i),e.y=this.gammaCorrect(e.y,t,i),e.z=this.gammaCorrect(e.z,t,i))),e}gammaCorrection(e,t="2.2",i="1.8"){let s=Math.pow(e,t);return Math.pow(s,1/i)}convertColor(e,t=COLOR_SHIFT.KEEP){if(t==COLOR_SHIFT.KEEP)return e;let i=e.clone();switch(t){case COLOR_SHIFT.sRGB_TO_LINEAR:i=this.colorTosRGB(i);break;case COLOR_SHIFT.LINEAR_TO_sRGB:i=this.colorToLinear(i);break;case COLOR_SHIFT.WINDOWS_TO_UNIX:i=this.gammaCorrectColor(i,"2.2","1.8");break;case COLOR_SHIFT.UNIX_TO_WINDOWS:i=this.gammaCorrectColor(i,"1.8","2.2");break;case COLOR_SHIFT.LINEAR_TO_WINDOWS:i=this.gammaCorrectColor(i,"1.0","2.2");break;case COLOR_SHIFT.WINDOWS_TO_LINEAR:i=this.gammaCorrectColor(i,"2.2","1.0");break;case COLOR_SHIFT.LINEAR_TO_UNIX:i=this.gammaCorrectColor(i,"1.0","1.8");break;case COLOR_SHIFT.UNIX_TO_LINEAR:i=this.gammaCorrectColor(i,"1.8","1.0");break;default:break}return i}randomizeArray(e){let t=[...e],i=[];for(;t.length>0;){let s=t.length==1?0:parseInt(Math.random()*21*t.length)%t.length;i.push(t.splice(s,1)[0])}return i}getRandom(e,t=1.14){let i=Math.floor(Math.random(t)*e.length);return e[i]}applyTransformList(e,t){var i=t.r;e.rotateX(i[0]),e.rotateY(i[1]),e.rotateZ(i[2]),typeof t.rOrder<"u"&&(e.rotation.order=t.rOrder);var s=t.t;e.position.set(s[0],s[1],s[2]);var r=t.s;e.scale.set(r[0],r[1],r[2]),e.matrixAutoUpdate=!1,e.updateMatrix()}vec2(e=null,t=null){return new G(e,t)}vec3(e=0,t=0,i=0){return new M(e,t,i)}loadTexture(e,t=null,i={}){if(typeof this.textLoaderArray[e]<"u")s=this.textLoaderArray[e];else{var s=new mt;this.texLoader.load(e,r=>{t!=null&&(s.format=this.channelFormats[t]),s.image=r,s.needsUpdate=!0,i.length>0&&Object.keys(i).forEach(o=>{s[o]=i[o]})}),this.textLoaderArray[e]=s}return s}getVideoTexture(e){let t=new dn(e);return t.minFilter=Qe,t.magFilter=Qe,t.format=Gn,t}getCanvasTexture(e){let t=new pn(e),i=new ki({map:t});return{texture:t,material:i}}};var ei=Uint8Array,Pr=Uint16Array,Av=Int32Array,kp=new ei([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Np=new ei([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Pv=new ei([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Gp=function(n,e){for(var t=new Pr(31),i=0;i<31;++i)t[i]=e+=1<<n[i-1];for(var s=new Av(t[30]),i=1;i<30;++i)for(var r=t[i];r<t[i+1];++r)s[r]=r-t[i]<<5|i;return{b:t,r:s}},Vp=Gp(kp,2),zp=Vp.b,Rv=Vp.r;zp[28]=258,Rv[258]=28;var Hp=Gp(Np,0),Dv=Hp.b,R_=Hp.r,Ic=new Pr(32768);for(qe=0;qe<32768;++qe)Xi=(qe&43690)>>1|(qe&21845)<<1,Xi=(Xi&52428)>>2|(Xi&13107)<<2,Xi=(Xi&61680)>>4|(Xi&3855)<<4,Ic[qe]=((Xi&65280)>>8|(Xi&255)<<8)>>1;var Xi,qe,Wn=function(n,e,t){for(var i=n.length,s=0,r=new Pr(e);s<i;++s)n[s]&&++r[n[s]-1];var a=new Pr(e);for(s=1;s<e;++s)a[s]=a[s-1]+r[s-1]<<1;var o;if(t){o=new Pr(1<<e);var l=15-e;for(s=0;s<i;++s)if(n[s])for(var h=s<<4|n[s],c=e-n[s],u=a[n[s]-1]++<<c,d=u|(1<<c)-1;u<=d;++u)o[Ic[u]>>l]=h}else for(o=new Pr(i),s=0;s<i;++s)n[s]&&(o[s]=Ic[a[n[s]-1]++]>>15-n[s]);return o},jn=new ei(288);for(qe=0;qe<144;++qe)jn[qe]=8;var qe;for(qe=144;qe<256;++qe)jn[qe]=9;var qe;for(qe=256;qe<280;++qe)jn[qe]=7;var qe;for(qe=280;qe<288;++qe)jn[qe]=8;var qe,Wp=new ei(32);for(qe=0;qe<32;++qe)Wp[qe]=5;var qe;var Lv=Wn(jn,9,1);var Iv=Wn(Wp,5,1),Dc=function(n){for(var e=n[0],t=1;t<n.length;++t)n[t]>e&&(e=n[t]);return e},ui=function(n,e,t){var i=e/8|0;return(n[i]|n[i+1]<<8)>>(e&7)&t},Lc=function(n,e){var t=e/8|0;return(n[t]|n[t+1]<<8|n[t+2]<<16)>>(e&7)},Uv=function(n){return(n+7)/8|0},Fv=function(n,e,t){return(e==null||e<0)&&(e=0),(t==null||t>n.length)&&(t=n.length),new ei(n.subarray(e,t))};var Bv=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],di=function(n,e,t){var i=new Error(e||Bv[n]);if(i.code=n,Error.captureStackTrace&&Error.captureStackTrace(i,di),!t)throw i;return i},Ov=function(n,e,t,i){var s=n.length,r=i?i.length:0;if(!s||e.f&&!e.l)return t||new ei(0);var a=!t,o=a||e.i!=2,l=e.i;a&&(t=new ei(s*3));var h=function(I){var w=t.length;if(I>w){var L=new ei(Math.max(w*2,I));L.set(t),t=L}},c=e.f||0,u=e.p||0,d=e.b||0,m=e.l,f=e.d,v=e.m,p=e.n,g=s*8;do{if(!m){c=ui(n,u,1);var x=ui(n,u+1,3);if(u+=3,x)if(x==1)m=Lv,f=Iv,v=9,p=5;else if(x==2){var S=ui(n,u,31)+257,E=ui(n,u+10,15)+4,P=S+ui(n,u+5,31)+1;u+=14;for(var D=new ei(P),O=new ei(19),B=0;B<E;++B)O[Pv[B]]=ui(n,u+B*3,7);u+=E*3;for(var V=Dc(O),j=(1<<V)-1,z=Wn(O,V,1),B=0;B<P;){var q=z[ui(n,u,j)];u+=q&15;var y=q>>4;if(y<16)D[B++]=y;else{var K=0,$=0;for(y==16?($=3+ui(n,u,3),u+=2,K=D[B-1]):y==17?($=3+ui(n,u,7),u+=3):y==18&&($=11+ui(n,u,127),u+=7);$--;)D[B++]=K}}var ee=D.subarray(0,S),le=D.subarray(S);v=Dc(ee),p=Dc(le),m=Wn(ee,v,1),f=Wn(le,p,1)}else di(1);else{var y=Uv(u)+4,_=n[y-4]|n[y-3]<<8,b=y+_;if(b>s){l&&di(0);break}o&&h(d+_),t.set(n.subarray(y,b),d),e.b=d+=_,e.p=u=b*8,e.f=c;continue}if(u>g){l&&di(0);break}}o&&h(d+131072);for(var me=(1<<v)-1,J=(1<<p)-1,re=u;;re=u){var K=m[Lc(n,u)&me],ce=K>>4;if(u+=K&15,u>g){l&&di(0);break}if(K||di(2),ce<256)t[d++]=ce;else if(ce==256){re=u,m=null;break}else{var de=ce-254;if(ce>264){var B=ce-257,ae=kp[B];de=ui(n,u,(1<<ae)-1)+zp[B],u+=ae}var A=f[Lc(n,u)&J],C=A>>4;A||di(3),u+=A&15;var le=Dv[C];if(C>3){var ae=Np[C];le+=Lc(n,u)&(1<<ae)-1,u+=ae}if(u>g){l&&di(0);break}o&&h(d+131072);var U=d+de;if(d<le){var F=r-le,R=Math.min(le,U);for(F+d<0&&di(3);d<R;++d)t[d]=i[F+d]}for(;d<U;++d)t[d]=t[d-le]}}e.l=m,e.p=re,e.b=d,e.f=c,m&&(c=1,e.m=v,e.d=f,e.n=p)}while(!c);return d!=t.length&&a?Fv(t,0,d):t.subarray(0,d)};var kv=new ei(0);var Nv=function(n,e){return((n[0]&15)!=8||n[0]>>4>7||(n[0]<<8|n[1])%31)&&di(6,"invalid zlib data"),(n[1]>>5&1)==+!e&&di(6,"invalid zlib data: "+(n[1]&32?"need":"unexpected")+" dictionary"),(n[1]>>3&4)+2};function jp(n,e){return Ov(n.subarray(Nv(n,e&&e.dictionary),-4),{i:2},e&&e.out,e&&e.dictionary)}var Gv=typeof TextDecoder<"u"&&new TextDecoder,Vv=0;try{Gv.decode(kv,{stream:!0}),Vv=1}catch{}function Xp(n,e,t){let i=t.length-n-1;if(e>=t[i])return i-1;if(e<=t[n])return n;let s=n,r=i,a=Math.floor((s+r)/2);for(;e<t[a]||e>=t[a+1];)e<t[a]?r=a:s=a,a=Math.floor((s+r)/2);return a}function Hv(n,e,t,i){let s=[],r=[],a=[];s[0]=1;for(let o=1;o<=t;++o){r[o]=e-i[n+1-o],a[o]=i[n+o]-e;let l=0;for(let h=0;h<o;++h){let c=a[h+1],u=r[o-h],d=s[h]/(c+u);s[h]=l+c*d,l=u*d}s[o]=l}return s}function qp(n,e,t,i){let s=Xp(n,i,e),r=Hv(s,i,n,e),a=new Ie(0,0,0,0);for(let o=0;o<=n;++o){let l=t[s-n+o],h=r[o],c=l.w*h;a.x+=l.x*c,a.y+=l.y*c,a.z+=l.z*c,a.w+=l.w*h}return a}function Wv(n,e,t,i,s){let r=[];for(let u=0;u<=t;++u)r[u]=0;let a=[];for(let u=0;u<=i;++u)a[u]=r.slice(0);let o=[];for(let u=0;u<=t;++u)o[u]=r.slice(0);o[0][0]=1;let l=r.slice(0),h=r.slice(0);for(let u=1;u<=t;++u){l[u]=e-s[n+1-u],h[u]=s[n+u]-e;let d=0;for(let m=0;m<u;++m){let f=h[m+1],v=l[u-m];o[u][m]=f+v;let p=o[m][u-1]/o[u][m];o[m][u]=d+f*p,d=v*p}o[u][u]=d}for(let u=0;u<=t;++u)a[0][u]=o[u][t];for(let u=0;u<=t;++u){let d=0,m=1,f=[];for(let v=0;v<=t;++v)f[v]=r.slice(0);f[0][0]=1;for(let v=1;v<=i;++v){let p=0,g=u-v,x=t-v;u>=v&&(f[m][0]=f[d][0]/o[x+1][g],p=f[m][0]*o[g][x]);let y=g>=-1?1:-g,_=u-1<=x?v-1:t-u;for(let S=y;S<=_;++S)f[m][S]=(f[d][S]-f[d][S-1])/o[x+1][g+S],p+=f[m][S]*o[g+S][x];u<=x&&(f[m][v]=-f[d][v-1]/o[x+1][u],p+=f[m][v]*o[u][x]),a[v][u]=p;let b=d;d=m,m=b}}let c=t;for(let u=1;u<=i;++u){for(let d=0;d<=t;++d)a[u][d]*=c;c*=t-u}return a}function jv(n,e,t,i,s){let r=s<n?s:n,a=[],o=Xp(n,i,e),l=Wv(o,i,n,r,e),h=[];for(let c=0;c<t.length;++c){let u=t[c].clone(),d=u.w;u.x*=d,u.y*=d,u.z*=d,h[c]=u}for(let c=0;c<=r;++c){let u=h[o-n].clone().multiplyScalar(l[c][0]);for(let d=1;d<=n;++d)u.add(h[o-n+d].clone().multiplyScalar(l[c][d]));a[c]=u}for(let c=r+1;c<=s+1;++c)a[c]=new Ie(0,0,0);return a}function Xv(n,e){let t=1;for(let s=2;s<=n;++s)t*=s;let i=1;for(let s=2;s<=e;++s)i*=s;for(let s=2;s<=n-e;++s)i*=s;return t/i}function qv(n){let e=n.length,t=[],i=[];for(let r=0;r<e;++r){let a=n[r];t[r]=new M(a.x,a.y,a.z),i[r]=a.w}let s=[];for(let r=0;r<e;++r){let a=t[r].clone();for(let o=1;o<=r;++o)a.sub(s[r-o].clone().multiplyScalar(Xv(r,o)*i[o]));s[r]=a.divideScalar(i[0])}return s}function Yp(n,e,t,i,s){let r=jv(n,e,t,i,s);return qv(r)}var sl=class extends Gt{constructor(e,t,i,s,r){super();let a=t?t.length-1:0,o=i?i.length:0;this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=s||0,this.endKnot=r||a;for(let l=0;l<o;++l){let h=i[l];this.controlPoints[l]=new Ie(h.x,h.y,h.z,h.w)}}getPoint(e,t=new M){let i=t,s=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=qp(this.degree,this.knots,this.controlPoints,s);return r.w!==1&&r.divideScalar(r.w),i.set(r.x,r.y,r.z)}getTangent(e,t=new M){let i=t,s=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),r=Yp(this.degree,this.knots,this.controlPoints,s,1);return i.copy(r[1]).normalize(),i}toJSON(){let e=super.toJSON();return e.degree=this.degree,e.knots=[...this.knots],e.controlPoints=this.controlPoints.map(t=>t.toArray()),e.startKnot=this.startKnot,e.endKnot=this.endKnot,e}fromJSON(e){return super.fromJSON(e),this.degree=e.degree,this.knots=[...e.knots],this.controlPoints=e.controlPoints.map(t=>new Ie(t[0],t[1],t[2],t[3])),this.startKnot=e.startKnot,this.endKnot=e.endKnot,this}};var Oe,gt,Vt,Xs=class extends ci{constructor(e){super(e)}load(e,t,i,s){let r=this,a=r.path===""?Un.extractUrlBase(e):r.path,o=new Rn(this.manager);o.setPath(r.path),o.setResponseType("arraybuffer"),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(l,a))}catch(h){s?s(h):console.error(h),r.manager.itemError(e)}},i,s)}parse(e,t){if(Kv(e))Oe=new Gc().parse(e);else{let s=Qp(e);if(!Zv(s))throw new Error("THREE.FBXLoader: Unknown format.");if(Kp(s)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+Kp(s));Oe=new Nc().parse(s)}let i=new Dn(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new Bc(i,this.manager).parse(Oe)}},Bc=class{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){gt=this.parseConnections();let e=this.parseImages(),t=this.parseTextures(e),i=this.parseMaterials(t),s=this.parseDeformers(),r=new Oc().parse(s);return this.parseScene(s,r,i),Vt}parseConnections(){let e=new Map;return"Connections"in Oe&&Oe.Connections.connections.forEach(function(i){let s=i[0],r=i[1],a=i[2];e.has(s)||e.set(s,{parents:[],children:[]});let o={ID:r,relationship:a};e.get(s).parents.push(o),e.has(r)||e.set(r,{parents:[],children:[]});let l={ID:s,relationship:a};e.get(r).children.push(l)}),e}parseImages(){let e={},t={};if("Video"in Oe.Objects){let i=Oe.Objects.Video;for(let s in i){let r=i[s],a=parseInt(s);if(e[a]=r.RelativeFilename||r.Filename,"Content"in r){let o=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,l=typeof r.Content=="string"&&r.Content!=="";if(o||l){let h=this.parseImage(i[s]);t[r.RelativeFilename||r.Filename]=h}}}}for(let i in e){let s=e[i];t[s]!==void 0?e[i]=t[s]:e[i]=e[i].split("\\").pop()}return e}parseImage(e){let t=e.Content,i=e.RelativeFilename||e.Filename,s=i.slice(i.lastIndexOf(".")+1).toLowerCase(),r;switch(s){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",i),r="image/tga";break;default:console.warn('FBXLoader: Image type "'+s+'" is not supported.');return}if(typeof t=="string")return"data:"+r+";base64,"+t;{let a=new Uint8Array(t);return window.URL.createObjectURL(new Blob([a],{type:r}))}}parseTextures(e){let t=new Map;if("Texture"in Oe.Objects){let i=Oe.Objects.Texture;for(let s in i){let r=this.parseTexture(i[s],e);t.set(parseInt(s),r)}}return t}parseTexture(e,t){let i=this.loadTexture(e,t);i.ID=e.id,i.name=e.attrName;let s=e.WrapModeU,r=e.WrapModeV,a=s!==void 0?s.value:0,o=r!==void 0?r.value:0;if(i.wrapS=a===0?_t:Oi,i.wrapT=o===0?_t:Oi,"Scaling"in e){let l=e.Scaling.value;i.repeat.x=l[0],i.repeat.y=l[1]}if("Translation"in e){let l=e.Translation.value;i.offset.x=l[0],i.offset.y=l[1]}return i}loadTexture(e,t){let i=new Set(["tga","tif","tiff","exr","dds","hdr","ktx2"]),s=e.FileName.split(".").pop().toLowerCase(),r=i.has(s)?this.manager.getHandler(`.${s}`):this.textureLoader;if(!r)return console.warn(`FBXLoader: ${s.toUpperCase()} loader not found, creating placeholder texture for`,e.RelativeFilename),new mt;let a=r.path;a||r.setPath(this.textureLoader.path);let o=gt.get(e.id).children,l;o!==void 0&&o.length>0&&t[o[0].ID]!==void 0&&(l=t[o[0].ID],(l.indexOf("blob:")===0||l.indexOf("data:")===0)&&r.setPath(void 0));let h=r.load(l);return r.setPath(a),h}parseMaterials(e){let t=new Map;if("Material"in Oe.Objects){let i=Oe.Objects.Material;for(let s in i){let r=this.parseMaterial(i[s],e);r!==null&&t.set(parseInt(s),r)}}return t}parseMaterial(e,t){let i=e.id,s=e.attrName,r=e.ShadingModel;if(typeof r=="object"&&(r=r.value),!gt.has(i))return null;let a=this.parseParameters(e,t,i),o;switch(r.toLowerCase()){case"phong":o=new Ps;break;case"lambert":o=new Tn;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),o=new Ps;break}return o.setValues(a),o.name=s,o}parseParameters(e,t,i){let s={};e.BumpFactor&&(s.bumpScale=e.BumpFactor.value),e.Diffuse?s.color=new he().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(s.color=new he().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(s.displacementScale=e.DisplacementFactor.value),e.Emissive?s.emissive=new he().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(s.emissive=new he().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(s.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),s.opacity=1-(e.TransparencyFactor?parseFloat(e.TransparencyFactor.value):0),(s.opacity===1||s.opacity===0)&&(s.opacity=e.Opacity?parseFloat(e.Opacity.value):null,s.opacity===null&&(s.opacity=1-(e.TransparentColor?parseFloat(e.TransparentColor.value[0]):0))),s.opacity<1&&(s.transparent=!0),e.ReflectionFactor&&(s.reflectivity=e.ReflectionFactor.value),e.Shininess&&(s.shininess=e.Shininess.value),e.Specular?s.specular=new he().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(s.specular=new he().fromArray(e.SpecularColor.value));let r=this;return gt.get(i).children.forEach(function(a){let o=a.relationship;switch(o){case"Bump":s.bumpMap=r.getTexture(t,a.ID);break;case"Maya|TEX_ao_map":s.aoMap=r.getTexture(t,a.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":s.map=r.getTexture(t,a.ID);break;case"DisplacementColor":s.displacementMap=r.getTexture(t,a.ID);break;case"EmissiveColor":s.emissiveMap=r.getTexture(t,a.ID);break;case"NormalMap":case"Maya|TEX_normal_map":s.normalMap=r.getTexture(t,a.ID);break;case"ReflectionColor":s.envMap=r.getTexture(t,a.ID),s.envMap!==void 0&&(s.envMap.mapping=Mr);break;case"SpecularColor":s.specularMap=r.getTexture(t,a.ID),s.specularMap;break;case"TransparentColor":case"TransparencyFactor":s.alphaMap=r.getTexture(t,a.ID),s.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",o);break}}),s}getTexture(e,t){return"LayeredTexture"in Oe.Objects&&t in Oe.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=gt.get(t).children[0].ID),e.get(t)}parseDeformers(){let e={},t={};if("Deformer"in Oe.Objects){let i=Oe.Objects.Deformer;for(let s in i){let r=i[s],a=gt.get(parseInt(s));if(r.attrType==="Skin"){let o=this.parseSkeleton(a,i);o.ID=s,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=a.parents[0].ID,e[s]=o}else if(r.attrType==="BlendShape"){let o={id:s};o.rawTargets=this.parseMorphTargets(a,i),o.id=s,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[s]=o}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){let i=[];return e.children.forEach(function(s){let r=t[s.ID];if(r.attrType!=="Cluster")return;let a={ID:s.ID,indices:[],weights:[],transformLink:new pe().fromArray(r.TransformLink.a)};"Indexes"in r&&(a.indices=r.Indexes.a,a.weights=r.Weights.a),i.push(a)}),{rawBones:i,bones:[]}}parseMorphTargets(e,t){let i=[];for(let s=0;s<e.children.length;s++){let r=e.children[s],a=t[r.ID],o={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if(a.attrType!=="BlendShapeChannel")return;o.geoID=gt.get(parseInt(r.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,i.push(o)}return i}parseScene(e,t,i){Vt=new bt;let s=this.parseModels(e.skeletons,t,i),r=Oe.Objects.Model,a=this;s.forEach(function(l){let h=r[l.ID];a.setLookAtProperties(l,h),gt.get(l.ID).parents.forEach(function(u){let d=s.get(u.ID);d!==void 0&&d.add(l)}),l.parent===null&&Vt.add(l)}),this.bindSkeleton(e.skeletons,t,s),this.addGlobalSceneSettings(),Vt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);let h=Zp(l.userData.transformData);l.applyMatrix4(h),l.updateWorldMatrix()}});let o=new kc().parse();Vt.children.length===1&&Vt.children[0].isGroup&&(Vt.children[0].animations=o,Vt=Vt.children[0]),Vt.animations=o}parseModels(e,t,i){let s=new Map,r=Oe.Objects.Model;var a=["Culling","DefaultAttributeIndex","InheritType","Lcl_Translation","Lcl_Rotation","Lcl_Scaling","RotationPivot","ScalingPivot","RotationActive","ScalingMax","RotationOffset","fbx_node_path","Shading","Version","attrName","attrType","currentUVSet","id","name","propertyList","singleProperty"];for(let o in r){let l=parseInt(o),h=r[o],c=gt.get(l),u=this.buildSkeleton(c,e,l,h.attrName);if(!u){switch(h.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,i);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new Ts;break;case"Null":default:u=new bt;break}u.name=h.attrName?Xe.sanitizeNodeName(h.attrName):"",u.userData.originalName=h.attrName,u.ID=l}Object.keys(h).forEach(m=>{a.includes(m)||(u.userData[m]=h[m].value)}),this.getTransformData(u,h),s.set(l,u)}return s}buildSkeleton(e,t,i,s){let r=null;return e.parents.forEach(function(a){for(let o in t){let l=t[o];l.rawBones.forEach(function(h,c){if(h.ID===a.ID){let u=r;r=new Ts,r.matrixWorld.copy(h.transformLink),r.name=s?Xe.sanitizeNodeName(s):"",r.userData.originalName=s,r.ID=i,l.bones[c]=r,u!==null&&r.add(u)}})}}),r}createCamera(e){let t,i;if(e.children.forEach(function(s){let r=Oe.Objects.NodeAttribute[s.ID];r!==void 0&&(i=r)}),i===void 0)t=new Ze;else{let s=0;i.CameraProjectionType!==void 0&&i.CameraProjectionType.value===1&&(s=1);let r=1;i.NearPlane!==void 0&&(r=i.NearPlane.value/1e3);let a=1e3;i.FarPlane!==void 0&&(a=i.FarPlane.value/1e3);let o=window.innerWidth,l=window.innerHeight;i.AspectWidth!==void 0&&i.AspectHeight!==void 0&&(o=i.AspectWidth.value,l=i.AspectHeight.value);let h=o/l,c=45;i.FieldOfView!==void 0&&(c=i.FieldOfView.value);let u=i.FocalLength?i.FocalLength.value:null;switch(s){case 0:t=new yt(c,h,r,a),u!==null&&t.setFocalLength(u);break;case 1:console.warn("THREE.FBXLoader: Orthographic cameras not supported yet."),t=new Ze;break;default:console.warn("THREE.FBXLoader: Unknown camera type "+s+"."),t=new Ze;break}}return t}createLight(e){let t,i;if(e.children.forEach(function(s){let r=Oe.Objects.NodeAttribute[s.ID];r!==void 0&&(i=r)}),i===void 0)t=new Ze;else{let s;i.LightType===void 0?s=0:s=i.LightType.value;let r=16777215;i.Color!==void 0&&(r=new he().fromArray(i.Color.value));let a=i.Intensity===void 0?1:i.Intensity.value/100;i.CastLightOnObject!==void 0&&i.CastLightOnObject.value===0&&(a=0);let o=0;i.FarAttenuationEnd!==void 0&&(i.EnableFarAttenuation!==void 0&&i.EnableFarAttenuation.value===0?o=0:o=i.FarAttenuationEnd.value);let l=1;switch(s){case 0:t=new br(r,a,o,l);break;case 1:t=new Us(r,a);break;case 2:let h=Math.PI/3;i.InnerAngle!==void 0&&(h=Rt.degToRad(i.InnerAngle.value));let c=0;i.OuterAngle!==void 0&&(c=Rt.degToRad(i.OuterAngle.value),c=Math.max(c,1)),t=new In(r,a,o,h,c,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+i.LightType.value+", defaulting to a PointLight."),t=new br(r,a);break}i.CastShadows!==void 0&&i.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,i){let s,r=null,a=null,o=[];return e.children.forEach(function(l){t.has(l.ID)&&(r=t.get(l.ID)),i.has(l.ID)&&o.push(i.get(l.ID))}),o.length>1?a=o:o.length>0?a=o[0]:(a=new Ps({name:ci.DEFAULT_MATERIAL_NAME,color:13421772}),o.push(a)),"color"in r.attributes&&o.forEach(function(l){l.vertexColors=!0}),r.FBX_Deformer?(s=new an(r,a),s.normalizeSkinWeights()):s=new nt(r,a),s}createCurve(e,t){let i=e.children.reduce(function(r,a){return t.has(a.ID)&&(r=t.get(a.ID)),r},null),s=new gr({name:ci.DEFAULT_MATERIAL_NAME,color:3342591,linewidth:1});return new cn(i,s)}getTransformData(e,t){let i={};"InheritType"in t&&(i.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?i.eulerOrder=Xn(t.RotationOrder.value):i.eulerOrder=Xn(0),"Lcl_Translation"in t&&(i.translation=t.Lcl_Translation.value),"PreRotation"in t&&(i.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(i.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(i.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(i.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(i.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(i.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(i.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(i.rotationPivot=t.RotationPivot.value),e.userData.transformData=i}setLookAtProperties(e,t){"LookAtProperty"in t&&gt.get(e.ID).children.forEach(function(s){if(s.relationship==="LookAtProperty"){let r=Oe.Objects.Model[s.ID];if("Lcl_Translation"in r){let a=r.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(a),Vt.add(e.target)):e.lookAt(new M().fromArray(a))}}})}bindSkeleton(e,t,i){let s=this.parsePoseNodes();for(let r in e){let a=e[r];gt.get(parseInt(a.ID)).parents.forEach(function(l){if(t.has(l.ID)){let h=l.ID;gt.get(h).parents.forEach(function(u){i.has(u.ID)&&i.get(u.ID).bind(new ln(a.bones),s[u.ID])})}})}}parsePoseNodes(){let e={};if("Pose"in Oe.Objects){let t=Oe.Objects.Pose;for(let i in t)if(t[i].attrType==="BindPose"&&t[i].NbPoseNodes>0){let s=t[i].PoseNode;Array.isArray(s)?s.forEach(function(r){e[r.Node]=new pe().fromArray(r.Matrix.a)}):e[s.Node]=new pe().fromArray(s.Matrix.a)}}return e}addGlobalSceneSettings(){if("GlobalSettings"in Oe){if("AmbientColor"in Oe.GlobalSettings){let e=Oe.GlobalSettings.AmbientColor.value,t=e[0],i=e[1],s=e[2];if(t!==0||i!==0||s!==0){let r=new he().setRGB(t,i,s);Vt.add(new zi(r,1))}}"UnitScaleFactor"in Oe.GlobalSettings&&(Vt.userData.unitScaleFactor=Oe.GlobalSettings.UnitScaleFactor.value)}}},Oc=class{constructor(){this.negativeMaterialIndices=!1}parse(e){let t=new Map;if("Geometry"in Oe.Objects){let i=Oe.Objects.Geometry;for(let s in i){let r=gt.get(parseInt(s)),a=this.parseGeometry(r,i[s],e);t.set(parseInt(s),a)}}return this.negativeMaterialIndices===!0&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),t}parseGeometry(e,t,i){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,i);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,i){let s=i.skeletons,r=[],a=e.parents.map(function(u){return Oe.Objects.Model[u.ID]});if(a.length===0)return;let o=e.children.reduce(function(u,d){return s[d.ID]!==void 0&&(u=s[d.ID]),u},null);e.children.forEach(function(u){i.morphTargets[u.ID]!==void 0&&r.push(i.morphTargets[u.ID])});let l=a[0],h={};"RotationOrder"in l&&(h.eulerOrder=Xn(l.RotationOrder.value)),"InheritType"in l&&(h.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(h.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(h.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(h.scale=l.GeometricScaling.value);let c=Zp(h);return this.genGeometry(t,o,r,c)}genGeometry(e,t,i,s){let r=new We;e.attrName&&(r.name=e.attrName);let a=this.parseGeoNode(e,t),o=this.genBuffers(a),l=new _e(o.vertex,3);if(l.applyMatrix4(s),r.setAttribute("position",l),o.colors.length>0&&r.setAttribute("color",new _e(o.colors,3)),t&&(r.setAttribute("skinIndex",new Ss(o.weightsIndices,4)),r.setAttribute("skinWeight",new _e(o.vertexWeights,4)),r.FBX_Deformer=t),o.normal.length>0){let h=new Ae().getNormalMatrix(s),c=new _e(o.normal,3);c.applyNormalMatrix(h),r.setAttribute("normal",c)}if(o.uvs.forEach(function(h,c){let u=c===0?"uv":`uv${c}`;r.setAttribute(u,new _e(o.uvs[c],2))}),a.material&&a.material.mappingType!=="AllSame"){let h=o.materialIndex[0],c=0;if(o.materialIndex.forEach(function(u,d){u!==h&&(r.addGroup(c,d-c,h),h=u,c=d)}),r.groups.length>0){let u=r.groups[r.groups.length-1],d=u.start+u.count;d!==o.materialIndex.length&&r.addGroup(d,o.materialIndex.length-d,h)}r.groups.length===0&&r.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(r,e,i,s),r}parseGeoNode(e,t){let i={};if(i.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],i.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(i.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(i.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(i.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){i.uv=[];let s=0;for(;e.LayerElementUV[s];)e.LayerElementUV[s].UV&&i.uv.push(this.parseUVs(e.LayerElementUV[s])),s++}return i.weightTable={},t!==null&&(i.skeleton=t,t.rawBones.forEach(function(s,r){s.indices.forEach(function(a,o){i.weightTable[a]===void 0&&(i.weightTable[a]=[]),i.weightTable[a].push({id:r,weight:s.weights[o]})})})),i}genBuffers(e){let t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},i=0,s=0,r=!1,a=[],o=[],l=[],h=[],c=[],u=[],d=this;return e.vertexIndices.forEach(function(m,f){let v,p=!1;m<0&&(m=m^-1,p=!0);let g=[],x=[];if(a.push(m*3,m*3+1,m*3+2),e.color){let y=rl(f,i,m,e.color);l.push(y[0],y[1],y[2])}if(e.skeleton){if(e.weightTable[m]!==void 0&&e.weightTable[m].forEach(function(y){x.push(y.weight),g.push(y.id)}),x.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);let y=[0,0,0,0],_=[0,0,0,0];x.forEach(function(b,S){let E=b,P=g[S];_.forEach(function(D,O,B){if(E>D){B[O]=E,E=D;let V=y[O];y[O]=P,P=V}})}),g=y,x=_}for(;x.length<4;)x.push(0),g.push(0);for(let y=0;y<4;++y)c.push(x[y]),u.push(g[y])}if(e.normal){let y=rl(f,i,m,e.normal);o.push(y[0],y[1],y[2])}e.material&&e.material.mappingType!=="AllSame"&&(v=rl(f,i,m,e.material)[0],v<0&&(d.negativeMaterialIndices=!0,v=0)),e.uv&&e.uv.forEach(function(y,_){let b=rl(f,i,m,y);h[_]===void 0&&(h[_]=[]),h[_].push(b[0]),h[_].push(b[1])}),s++,p&&(d.genFace(t,e,a,v,o,l,h,c,u,s),i++,s=0,a=[],o=[],l=[],h=[],c=[],u=[])}),t}getNormalNewell(e){let t=new M(0,0,0);for(let i=0;i<e.length;i++){let s=e[i],r=e[(i+1)%e.length];t.x+=(s.y-r.y)*(s.z+r.z),t.y+=(s.z-r.z)*(s.x+r.x),t.z+=(s.x-r.x)*(s.y+r.y)}return t.normalize(),t}getNormalTangentAndBitangent(e){let t=this.getNormalNewell(e),s=(Math.abs(t.z)>.5?new M(0,1,0):new M(0,0,1)).cross(t).normalize(),r=t.clone().cross(s).normalize();return{normal:t,tangent:s,bitangent:r}}flattenVertex(e,t,i){return new G(e.dot(t),e.dot(i))}genFace(e,t,i,s,r,a,o,l,h,c){let u;if(c>3){let d=[],m=t.baseVertexPositions||t.vertexPositions;for(let g=0;g<i.length;g+=3)d.push(new M(m[i[g]],m[i[g+1]],m[i[g+2]]));let{tangent:f,bitangent:v}=this.getNormalTangentAndBitangent(d),p=[];for(let g of d)p.push(this.flattenVertex(g,f,v));u=hi.triangulateShape(p,[])}else u=[[0,1,2]];for(let[d,m,f]of u)e.vertex.push(t.vertexPositions[i[d*3]]),e.vertex.push(t.vertexPositions[i[d*3+1]]),e.vertex.push(t.vertexPositions[i[d*3+2]]),e.vertex.push(t.vertexPositions[i[m*3]]),e.vertex.push(t.vertexPositions[i[m*3+1]]),e.vertex.push(t.vertexPositions[i[m*3+2]]),e.vertex.push(t.vertexPositions[i[f*3]]),e.vertex.push(t.vertexPositions[i[f*3+1]]),e.vertex.push(t.vertexPositions[i[f*3+2]]),t.skeleton&&(e.vertexWeights.push(l[d*4]),e.vertexWeights.push(l[d*4+1]),e.vertexWeights.push(l[d*4+2]),e.vertexWeights.push(l[d*4+3]),e.vertexWeights.push(l[m*4]),e.vertexWeights.push(l[m*4+1]),e.vertexWeights.push(l[m*4+2]),e.vertexWeights.push(l[m*4+3]),e.vertexWeights.push(l[f*4]),e.vertexWeights.push(l[f*4+1]),e.vertexWeights.push(l[f*4+2]),e.vertexWeights.push(l[f*4+3]),e.weightsIndices.push(h[d*4]),e.weightsIndices.push(h[d*4+1]),e.weightsIndices.push(h[d*4+2]),e.weightsIndices.push(h[d*4+3]),e.weightsIndices.push(h[m*4]),e.weightsIndices.push(h[m*4+1]),e.weightsIndices.push(h[m*4+2]),e.weightsIndices.push(h[m*4+3]),e.weightsIndices.push(h[f*4]),e.weightsIndices.push(h[f*4+1]),e.weightsIndices.push(h[f*4+2]),e.weightsIndices.push(h[f*4+3])),t.color&&(e.colors.push(a[d*3]),e.colors.push(a[d*3+1]),e.colors.push(a[d*3+2]),e.colors.push(a[m*3]),e.colors.push(a[m*3+1]),e.colors.push(a[m*3+2]),e.colors.push(a[f*3]),e.colors.push(a[f*3+1]),e.colors.push(a[f*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(s),e.materialIndex.push(s),e.materialIndex.push(s)),t.normal&&(e.normal.push(r[d*3]),e.normal.push(r[d*3+1]),e.normal.push(r[d*3+2]),e.normal.push(r[m*3]),e.normal.push(r[m*3+1]),e.normal.push(r[m*3+2]),e.normal.push(r[f*3]),e.normal.push(r[f*3+1]),e.normal.push(r[f*3+2])),t.uv&&t.uv.forEach(function(v,p){e.uvs[p]===void 0&&(e.uvs[p]=[]),e.uvs[p].push(o[p][d*2]),e.uvs[p].push(o[p][d*2+1]),e.uvs[p].push(o[p][m*2]),e.uvs[p].push(o[p][m*2+1]),e.uvs[p].push(o[p][f*2]),e.uvs[p].push(o[p][f*2+1])})}addMorphTargets(e,t,i,s){if(i.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];let r=this;i.forEach(function(a){a.rawTargets.forEach(function(o){let l=Oe.Objects.Geometry[o.geoID];l!==void 0&&r.genMorphGeometry(e,t,l,s,o.name)})})}genMorphGeometry(e,t,i,s,r){let a=t.Vertices!==void 0?t.Vertices.a:[],o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],l=i.Vertices!==void 0?i.Vertices.a:[],h=i.Indexes!==void 0?i.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let v=0;v<h.length;v++){let p=h[v]*3;u[p]=l[v*3],u[p+1]=l[v*3+1],u[p+2]=l[v*3+2]}let d={vertexIndices:o,vertexPositions:u,baseVertexPositions:a},m=this.genBuffers(d),f=new _e(m.vertex,3);f.name=r||i.attrName,f.applyMatrix4(s),e.morphAttributes.position.push(f)}parseNormals(e){let t=e.MappingInformationType,i=e.ReferenceInformationType,s=e.Normals.a,r=[];return i==="IndexToDirect"&&("NormalIndex"in e?r=e.NormalIndex.a:"NormalsIndex"in e&&(r=e.NormalsIndex.a)),{dataSize:3,buffer:s,indices:r,mappingType:t,referenceType:i}}parseUVs(e){let t=e.MappingInformationType,i=e.ReferenceInformationType,s=e.UV.a,r=[];return i==="IndexToDirect"&&(r=e.UVIndex.a),{dataSize:2,buffer:s,indices:r,mappingType:t,referenceType:i}}parseVertexColors(e){let t=e.MappingInformationType,i=e.ReferenceInformationType,s=e.Colors.a,r=[];i==="IndexToDirect"&&(r=e.ColorIndex.a);for(let a=0,o=new he;a<s.length;a+=4)o.fromArray(s,a),Ve.toWorkingColorSpace(o,Pt),o.toArray(s,a);return{dataSize:4,buffer:s,indices:r,mappingType:t,referenceType:i}}parseMaterialIndices(e){let t=e.MappingInformationType,i=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:i};let s=e.Materials.a,r=[];for(let a=0;a<s.length;++a)r.push(a);return{dataSize:1,buffer:s,indices:r,mappingType:t,referenceType:i}}parseNurbsGeometry(e){let t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new We;let i=t-1,s=e.KnotVector.a,r=[],a=e.Points.a;for(let u=0,d=a.length;u<d;u+=4)r.push(new Ie().fromArray(a,u));let o,l;if(e.Form==="Closed")r.push(r[0]);else if(e.Form==="Periodic"){o=i,l=s.length-1-o;for(let u=0;u<i;++u)r.push(r[u])}let c=new sl(i,s,r,o,l).getPoints(r.length*12);return new We().setFromPoints(c)}},kc=class{parse(){let e=[],t=this.parseClips();if(t!==void 0)for(let i in t){let s=t[i],r=this.addClip(s);e.push(r)}return e}parseClips(){if(Oe.Objects.AnimationCurve===void 0)return;let e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);let t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){let e=Oe.Objects.AnimationCurveNode,t=new Map;for(let i in e){let s=e[i];if(s.attrName.match(/S|R|T|DeformPercent/)!==null){let r={id:s.id,attr:s.attrName,curves:{}};t.set(r.id,r)}}return t}parseAnimationCurves(e){let t=Oe.Objects.AnimationCurve;for(let i in t){let s={id:t[i].id,times:t[i].KeyTime.a.map(Qv),values:t[i].KeyValueFloat.a},r=gt.get(s.id);if(r!==void 0){let a=r.parents[0].ID,o=r.parents[0].relationship;o.match(/X/)?e.get(a).curves.x=s:o.match(/Y/)?e.get(a).curves.y=s:o.match(/Z/)?e.get(a).curves.z=s:o.match(/DeformPercent/)&&e.has(a)&&(e.get(a).curves.morph=s)}}}parseAnimationLayers(e){let t=Oe.Objects.AnimationLayer,i=new Map;for(let s in t){let r=[],a=gt.get(parseInt(s));a!==void 0&&(a.children.forEach(function(l,h){if(e.has(l.ID)){let c=e.get(l.ID);if(c.curves.x!==void 0||c.curves.y!==void 0||c.curves.z!==void 0){if(r[h]===void 0){let u=gt.get(l.ID).parents.filter(function(d){return d.relationship!==void 0})[0].ID;if(u!==void 0){let d=Oe.Objects.Model[u.toString()];if(d===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}let m={modelName:d.attrName?Xe.sanitizeNodeName(d.attrName):"",ID:d.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Vt.traverse(function(f){f.ID===d.id&&(m.transform=f.matrix,f.userData.transformData&&(m.eulerOrder=f.userData.transformData.eulerOrder))}),m.transform||(m.transform=new pe),"PreRotation"in d&&(m.preRotation=d.PreRotation.value),"PostRotation"in d&&(m.postRotation=d.PostRotation.value),r[h]=m}}r[h]&&(r[h][c.attr]=c)}else if(c.curves.morph!==void 0){if(r[h]===void 0){let u=gt.get(l.ID).parents.filter(function(g){return g.relationship!==void 0})[0].ID,d=gt.get(u).parents[0].ID,m=gt.get(d).parents[0].ID,f=gt.get(m).parents[0].ID,v=Oe.Objects.Model[f],p={modelName:v.attrName?Xe.sanitizeNodeName(v.attrName):"",morphName:Oe.Objects.Deformer[u].attrName};r[h]=p}r[h][c.attr]=c}}}),i.set(parseInt(s),r))}return i}parseAnimStacks(e){let t=Oe.Objects.AnimationStack,i={};for(let s in t){let r=gt.get(parseInt(s)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");let a=e.get(r[0].ID);i[s]={name:t[s].attrName,layer:a}}return i}addClip(e){let t=[],i=this;return e.layer.forEach(function(s){t=t.concat(i.generateTracks(s))}),new Ds(e.name,-1,t)}generateTracks(e){let t=[],i=new M,s=new M;if(e.transform&&e.transform.decompose(i,new Ue,s),i=i.toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){let r=this.generateVectorTrack(e.modelName,e.T.curves,i,"position");r!==void 0&&t.push(r)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){let r=this.generateRotationTrack(e.modelName,e.R.curves,e.preRotation,e.postRotation,e.eulerOrder);r!==void 0&&t.push(r)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){let r=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");r!==void 0&&t.push(r)}if(e.DeformPercent!==void 0){let r=this.generateMorphTrack(e);r!==void 0&&t.push(r)}return t}generateVectorTrack(e,t,i,s){let r=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(r,t,i);return new Vi(e+"."+s,r,a)}generateRotationTrack(e,t,i,s,r){let a,o;if(t.x!==void 0&&t.y!==void 0&&t.z!==void 0){let d=this.interpolateRotations(t.x,t.y,t.z,r);a=d[0],o=d[1]}let l=Xn(0);i!==void 0&&(i=i.map(Rt.degToRad),i.push(l),i=new Ye().fromArray(i),i=new Ue().setFromEuler(i)),s!==void 0&&(s=s.map(Rt.degToRad),s.push(l),s=new Ye().fromArray(s),s=new Ue().setFromEuler(s).invert());let h=new Ue,c=new Ye,u=[];if(!o||!a)return new _i(e+".quaternion",[0],[0]);for(let d=0;d<o.length;d+=3)c.set(o[d],o[d+1],o[d+2],r),h.setFromEuler(c),i!==void 0&&h.premultiply(i),s!==void 0&&h.multiply(s),d>2&&new Ue().fromArray(u,(d-3)/3*4).dot(h)<0&&h.set(-h.x,-h.y,-h.z,-h.w),h.toArray(u,d/3*4);return new _i(e+".quaternion",a,u)}generateMorphTrack(e){let t=e.DeformPercent.curves.morph,i=t.values.map(function(r){return r/100}),s=Vt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Gi(e.modelName+".morphTargetInfluences["+s+"]",t.times,i)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(i,s){return i-s}),t.length>1){let i=1,s=t[0];for(let r=1;r<t.length;r++){let a=t[r];a!==s&&(t[i]=a,s=a,i++)}t=t.slice(0,i)}return t}getKeyframeTrackValues(e,t,i){let s=i,r=[],a=-1,o=-1,l=-1;return e.forEach(function(h){if(t.x&&(a=t.x.times.indexOf(h)),t.y&&(o=t.y.times.indexOf(h)),t.z&&(l=t.z.times.indexOf(h)),a!==-1){let c=t.x.values[a];r.push(c),s[0]=c}else r.push(s[0]);if(o!==-1){let c=t.y.values[o];r.push(c),s[1]=c}else r.push(s[1]);if(l!==-1){let c=t.z.values[l];r.push(c),s[2]=c}else r.push(s[2])}),r}interpolateRotations(e,t,i,s){let r=[],a=[];r.push(e.times[0]),a.push(Rt.degToRad(e.values[0])),a.push(Rt.degToRad(t.values[0])),a.push(Rt.degToRad(i.values[0]));for(let o=1;o<e.values.length;o++){let l=[e.values[o-1],t.values[o-1],i.values[o-1]];if(isNaN(l[0])||isNaN(l[1])||isNaN(l[2]))continue;let h=l.map(Rt.degToRad),c=[e.values[o],t.values[o],i.values[o]];if(isNaN(c[0])||isNaN(c[1])||isNaN(c[2]))continue;let u=c.map(Rt.degToRad),d=[c[0]-l[0],c[1]-l[1],c[2]-l[2]],m=[Math.abs(d[0]),Math.abs(d[1]),Math.abs(d[2])];if(m[0]>=180||m[1]>=180||m[2]>=180){let v=Math.max(...m)/180,p=new Ye(...h,s),g=new Ye(...u,s),x=new Ue().setFromEuler(p),y=new Ue().setFromEuler(g);x.dot(y)&&y.set(-y.x,-y.y,-y.z,-y.w);let _=e.times[o-1],b=e.times[o]-_,S=new Ue,E=new Ye;for(let P=0;P<1;P+=1/v)S.copy(x.clone().slerp(y.clone(),P)),r.push(_+P*b),E.setFromQuaternion(S,s),a.push(E.x),a.push(E.y),a.push(E.z)}else r.push(e.times[o]),a.push(Rt.degToRad(e.values[o])),a.push(Rt.degToRad(t.values[o])),a.push(Rt.degToRad(i.values[o]))}return[r,a]}},Nc=class{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new al,this.nodeStack=[],this.currentProp=[],this.currentPropName="";let t=this,i=e.split(/[\r\n]+/);return i.forEach(function(s,r){let a=s.match(/^[\s\t]*;/),o=s.match(/^[\s\t]*$/);if(a||o)return;let l=s.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),h=s.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),c=s.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(s,l):h?t.parseNodeProperty(s,h,i[++r]):c?t.popStack():s.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(s)}),this.allNodes}parseNodeBegin(e,t){let i=t[1].trim().replace(/^"/,"").replace(/"$/,""),s=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:i},a=this.parseNodeAttr(s),o=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(i,r):i in o?(i==="PoseNode"?o.PoseNode.push(r):o[i].id!==void 0&&(o[i]={},o[i][o[i].id]=o[i]),a.id!==""&&(o[i][a.id]=r)):typeof a.id=="number"?(o[i]={},o[i][a.id]=r):i!=="Properties70"&&(i==="PoseNode"?o[i]=[r]:o[i]=r),typeof a.id=="number"&&(r.id=a.id),a.name!==""&&(r.attrName=a.name),a.type!==""&&(r.attrType=a.type),this.pushStack(r)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let i="",s="";return e.length>1&&(i=e[1].replace(/^(\w+)::/,""),s=e[2]),{id:t,name:i,type:s}}parseNodeProperty(e,t,i){let s=t[1].replace(/^"/,"").replace(/"$/,"").trim(),r=t[2].replace(/^"/,"").replace(/"$/,"").trim();s==="Content"&&r===","&&(r=i.replace(/"/g,"").replace(/,$/,"").trim());let a=this.getCurrentNode();if(a.name==="Properties70"){this.parseNodeSpecialProperty(e,s,r);return}if(s==="C"){let l=r.split(",").slice(1),h=parseInt(l[0]),c=parseInt(l[1]),u=r.split(",").slice(3);u=u.map(function(d){return d.trim().replace(/^"/,"")}),s="connections",r=[h,c],$v(r,u),a[s]===void 0&&(a[s]=[])}s==="Node"&&(a.id=r),s in a&&Array.isArray(a[s])?a[s].push(r):s!=="a"?a[s]=r:a.a=r,this.setCurrentProp(a,s),s==="a"&&r.slice(-1)!==","&&(a.a=Fc(r))}parseNodePropertyContinued(e){let t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Fc(t.a))}parseNodeSpecialProperty(e,t,i){let s=i.split('",').map(function(c){return c.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=s[0],a=s[1],o=s[2],l=s[3],h=s[4];switch(a){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":h=parseFloat(h);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":h=Fc(h);break}this.getPrevNode()[r]={type:a,type2:o,flag:l,value:h},this.setCurrentProp(this.getPrevNode(),r)}},Gc=class{parse(e){let t=new nl(e);t.skip(23);let i=t.getUint32();if(i<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+i);let s=new al;for(;!this.endOfContent(t);){let r=this.parseNode(t,i);r!==null&&s.add(r.name,r)}return s}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){let i={},s=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();let a=e.getUint8(),o=e.getString(a);if(s===0)return null;let l=[];for(let d=0;d<r;d++)l.push(this.parseProperty(e));let h=l.length>0?l[0]:"",c=l.length>1?l[1]:"",u=l.length>2?l[2]:"";for(i.singleProperty=r===1&&e.getOffset()===s;s>e.getOffset();){let d=this.parseNode(e,t);d!==null&&this.parseSubNode(o,i,d)}return i.propertyList=l,typeof h=="number"&&(i.id=h),c!==""&&(i.attrName=c),u!==""&&(i.attrType=u),o!==""&&(i.name=o),i}parseSubNode(e,t,i){if(i.singleProperty===!0){let s=i.propertyList[0];Array.isArray(s)?(t[i.name]=i,i.a=s):t[i.name]=s}else if(e==="Connections"&&i.name==="C"){let s=[];i.propertyList.forEach(function(r,a){a!==0&&s.push(r)}),t.connections===void 0&&(t.connections=[]),t.connections.push(s)}else if(i.name==="Properties70")Object.keys(i).forEach(function(r){t[r]=i[r]});else if(e==="Properties70"&&i.name==="P"){let s=i.propertyList[0],r=i.propertyList[1],a=i.propertyList[2],o=i.propertyList[3],l;s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),r==="Color"||r==="ColorRGB"||r==="Vector"||r==="Vector3D"||r.indexOf("Lcl_")===0?l=[i.propertyList[4],i.propertyList[5],i.propertyList[6]]:l=i.propertyList[4],t[s]={type:r,type2:a,flag:o,value:l}}else t[i.name]===void 0?typeof i.id=="number"?(t[i.name]={},t[i.name][i.id]=i):t[i.name]=i:i.name==="PoseNode"?(Array.isArray(t[i.name])||(t[i.name]=[t[i.name]]),t[i.name].push(i)):t[i.name][i.id]===void 0&&(t[i.name][i.id]=i)}parseProperty(e){let t=e.getString(1),i;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return i=e.getUint32(),e.getArrayBuffer(i);case"S":return i=e.getUint32(),e.getString(i);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":let s=e.getUint32(),r=e.getUint32(),a=e.getUint32();if(r===0)switch(t){case"b":case"c":return e.getBooleanArray(s);case"d":return e.getFloat64Array(s);case"f":return e.getFloat32Array(s);case"i":return e.getInt32Array(s);case"l":return e.getInt64Array(s)}let o=jp(new Uint8Array(e.getArrayBuffer(a))),l=new nl(o.buffer);switch(t){case"b":case"c":return l.getBooleanArray(s);case"d":return l.getFloat64Array(s);case"f":return l.getFloat32Array(s);case"i":return l.getInt32Array(s);case"l":return l.getInt64Array(s)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}},nl=class{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0,this._textDecoder=new TextDecoder}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){let t=[];for(let i=0;i<e;i++)t.push(this.getBoolean());return t}getUint8(){let e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){let e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){let e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){let t=[];for(let i=0;i<e;i++)t.push(this.getInt32());return t}getUint32(){let e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){let t=[];for(let i=0;i<e;i++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){let e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){let t=[];for(let i=0;i<e;i++)t.push(this.getFloat32());return t}getFloat64(){let e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){let t=[];for(let i=0;i<e;i++)t.push(this.getFloat64());return t}getArrayBuffer(e){let t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=this.offset,i=new Uint8Array(this.dv.buffer,t,e);this.skip(e);let s=i.indexOf(0);return s>=0&&(i=new Uint8Array(this.dv.buffer,t,s)),this._textDecoder.decode(i)}},al=class{add(e,t){this[e]=t}};function Kv(n){let e="Kaydara FBX Binary  \0";return n.byteLength>=e.length&&e===Qp(n,0,e.length)}function Zv(n){let e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],t=0;function i(s){let r=n[s-1];return n=n.slice(t+s),t++,r}for(let s=0;s<e.length;++s)if(i(1)===e[s])return!1;return!0}function Kp(n){let e=/FBXVersion: (\d+)/,t=n.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function Qv(n){return n/46186158e3}var Jv=[];function rl(n,e,t,i){let s;switch(i.mappingType){case"ByPolygonVertex":s=n;break;case"ByPolygon":s=e;break;case"ByVertice":s=t;break;case"AllSame":s=i.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+i.mappingType)}i.referenceType==="IndexToDirect"&&(s=i.indices[s]);let r=s*i.dataSize,a=r+i.dataSize;return e0(Jv,i.buffer,r,a)}var Uc=new Ye,Rr=new M;function Zp(n){let e=new pe,t=new pe,i=new pe,s=new pe,r=new pe,a=new pe,o=new pe,l=new pe,h=new pe,c=new pe,u=new pe,d=new pe,m=n.inheritType?n.inheritType:0;n.translation&&e.setPosition(Rr.fromArray(n.translation));let f=Xn(0);if(n.preRotation){let B=n.preRotation.map(Rt.degToRad);B.push(f),t.makeRotationFromEuler(Uc.fromArray(B))}if(n.rotation){let B=n.rotation.map(Rt.degToRad);B.push(n.eulerOrder||f),i.makeRotationFromEuler(Uc.fromArray(B))}if(n.postRotation){let B=n.postRotation.map(Rt.degToRad);B.push(f),s.makeRotationFromEuler(Uc.fromArray(B)),s.invert()}n.scale&&r.scale(Rr.fromArray(n.scale)),n.scalingOffset&&o.setPosition(Rr.fromArray(n.scalingOffset)),n.scalingPivot&&a.setPosition(Rr.fromArray(n.scalingPivot)),n.rotationOffset&&l.setPosition(Rr.fromArray(n.rotationOffset)),n.rotationPivot&&h.setPosition(Rr.fromArray(n.rotationPivot)),n.parentMatrixWorld&&(u.copy(n.parentMatrix),c.copy(n.parentMatrixWorld));let v=t.clone().multiply(i).multiply(s),p=new pe;p.extractRotation(c);let g=new pe;g.copyPosition(c);let x=g.clone().invert().multiply(c),y=p.clone().invert().multiply(x),_=r,b=new pe;if(m===0)b.copy(p).multiply(v).multiply(y).multiply(_);else if(m===1)b.copy(p).multiply(y).multiply(v).multiply(_);else{let V=new pe().scale(new M().setFromMatrixScale(u)).clone().invert(),j=y.clone().multiply(V);b.copy(p).multiply(v).multiply(j).multiply(_)}let S=h.clone().invert(),E=a.clone().invert(),P=e.clone().multiply(l).multiply(h).multiply(t).multiply(i).multiply(s).multiply(S).multiply(o).multiply(a).multiply(r).multiply(E),D=new pe().copyPosition(P),O=c.clone().multiply(D);return d.copyPosition(O),P=d.clone().multiply(b),P.premultiply(c.invert()),P}function Xn(n){n=n||0;let e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return n===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[n]}function Fc(n){return n.split(",").map(function(t){return parseFloat(t)})}function Qp(n,e,t){return e===void 0&&(e=0),t===void 0&&(t=n.byteLength),new TextDecoder().decode(new Uint8Array(n,e,t))}function $v(n,e){for(let t=0,i=n.length,s=e.length;t<s;t++,i++)n[i]=e[t]}function e0(n,e,t,i){for(let s=t,r=0;s<i;s++,r++)n[r]=e[s];return n}var ti={NONE:0,ERROR:1,WARN:2,INFO:3},qn={OFF:0,LOW:1,MEDIUM:2,HIGH:3},ol={OFF:0,VAPOR:1},t0={OFF:0,BASIC:1,SOFT:2},ge={FLOOR:0,WALL:1,WALL_TOP:2,CEILING:3,PORTAL_WARP:4,ROOM_WARP:5,ITEM:6,SCRIPTED:7,HOVERABLE:8,CLICKABLE:9},i0={MOVE:0,ROTATE:1,JUMP:2,FALL:3,LANDED:4,COLLISION:5},Vc={KEEP:0,sRGB_TO_LINEAR:1,LINEAR_TO_sRGB:2,WINDOWS_TO_UNIX:3,UNIX_TO_WINDOWS:4,LINEAR_TO_WINDOWS:5,WINDOWS_TO_LINEAR:6,LINEAR_TO_UNIX:7,UNIX_TO_LINEAR:8},wt={VERBOSE_LEVEL:ti,ANTI_ALIASING:qn,SKY_HAZE:ol,SHADOW_MAP:t0,CAMERA_EVENT:i0,COLLIDER_TYPE:ge,COLOR_SHIFT:Vc};var qi=class{constructor(e={}){this.pxlTimer=null,this.pxlUtils=null,this.pxlQuality=null,this.pxlVideo=null,this.pxlCamera=null,this.pxlAutoCam=null,this.pxlUser=null,this.pxlEnv=null,this.pxlAnim=null,this.pxlDevice=null,this.pxlShaders=null,this.pxlColliders=null,this.options={},this.runDebugger=!1,this.assetRoot=this.findInDict(e,"assetRoot","images/assets/"),this.guiRoot=this.findInDict(e,"guiRoot","images/GUI/"),this.roomRoot=this.findInDict(e,"roomRoot","images/rooms/"),this.vidRoot=this.findInDict(e,"vidRoot","images/screenContent/"),this.workerList=[],this.oneTwoPFour=1/2.4,this.twelvePNineTwoDiv=1/12.92,this.onePOFiveFiveDiv=1/1.055}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlUtils=e.pxlUtils,this.pxlQuality=e.pxlQuality,this.pxlVideo=e.pxlVideo,this.pxlCamera=e.pxlCamera,this.pxlAutoCam=e.pxlAutoCam,this.pxlUser=e.pxlUser,this.pxlEnv=e.pxlEnv,this.pxlAnim=e.pxlAnim,this.pxlDevice=e.pxlDevice,this.pxlShaders=e.pxlShaders,this.pxlColliders=e.pxlColliders,this.options=e.options}log(...e){this.runDebugger&&(console.log("---"),e.forEach(t=>{console.log(t)}))}toggleDebugger(e=null){e||(e=!this.runDebugger),this.runDebugger=e}findInDict(e,t,i){return e.hasOwnProperty(t)?e[t]:(e[t]=i,i)}convertVertColor(e,t=Vc.KEEP){if(e.geometry&&e.geometry.attributes&&e.geometry.attributes.color){let i=e.geometry.attributes.color;for(let s=0;s<i.count;++s){let r=new he().fromBufferAttribute(i,s);this.pxlUtils.convertColor(r,t),i.setXYZ(s,r.r,r.g,r.b)}i.needsUpdate=!0}}checkForUserData(e,t,i){if(i.hasOwnProperty("userData")){if(i.hasOwnProperty("material")&&(i.userData.hasOwnProperty("doubleSided")&&i.userData.doubleSided?i.material.side=Je:i.material.side=ft),i.userData.hasOwnProperty("GlowPass")&&i.userData.GlowPass&&(e.geoList.GlowPass||(e.geoList.GlowPass=[]),e.geoList.GlowPass.push(i)),i.userData.hasOwnProperty("GlowPassMask")&&i.userData.GlowPass&&(e.geoList.GlowPassMask||(e.geoList.GlowPassMask=[]),e.geoList.GlowPassMask.push(i)),i.userData.hasOwnProperty("castShadow")&&i.userData.castShadow&&(i.castShadow=!0),i.userData.hasOwnProperty("receiveShadow")&&i.userData.receiveShadow&&(i.receiveShadow=!0),i.userData.hasOwnProperty("Shader")&&i.userData.Shader!=""){let s=i.userData.Shader.trim();e.shaderGeoList||(e.shaderGeoList={}),e.shaderGeoList[i.name]=i}i.userData.hasOwnProperty("Emitter")&&i.userData.Emitter!=""&&(e.emitterList||(e.emitterList={}),e.emitterList[i.userData.Emitter]||(e.emitterList[i.userData.Emitter]={},e.emitterList[i.userData.Emitter].Emitter=[],e.emitterList[i.userData.Emitter].Particles=[]),e.emitterList[i.userData.Emitter].Emitter.push(i)),i.userData.hasOwnProperty("Hover")&&i.userData.Hover&&(e.hasHoverables=!0,e.hoverableList.push(i)),i.userData.hasOwnProperty("Click")&&i.userData.Click&&(e.hasClickables=!0,e.clickableList.push(i)),this.checkObjectInstancing(e,t,i),i.userData.hasOwnProperty("Scripted")&&(e.geoList.hasOwnProperty("Scripted")||(e.geoList.Scripted={}),e.geoList.Scripted[i.name]=i,i.children.forEach(r=>{if(r.name.includes("Geo")){let a=i.position,o=i.rotation,l=i.scale;r.position.set(a.x,a.y,a.z),r.rotation.set(o.x,o.y,o.z),r.scale.set(l.x,l.y,l.z),r.updateMatrix(),r.children.forEach(c=>{this.checkForUserData(e,t,c),c.type=="Group"&&(c.position.set(a.x+c.position.x,a.y+c.position.y,a.z+c.position.z),c.rotation.set(o.x,o.y,o.z),c.scale.set(l.x,l.y,l.z)),c.updateMatrix()})}else if(r.name.includes("Colliders")){let a=i.position,o=i.rotation,l=i.scale;r.position.set(a.x,a.y,a.z),r.rotation.set(o.x,o.y,o.z),r.scale.set(l.x,l.y,l.z),r.updateMatrix(),r.visible=!1}}))}}canAppendChildren(e,t){if(t.type!="Group")return!1;let i=!0;return e.geoList.hasOwnProperty("Scripted")&&e.geoList.Scripted.hasOwnProperty(t.name)&&(i=!1),i}canAddToScene(e,t){let i=!0;return t.hasOwnProperty("userData")&&t.userData.hasOwnProperty("Instance")&&e.hasOwnProperty("baseInstancesNames")&&e.baseInstancesNames.hasOwnProperty(t.userData.Instance)&&(i=!1),i}checkIsGlassLiquid(e,t,i,s){let r=!1;if(i.userData.hasOwnProperty("isGlass")&&i.userData.isGlass&&(r=!0),i.userData.hasOwnProperty("isLiquid")&&i.userData.isLiquid&&(r=!0),!r)return!1;if(this.log("Glass Detected - ",i.name),!e.glassGroup){let m=new bt;e.glassGroup=m,t.add(m)}let a=i.material.clone();i.material=a,i.material.transparent=!0,i.material.opacity=.5,i.material.shininess=20,i.material.specular=i.material.color.clone(),i.material.specular.r=i.material.specular.r*.5+.1,i.material.specular.g=i.material.specular.g*.5+.1,i.material.specular.b=i.material.specular.b*.5+.1,i.material.side=At,i.material.depthWrite=!1,i.matrixAutoUpdate=!1,i.renderOrder=1+e.glassList.length,e.glassList.push(i),e.glassGroup.add(i);let o=i.geometry.clone(),l=i.material.clone();l.copy(i.material);let h=new nt(o,l);h.name=i.name+"_Front",h.material.shininess=40,h.material.side=ft,h.matrixAutoUpdate=!1,h.renderOrder=1+e.glassList.length;let c=i.position,u=i.rotation,d=i.scale;return h.rotation.set(u.x,u.y,u.z),h.position.set(c.x,c.y,c.z),h.scale.set(d.x,d.y,d.z),h.updateMatrix(),i.parent.add(h),e.glassList.push(h),e.glassGroup.add(h),r}checkObjectInstancing(e,t,i){if(!e.hasOwnProperty("baseInstancesNames")||!e.hasOwnProperty("baseInstancesList"))return!1;if(i.hasOwnProperty("userData")&&i.userData.hasOwnProperty("Instance")&&e.baseInstancesList.hasOwnProperty(i.userData.Instance)){let s=i.name;this.log("Generate Instance - ",s),e.geoList.hasOwnProperty("InstanceObjects")||(e.geoList.InstanceObjects={});let r=i.position,a=i.rotation,o=i.scale,l=e.baseInstancesList[i.userData.Instance];if(i.type=="Mesh"){let h=new pe,c=new M,u=new M,d=new Ue,m=new M(1,1,1),f=i.geometry.attributes.hasOwnProperty("color"),v={},p=[];for(let g=0;g<i.geometry.attributes.position.count;++g){c.fromBufferAttribute(i.geometry.attributes.position,g);let x=c.toArray();if(x=x.join(","),!v.hasOwnProperty(x)){u.fromBufferAttribute(i.geometry.attributes.normal,g);let y=new Ye(0,Math.random()*2*Math.PI,0);d.setFromEuler(y);let _=m;if(f){let b=i.geometry.attributes.color.getX(g);_=new M(b,b,b)}h.compose(c,d,_),p.push(h.clone()),v[x]=!0}}if(p.length>0){let g=new fr(l.geometry,l.material,p.length);g.instanceMatrix.setUsage(Yo),g.name=s+"Geo";for(let x=0;x<p.length;++x)g.setMatrixAt(x,p[x]);g.visible=!0,g.updateMatrix(),e.geoList.InstanceObjects[s]=g,i.parent.add(g)}i.visible=!1,i.parent.remove(i)}else{let h=new fr(l.geometry,l.material,1);h.instanceMatrix.setUsage(Yo),h.name=s+"Geo";let c=!1;if(i.userData.hasOwnProperty("fixInstMatrix")&&(c=!!i.userData.fixInstMatrix),c)h.rotation.set(a.x,a.y,a.z),h.position.set(r.x,r.y,r.z),h.scale.set(o.x,o.y,o.z);else{let u=new pe;u.compose(r,new Ue().setFromEuler(a),o),h.setMatrixAt(0,u)}h.visible=!0,h.updateMatrix(),e.geoList.InstanceObjects[s]=h,i.parent.add(h),i.visible=!1,i.parent.remove(i)}}}loadSceneFBX(e,t,i,s,r,a){r!=""&&(this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[r]=0);let o=0,l=0;var h=new Xs;return h.load(e,c=>{let u=c.children,d={},m=[];u.forEach((f,v)=>{m.push(f.name),d[f.name]=v}),m.forEach(f=>{if(f.includes("Camera")&&(u[d[f]].children.forEach((p,g)=>{if(p.matrixAutoUpdate=!1,p.name.includes("Position")){let x=p.position.clone();this.pxlCamera.cameraPrevPos=x.clone(),this.pxlCamera.camera.position.copy(x),this.pxlCamera.cameraPos.copy(x),this.pxlCamera.camera.updateMatrixWorld(),this.pxlCamera.cameraBooted=!0,this.pxlEnv.camInitPos=x,this.pxlEnv.camThumbPos=this.pxlEnv.camThumbPos.clone().add(x.clone())}else if(p.name.includes("LookAt")){let x=p.position.clone();this.pxlCamera.cameraAimTarget.position.copy(x),this.pxlCamera.camera.lookAt(x),this.pxlCamera.camera.updateMatrixWorld(),this.pxlCamera.cameraPrevLookAt=new M,this.pxlEnv.camInitLookAt=x,this.pxlEnv.camThumbLookAt=this.pxlEnv.camThumbLookAt.clone().add(x.clone())}else if(p.name.includes("ReturnPosition")){let x=p.position.clone();this.pxlEnv.camReturnPos=x}else if(p.name.includes("ReturnLookAt")){let x=p.position.clone();this.pxlEnv.camReturnLookAt=x}}),this.pxlDevice.touchMouseData.initialQuat=this.pxlCamera.camera.quaternion.clone()),f.includes("Items")){let v=u[d[f]].children,p=null,g=null,x=null,y=null,_=null;for(;v.length>0;){let b=v.pop();b.type=="Group"&&(b.children.forEach(E=>{E.name.includes("Item")?(b.name.includes("LowGravity")?(g==null&&(g=new we({uniforms:{color:{value:E.material.emissive.clone()},alphaMap:{type:"t",value:E.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.objects.itemVert(),fragmentShader:this.pxlShaders.objects.itemFrag(),transparent:!0,side:Je,depthTest:!0,depthWrite:!1})),E.material=g):b.name.includes("LizardKing")?(x==null&&(x=E.material.clone(),x.emissiveMap=x.map,x.emissive=new he(8421504)),E.material=x):b.name.includes("StarField")||b.name.includes("InfinityZoom")&&(y==null&&(y=new we({uniforms:{color:{value:E.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.objects.itemZoomFrag(),transparent:!0,side:Je,depthTest:!0,depthWrite:!0})),E.material=y),this.pxlUser.itemList[b.name]=E):E.name.includes("ItemBase")&&(p==null&&(p=new we({uniforms:{color:{value:E.material.emissive.clone()},alphaMap:{type:"t",value:E.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemBaseRotateRate}},vertexShader:this.pxlShaders.objects.itemBaseVert(),fragmentShader:this.pxlShaders.objects.itemBaseFrag(),transparent:!0,side:Je,depthTest:!0,depthWrite:!1})),E.material=p,this.pxlUser.itemBaseList.push(E))}),a[0].add(b),this.pxlUser.itemGroupList[b.name]=b,this.pxlUser.itemListNames.push(b.name))}}}),r!=""&&(this.pxlEnv.geoList[r]=c,this.pxlEnv.geoLoadList[r]=1),this.pxlEnv.geoLoadList[r]=1},void 0,c=>{r!=""&&(this.pxlEnv.geoLoadList[r]=1)}),h}loadRoomFBX(e,t=null,i=null,s=!1){s?this.runDebugger=!0:this.runDebugger=!1,i==null&&(i=e.getName()),t||(t=e.sceneFile);let r=e.sceneFile,a=e.materialList;this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[i]=0;let o=0,l=e.scene;var h=new Xs;return h.load(r,c=>{let u=c.children,d={},m=[];u.forEach((v,p)=>{let g=v.name.split("_")[0];m.push(g),d[g]=p});let f=0;if(m.indexOf("Camera")>-1){let v=[];this.log("Camera - ",u[d.Camera]);let p=!1;u[d.Camera].children.forEach((y,_)=>{y.name.includes("Position")||y.name.includes("LookAt")||y.name.includes("ReturnPosition")||y.name.includes("ReturnLookAt")?(v.push(y),p=!0):y.children.length>0&&v.push(...y.children)}),v.forEach((y,_)=>{y.matrixAutoUpdate=!1;let b=y.parent.name;if(b==u[d.Camera].name&&(b="Default"),e.camLocation.hasOwnProperty(b)||(e.camLocation[b]={},e.camLocation[b].Position=new M(0,0,-10),e.camLocation[b].LookAt=new M(0,0,0)),y.name.includes("PositionMobile")){let S=y.position.clone();e.cameraBooted=!0,e.camInitPos=S,e.camLocation[b].PositionMobile=S}else if(y.name.includes("LookAtMobile")){let S=y.position.clone();e.camInitLookAt=S,e.camLocation[b].LookAtMobile=S}else if(y.name.includes("Position")){let S=y.position.clone();e.cameraBooted=!0,e.camInitPos=S,e.camLocation[b].Position=S}else if(y.name.includes("LookAt")){let S=y.position.clone();e.camInitLookAt=S,e.camLocation[b].LookAt=S}else if(y.name.includes("ReturnPosition")){let S=y.position.clone();e.camReturnPos=S,e.camLocation[b].ReturnPosition=S}else if(y.name.includes("ReturnLookAt")){let S=y.position.clone();e.camReturnLookAt=S,e.camLocation[b].ReturnLookAt=S}}),Object.keys(e.camLocation).forEach(y=>{let _=e.camLocation[y];_.hasOwnProperty("PositionMobile")||(_.PositionMobile=_.Position),_.hasOwnProperty("LookAtMobile")||(_.LookAtMobile=_.LookAt)})}if(m.indexOf("AutoCamPaths")>-1){let v=u[d.AutoCamPaths].children;for(this.log("AutoCamPaths - ",u[d.AutoCamPaths]),this.pxlAutoCam.autoCamPaths[e.getName()]=[];v.length>0;){let p=v.pop();if(p.type=="Group"){let g={};p.children.forEach(y=>{y.matrixAutoUpdate=!1,g[y.name]=y}),p.visible=!1,p.matrixAutoUpdate=!1,l.add(p),this.pxlAutoCam.autoCamPaths[e.getName()].push(g)}}}if(m.indexOf("Instances")>-1&&this.pxlQuality.detailLimit==0){let v=[...u[d.Instances].children];if(this.log("Instances - ",u[d.Instances]),v.length>0){e.hasOwnProperty("baseInstancesNames")||(e.baseInstancesNames=[]),e.hasOwnProperty("baseInstancesList")||(e.baseInstancesList={});let p=[];v.forEach((g,x)=>{if(this.checkForUserData(e,l,g),console.log(g),a.hasOwnProperty(g.name)){let y=null;g.material.map&&(y=g.material.map),g.material=a[g.name],y&&(g.material.uniforms.hasOwnProperty("diffuse")&&(g.material.uniforms.diffuse.value=y),g.material.hasOwnProperty("emissiveMap")&&(g.material.emissiveMap=y,g.material.emissive.r>0&&(g.material.emissiveIntensity=g.material.emissive.r))),g.matrixAutoUpdate=!1}else if(g.material.map&&!g.material.emissiveMap&&g.material.color.r>0){let y=g.material.map;g.material.emissiveMap=y,g.material.emissiveIntensity=g.material.color.r*.4,g.material.emissive=g.material.color.clone()}e.baseInstancesNames.push(g),e.baseInstancesList[g.name]=g})}}if(m.indexOf("Lights")>-1){let v=u[d.Lights].children;for(this.log("Lights - ",u[d.Lights]);v.length>0;){let p=v.pop();v.push(...p.children),p.type.includes("Light")&&(e.hasOwnProperty("lightList")||(e.lightList={}),e.geoList.hasOwnProperty("lights")||(e.geoList.lights=[]),p.type=="PointLight"&&(p.decay=3,p.distance=20*p.intensity,p.intensity=2),e.lightList.hasOwnProperty(p.type)||(e.lightList[p.type]=[]),e.lightList[p.type].push(p),e.geoList.lights.push(p),p.matrixAutoUpdate=!1,l.add(p))}}if(m.includes("Scene")||m.includes("MainScene")){let v=d.Scene||d.MainScene,p=[...u[v].children];this.log("MainScene - ",u[v]);let g=-1;for(;p.length>0;){let x=p.pop();if(this.log("Cur Object - ",x.name),this.checkForUserData(e,l,x),x.isMesh){x.userData.hasOwnProperty("Show")&&(!x.userData.Show||x.userData.Show==0)&&(x.visible=!1),e.geoList[x.name]=x;let y=ft;if(x.userData.doubleSided&&(y=Je),a.hasOwnProperty(x.name)){let _=null;x.material.map&&(_=x.material.map),x.material=a[x.name],_&&(x.material.uniforms.hasOwnProperty("diffuse")&&(x.material.uniforms.diffuse.value=_),x.material.hasOwnProperty("emissiveMap")&&(x.material.emissiveMap=_,x.material.emissive.r>0&&(x.material.emissiveIntensity=x.material.emissive.r))),x.matrixAutoUpdate=!1}else{let _=x.material;Array.isArray(x.material)||(_=[x.material]),this.checkIsGlassLiquid(e,l,x,_)||_.forEach(b=>{b.map&&!b.emissiveMap&&b.emissive.r>0&&(b.emissiveMap=b.map,b.emissiveIntensity=b.emissive.r,b.emissive=new he(16777215)),b.side=y}),x.matrixAutoUpdate=!1}}else if(x.type.includes("Light"))e.lightList.hasOwnProperty(x.type)||(e.lightList[x.type]=[]),e.lightList[x.type].push(x);else if(x.type=="Group"){let y=!0;if(e.geoList.hasOwnProperty("Scripted")){let _=Object.keys(e.geoList.Scripted)}y&&p.push(...x.children)}}l.add(...u[v].children)}if(m.indexOf("Glass")>-1){let v=u[d.Glass].children;if(this.log("Glass - ",u[d.Glass]),v.length>0){if(!e.glassGroup){let p=new bt;e.glassGroup=p,l.add(p)}for(;v.length>0;){let p=v.pop();if(v.push(...p.children),p.isMesh){this.checkForUserData(e,l,p);let g=p.material.clone();p.material=g,p.material.transparent=!0,p.material.opacity=.5,p.material.shininess=20,p.material.specular=p.material.color.clone(),p.material.specular.r=p.material.specular.r*.5+.1,p.material.specular.g=p.material.specular.g*.5+.1,p.material.specular.b=p.material.specular.b*.5+.1,p.material.side=At,p.material.depthWrite=!1,p.matrixAutoUpdate=!1,p.renderOrder=1,e.glassList.push(p),e.glassGroup.add(p);let x=p.geometry.clone(),y=p.material.clone();y.copy(p.material);let _=new nt(x,y);_.material.shininess=40,_.material.side=ft,_.matrixAutoUpdate=!1,_.renderOrder=2;let b=p.position,S=p.rotation,E=p.scale;_.rotation.set(S.x,S.y,S.z),_.position.set(b.x,b.y,b.z),_.scale.set(E.x,E.y,E.z),_.updateMatrix(),l.add(_),e.glassList.push(_),e.glassGroup.add(_)}}}}if(m.indexOf("Colliders")>-1){let v=u[d.Colliders];this.log("Colliders - ",u[d.Colliders]);let p=v.children;e.collidersExist=p.length>0;let g={min:new M(0,0,0),max:new M(0,0,0)};for(let x=0;x<p.length;++x){let y=p[x].name,_=p[x].children;for(;_.length>0;){let b=_.pop();if(_.push(...b.children),b.isMesh){b.visible=!1;let S="noAxis";b.userData.checkX&&b.userData.checkZ&&(S=~~(b.userData.checkX>0)+(~~(b.userData.checkZ>0)+"")),y=="ColliderWalls"?(e.antiColliderActive=!0,e.antiColliderList[S].push(b)):y=="ColliderTops"?(e.antiColliderTopActive=!0,e.antiColliderTopList[S].push(b)):(y=="RoomWarpZone"&&(e.hasRoomWarp=!0,e.roomWarp.push(b)),e.colliderActive=!0,e.colliderList[S].push(b)),b.matrixAutoUpdate=!1,l.add(b),e.geoList[b.name]=b}}}e.hasColliderType(ge.FLOOR)?this.pxlColliders.prepColliders(e,ge.FLOOR):e.hasColliderType(ge.WALL)?this.pxlColliders.prepColliders(e,ge.WALL):e.hasColliderType(ge.WALL_TOP)?this.pxlColliders.prepColliders(e,ge.WALL_TOP):e.hasColliderType(ge.ROOM)&&this.pxlColliders.prepColliders(e,ge.ROOM)}if(m.indexOf("PortalExit")>-1){let v=u[d.PortalExit].children;for(this.log("PortalExit - ",u[d.PortalExit]);v.length>0;){let p=v.pop();p.matrixAutoUpdate=!1,e.hasPortalExit=!0,e.portalList[p.name]=p}}if(m.indexOf("FlatColor")>-1){let v=u[d.FlatColor].children;for(this.log("FlatColor - ",u[d.FlatColor]);v.length>0;){let p=v.pop();if(v.push(...p.children),p.isMesh){this.checkForUserData(e,l,p);let g=new MeshBasicMaterial({color:p.material.color.clone()});g.side=ft,g.flatShading=!0,p.material=g,p.matrixAutoUpdate=!1,l.add(p)}}}if(m.indexOf("LambertColor")>-1){let v=u[d.LambertColor].children;for(this.log("LambertColor - ",u[d.LambertColor]);v.length>0;){let p=v.pop();if(v.push(...p.children),p.isMesh){this.checkForUserData(e,l,p);let g=new MeshLambertMaterial;if(p.material.map){let x=p.material.map.clone();g.map=x,g.emissiveMap=x,g.emissiveIntensity=.5,p.material=g}else g.color=p.material.color.clone(),g.emissive=p.material.emissive.clone(),g.side=ft,g.flatShading=!0,p.material=g;p.matrixAutoUpdate=!1,l.add(p)}}}if(m.indexOf("Sky")>-1){let v=u[d.Sky].children;for(this.log("Sky - ",u[d.Sky]);v.length>0;){let p=v.pop();if(v.push(...p.children),p.isMesh){let g=new we({uniforms:{diffuse:{type:"t",value:p.material.map},envDiffuse:{type:"t",value:null},noiseTexture:{type:"t",value:this.pxlEnv.cloud3dTexture},fogColor:{value:l.fog.color},time:{value:this.pxlTimer.msRunner},camNear:{type:"f",value:e.camera.near},camFar:{type:"f",value:e.camera.far*.85},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.scene.skyObjectVert(),fragmentShader:this.pxlShaders.scene.skyObjectFrag(this.options.skyHaze)});p.material=g,p.matrixAutoUpdate=!1,p.frustumCulled=!1,p.layers.set(this.pxlEnv.renderLayerEnum.SKY),e.geoList[p.name]=p,e.materialList[p.name]=g,l.add(p)}}}if(m.indexOf("AnimatedTextures")>-1){let v=u[d.AnimatedTextures].children;for(this.log("AnimatedTextures - ",u[d.AnimatedTextures]);v.length>0;){let p=v.pop();if(v.push(...p.children),p.isMesh){this.checkForUserData(e,l,p);let g={time:{value:this.pxlTimer.msRunner},glowTexture:{type:"t",value:p.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},glowColor:{value:new M(.01,.35,.55)},intensity:{type:"f",value:.35},rate:{type:"f",value:2},freq:{type:"f",value:1}},x=this.pxlShaders.animated.animTextureVert(),y=this.pxlShaders.animated.animTextureFrag(),_=new we({uniforms:g,vertexShader:x,fragmentShader:y,transparent:!0,side:ft});p.material=_,p.matrixAutoUpdate=!1,l.add(p)}}}if(m.indexOf("ScrollingTextures")>-1){let v=u[d.ScrollingTextures].children;this.log("ScrollingTextures - ",u[d.ScrollingTextures]);let p=1;for(;v.length>0;){p+=1;let g=v.pop();if(v.push(...g.children),g.isMesh){this.checkForUserData(e,l,g);let x=g.name,y=.05;x.indexOf("_")>-1&&(y=x.split("_")[1],y=parseInt(y)*.01);let _=new we({uniforms:{scrollTexture:{type:"t",value:g.material.map},time:{value:this.pxlTimer.msRunner},speed:{value:y},seed:{type:"f",value:p*1.1423},boostPerc:{value:1}},vertexShader:this.pxlShaders.animated.scrollingTextureVert(),fragmentShader:this.pxlShaders.animated.scrollingTextureFrag(),transparent:!0,side:ft});g.material=_,g.matrixAutoUpdate=!1,l.add(g)}}}if(m.indexOf("UserScreens")>-1){let v=u[d.UserScreens].children;this.log("UserScreens - ",u[d.UserScreens]);let p=0,g=[new M(1,0,0),new M(0,1,0),new M(0,0,1)],x=[this.assetRoot+"DJ_Vector_Masks_1.jpg",this.assetRoot+"DJ_Vector_Masks_2.jpg",this.assetRoot+"DJ_Vector_Masks_3.jpg"],y=0,_=0,b=g.length;for(;v.length>0;){let S=v.pop();if(v.push(...S.children),S.isMesh){let E=new we({uniforms:{camExists:{type:"f",value:0},time:{value:this.pxlTimer.msRunner},seed:{type:"f",value:p*1.1423},alpha:{type:"f",value:1},boostPerc:{value:e.userScreenIntensity},scale:{value:new G(100,100)},ratio:{value:new G(1,1)},videoFeed:{type:"t",value:null},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},maskChannel:{value:g[y]},maskMap:{type:"t",value:this.pxlUtils.loadTexture(x[_])}},vertexShader:e.userScreenVert,fragmentShader:e.userScreenFrag,transparent:!0,side:ft});S.material=E,S.matrixAutoUpdate=!1,e.pxlEnv.camScreenData.screenGeoList.push(S),l.add(S),p+=1,y=p%b,_=Math.floor(p/3)%b}}}if(m.indexOf("Items")>-1){let v=u[d.Items].children;for(this.log("Items - ",u[d.Items]);v.length>0;){let p=v.pop();if(p.type=="Group"){let g=p.children;g.length>0&&(g.forEach(x=>{if(x.name.includes("Item")){let y=new we({uniforms:{color:{value:x.material.emissive.clone()},alphaMap:{type:"t",value:x.material.map},cloudNoise:{type:"t",value:this.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.objects.itemVert(),fragmentShader:this.pxlShaders.objects.itemFrag(),transparent:!0,side:Je,depthTest:!0,depthWrite:!1});x.material=y,this.pxlUser.itemList[p.name]=x}else if(x.name.includes("Base")){let y=new we({uniforms:{color:{value:x.material.emissive.clone()},alphaMap:{type:"t",value:x.material.map},cloudNoise:{type:"t",value:this.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemBaseRotateRate}},vertexShader:this.pxlShaders.objects.itemBaseVert(),fragmentShader:this.pxlShaders.objects.itemBaseFrag(),transparent:!0,side:Je,depthTest:!0,depthWrite:!1});x.material=y,this.pxlUser.itemBaseList.push(x)}}),l.add(p),this.pxlUser.itemGroupList[p.name]=p,this.pxlUser.itemListNames.push(p.name))}}}if(m.includes("Scripted")){let v=u[d.Scripted].children;for(this.log("Scripted - ",u[d.Scripted]);v.length>0;){let p=v.pop();p.isMesh&&(e.geoList[p.name]=p,l.add(p))}}if(m.includes("Clickable")){let v=u[d.Clickable];this.log("Clickable - ",u[d.Clickable]);let p=v.children;for(let g=0;g<p.length;++g){let x=p[g].name,y=p[g].children;for(;y.length>0;){let _=y.pop();if(y.push(..._.children),_.isMesh){let b=new MeshBasicMaterial;b.color=new he(16777215),_.material.emissive=new he(4473924),_.material.emissiveMap=_.material.map,_.matrixAutoUpdate=!1,e.objectClickableObjectList[_.name]||(e.objectClickableObjectList[_.name]={}),e.objectClickableObjectList[_.name][x]=_,e.objectClickable.push(_),l.add(_),x=="Hover"&&(_.visible=!1)}}}}if(m.includes("Markers")){let v=u[d.Markers].children;for(this.log("Markers - ",u[d.Markers]);v.length>0;){let p=v.pop();e.marker[p.name]=p.position}}this.pxlEnv.geoList[i]=c,this.pxlEnv.geoLoadList[i]=1,e.fbxPostLoad(),this.runDebugger=!1},null,c=>{i!=""&&(this.pxlEnv.geoLoadList[i]=1),this.log("Error Loading FBX"),this.log(c),this.runDebugger=!1}),h}loadAnimFBX(e,t,i,s,r){t==""&&(t=e.getName()),this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[t]=0;let a=0,o=e.scene;var l=new Xs;return l.load(i,h=>{let c=h.children,u={},d=[];c.forEach((p,g)=>{let x=p.name.split("_")[0];d.push(x),u[x]=g}),h.traverse(p=>{this.checkForUserData(e,o,p),p.userData.hasOwnProperty("doubleSided")&&p.userData.doubleSided&&(p.material.side=Je)}),this.pxlAnim.initObject(t,h),this.log("Animation FBX - ",d[0]),o.add(h),h.frustumCulled=!1;var m=new Xs;let f=[];Object.keys(s).forEach(p=>{let g=s[p],x=new Promise((y,_)=>{m.load(g,b=>{b.animations.length==0&&(this.log("No animations found in file",g),this.log(b),y()),this.pxlAnim.addClips(t,p,b),this.log("Animation Loaded",p),y()},null,b=>{this.log("Animation Load Error"),this.log(b),_(b)})});f.push(x)}),Promise.all(f).then(()=>{this.pxlAnim.setStateConnections(t,r),e.geoList[t]=h,this.pxlEnv.geoLoadList[t]=1,e.animPostLoad(t)}).catch(p=>{this.log("Error loading animations",p)})},null,h=>{t!=""&&(this.pxlEnv.geoLoadList[t]=1)}),l}pxlShaderBuilder(e,t,i,s=null){var r,a={diffuse:{type:"t",value:null},time:{value:this.pxlTimer.msRunner}};e!=null&&(a=Object.assign({},a,e));let o={uniforms:a,vertexShader:t,fragmentShader:i};return s&&(o.defines=s),r=new we(o),r.transparent=!0,r.depthTest=!0,r}removeChildren(e){for(var t=0,i=e.children,s=0;s<i.length;++s)i[s].type=="Group"&&(e.remove(i[s]),t++);return t}findMesh(e){for(var t=null,i=e.children,s=0;s<i.length;++s)if(i[s].type=="Mesh"){t=i[s];break}return t}getBBoxCentroid(e){try{var t=new Nt().setFromObject(e),i=t.min,s=t.max,r=new M().addVectors(s,i).multiplyScalar(.5);e.userData={bbox:t,centroid:r},mapBookHelper?.update()}catch(a){console.log("- - - - - - - - ERROR - - - - - - - -"),console.log(`     Object does not exist.
           - Error Info -`),console.log(a),console.log("- - - - - - - - - - - - - - - - - - -")}}loadScript(e){return new Promise((t,i)=>{let s=document.createElement("script");s.type="text/javascript",s.src=e,s.async=!0,s.onreadystatechange=()=>{t(!0)},s.onload=()=>{t(!0)},document.head.appendChild(s)})}xmlHttp(){return window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP")}static getURLContent(e){return new Promise((t,i)=>{let s=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");s.open("GET",e),s.onload=r=>{s.readyState==4&&s.status>=200&&s.status<300?t(s.response):t(s.statusText)},s.onerror=()=>i(s.statusText),s.send()})}getExternalHTML(e,t){if(!window.XMLHttpRequest){window.open(e,"_blank");return}let i=this.xmlHttp();i.onreadystatechange=function(){this.readyState==4&&this.status==200&&t&&typeof t=="function"&&t(i.responseText)},i.open("GET",e,!0),i.responceType="document",i.send()}fetchURLStatus(e,t,i){fetch(e,{method:"HEAD"}).then(s=>{t(s.status,i)}).catch(s=>{t(404,i)})}urlExistsFallback(e){return new Promise((t,i)=>{let s=this.xmlHttp();s.open("HEAD",e,!0),s.send(),console.log(s),s.onreadystatechange=function(){this.readyState==this.DONE&&t(this.status<400)},s.onerror=r=>{t(!1)},s.ontimeout=r=>{t(!1)}})}urlExists(e){var t;return new Promise((i,s)=>{if(t)t.onmessage=function(r){i(r.data.data)},t.onerror=function(r){i(!1)},t.postMessage({type:"urlExists",data:e});else{let r=this.urlExistsFallback(e).then(a=>{i(a)})}}).then(i=>(t&&t.terminate(),i)).catch(i=>(t&&t.terminate(),!1))}};var ll=class{constructor(e,t=!1,i={}){this.pxlTimer=null,this.pxlCookie=null,this.pxlDevice=null,this.pxlEnv=null,this.msLog=0,this.prevMS=new Date().getTime()*.001,this.autoQuality=!1,this.percent=1,this.verbose=e,this.screenResPerc=1,this.mBlurPercMult=t?.65:1,this.bloomPercMult=t?.65:1,this.bufferPercMult=1,this.renderTargetScale=10,this.percentSteps=[.3,.45,.85],this.fpsCounter=new M(30,0,new Date().getTime()*.001),this.countAtLevel=0,this.shiftRate=.01,this.moduleQualityList=[],this.qualityStep=-1,this.qualityMaxSteps=3,this.qualityStepValues=[.25,.5,.75,1],this.benchmarkStart=-1,this.benchmarkTime=-1,this.benchmarkRating=-1,this.benchmarkTimes=[9,17],this.setFromBenchmark=!0,this.benchmarkQuality=1,this.benchmarkQualityRange=[.25,1],this.settingsQualityChoice=null,this.detailLimitOverride=Object.keys(i).includes("dlimit")?i.dlimit:0,this.detailLimit=this.detailLimitOverride!=null?this.detailLimitOverride:0,this.settings={leftRight:!0,mouse:!0,graphics:2,resolution:1,fog:2,bloom:!0,motion:!1},this.settingsLow={resolution:.5,fog:0,bloom:!1,motion:!1},this.settingsMedium={resolution:.75,fog:1,bloom:!0,motion:!1},this.settingsHigh={resolution:1,fog:2,bloom:!0,motion:!1},this.settingsCustom=null}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlCookie=e.pxlCookie,this.pxlDevice=e.pxlDevice,this.pxlEnv=e.pxlEnv}init(){this.detailLimitOverride!=null?this.detailLimit=this.detailLimitOverride:this.pxlCookie.hasCookie("detailLimit")&&(this.detailLimit=this.pxlCookie.parseCookie("detailLimit")),this.verbose>=ti.INFO&&console.log("Graphics Limiting is set to level ",this.detailLimit),this.setFromBenchmark=!this.pxlCookie.parseDict(this.settings),this.pxlCookie.hasCookie("leftRight")&&(this.settings.leftRight=this.pxlCookie.parseCookie("leftRight")),this.pxlCookie.hasCookie("mouse")&&(this.settings.mouse=this.pxlCookie.parseCookie("mouse"));let e=Object.keys(this.settingsHigh);if(this.pxlCookie.hasCookie("qualitySetting")){let t=this.pxlCookie.parseCookie("qualitySetting");this.settings.graphics=t,this.settingsQualityChoice=t}}step(){this.mapFpsQualitCheck()}attachModule(e=null){e&&this.moduleQualityList.push(e)}startBenchmark(){this.pxlTimer.step(),this.benchmarkStart=this.pxlTimer.curMS}endBenchmark(){this.pxlTimer.step();let e=this.pxlTimer.curMS-this.benchmarkStart;this.benchmarkTime=e,this.benchmarkRating=1-Math.min(1,Math.max(0,(e-this.benchmarkTimes[0])/(this.benchmarkTimes[1]-this.benchmarkTimes[0]))),this.benchmarkQuality=this.benchmarkRating*(this.benchmarkQualityRange[1]-this.benchmarkQualityRange[0])+this.benchmarkQualityRange[0];let t=Math.min(1,Math.max(0,this.benchmarkRating));if(t=Math.ceil(Math.max(.05,t)*this.qualityMaxSteps)-1,this.qualityStep=t,this.setFromBenchmark){let i=["Low","Medium","High"][this.qualityStep];this.setQualityLevel(this.qualityStep)}else this.settingsQualityChoice==null&&(this.settingsQualityChoice=3),this.settingsCustom={},Object.keys(this.settingsHigh).forEach(s=>{this.settingsCustom[s]=this.settings[s]});this.setDependentSettings()}mapFpsQualitCheck(){if(this.pxlTimer.curMS-this.fpsCounter.z>1){this.fpsCounter.x=this.fpsCounter.y,this.fpsCounter.y=0,this.fpsCounter.z=this.pxlTimer.curMS;let e=1;this.fpsCounter.x<15&&(e=-1);let t=Math.min(1,Math.max(0,this.percent+this.shiftRate*e));this.autoQuality&&this.mapAutoQualityUpdate(t,!1)}this.fpsCounter.y+=1,this.pxlTimer.prevMS=this.pxlTimer.curMS}mapAutoQualityUpdate(e=null,t=!1){let i=Math.min(1,Math.max(0,e));i=Math.ceil(Math.max(.05,i)*this.qualityMaxSteps)-1,this.qualityStep=i}setGraphicsSettings(e=null,t=3){if(e==null)if(this.qualityStep==0)e=this.settingsLow;else if(this.qualityStep==1)e=this.settingsMedium;else if(this.qualityStep==2)e=this.settingsHigh;else return;t==3&&this.checkCustomDict(),Object.keys(e).forEach(s=>{this.setComponentQuality(s,e[s]),this.settings[s]=e[s],t==3&&(this.settingsCustom[s]=e[s])}),this.setDependentSettings(),this.colliderPrevObjHit=null,t!=null&&(this.settings.graphics=t)}reapplySettings(){Object.keys(this.settingsLow).forEach(t=>{this.setComponentQuality(t,this.settings[t],!1)}),this.setDependentSettings()}setQualityLevel(e){this.pxlDevice.mobile&&(e=1),this.setQualityCookie(e),e==0?this.setLowQuality():e==1?this.setMediumQuality():e==2?this.setHighQuality():e==3&&this.setCustomQuality()}setLowQuality(){this.settingsQualityChoice=0,this.setGraphicsSettings(this.settingsLow,0)}setMediumQuality(){this.settingsQualityChoice=1,this.setGraphicsSettings(this.settingsMedium,1)}setHighQuality(){this.settingsQualityChoice=2,this.setGraphicsSettings(this.settingsHigh,2)}setCustomQuality(){this.checkCustomDict(),this.settingsQualityChoice=3,this.setGraphicsSettings(this.settingsCustom)}checkCustomDict(){if(this.settingsCustom==null){this.settingsCustom={};let e=this.settingsHigh;this.settingsQualityChoice&&(this.settingsQualityChoice==0?e=this.settingsLow:this.settingsQualityChoice==1?e=this.settingsMedium:this.settingsQualityChoice==2&&(e=this.settingsHigh)),Object.assign(this.settingsCustom,e)}}setQualityCookie(e){this.pxlCookie.setCookie("qualitySetting",e)}setComponentQuality(e,t,i=!0){switch(e){case"leftRight":this.settings[e]=t;break;case"mouse":this.settings[e]=t;break;case"resolution":this.screenResPerc=t,this.pxlDevice.resizeRenderResolution(),this.settings[e]=t,this.pxlEnv.geoList.snow&&this.pxlEnv.geoList.snow.material&&(this.pxlEnv.geoList.snow.material.uniforms.pointScale.value=this.pxlEnv.geoList.snow.pBaseScale*t);break;case"fog":this.pxlEnv.mapOverlayHeavyPass.enabled=t==2,this.pxlEnv.mapOverlayPass.enabled=t==1,this.pxlEnv.mapOverlaySlimPass.enabled=t==0,this.pxlEnv.mapBoxAAPass.enabled=t==2,this.pxlEnv.mapCrossAAPass.enabled=t==1,this.pxlEnv.portaluserScreenIntensity.x=1,this.pxlEnv.userScreenIntensity.x=.65,this.pxlEnv.userScreenIntensity.y=0,this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=t==0?.7:.3),this.settings[e]=t;break;case"bloom":this.pxlEnv.portaluserScreenIntensity.x=t?.4:1,this.pxlEnv.mapGlowPass.enabled=t,this.pxlEnv.roomBloomPass.enabled=t,this.pxlEnv.roomGlowPass.enabled=t,this.pxlEnv.userScreenIntensity.x=t?.65:.8,this.pxlEnv.userScreenIntensity.y=t?0:.8,this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=t==0?.7:.3),this.pxlEnv.mapMotionBlurPass.enabled=t,this.settings[e]=t;break;case"motion":this.pxlEnv.mapMotionBlurPass.enabled=t,this.settings[e]=t;break;default:break}i&&this.pxlCookie.setCookie(e,t)}setDependentSettings(){let e=1,t=1,i=0,s=.6;this.settings.fog==2?(this.pxlEnv.mapMotionBlurPass.enabled=!1,this.pxlEnv.mapOverlayHeavyPass.enabled=!0,this.pxlEnv.mapOverlayPass.enabled=!1,this.pxlEnv.mapOverlaySlimPass.enabled=!1,this.pxlEnv.mapBoxAAPass.enabled=!0,this.pxlEnv.mapCrossAAPass.enabled=!1,e=1,t=.5):this.settings.fog==1?(this.pxlEnv.mapMotionBlurPass.enabled=!1,this.pxlEnv.mapOverlayHeavyPass.enabled=!1,this.pxlEnv.mapOverlayPass.enabled=!0,this.pxlEnv.mapOverlaySlimPass.enabled=!1,this.pxlEnv.mapBoxAAPass.enabled=!1,this.pxlEnv.mapCrossAAPass.enabled=!0,e=1.15,t=.5):(this.pxlEnv.mapMotionBlurPass.enabled=!1,this.pxlEnv.mapOverlayPass.enabled=!1,this.pxlEnv.mapOverlaySlimPass.enabled=!0,this.pxlEnv.mapBoxAAPass.enabled=!1,this.pxlEnv.mapCrossAAPass.enabled=!1,e=1,t=.4),this.settings.bloom?(this.pxlEnv.mapGlowPass.enabled=!0,this.pxlEnv.roomBloomPass.enabled=!0,this.pxlEnv.roomGlowPass.enabled=!0,this.pxlEnv.userScreenIntensity.x=.65,this.pxlEnv.userScreenIntensity.y=0,i=1,s=.25):(this.pxlEnv.mapGlowPass.enabled=!1,this.pxlEnv.roomBloomPass.enabled=!1,this.pxlEnv.roomGlowPass.enabled=!1,this.pxlEnv.engine.setRenderTarget(this.pxlEnv.mapComposerGlow.renderTarget2),this.pxlEnv.engine.clear(),this.pxlEnv.engine.setRenderTarget(this.pxlEnv.roomGlowPass.renderTarget2),this.pxlEnv.engine.clear(),this.pxlEnv.engine.setRenderTarget(null),this.pxlEnv.userScreenIntensity.x=.8,this.pxlEnv.userScreenIntensity.y=0,t=1,i=0,s=.5);let r=this.pxlEnv.geoList.Circular_Gate;r&&(r.material.uniforms.bloomBoost.value=i),this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=this.settings.bloom?.3:.7);let a=this.pxlEnv.geoList.CirculateGateVideoSphere;a&&(a.material.color.r=s,a.material.color.g=s,a.material.color.b=s),this.pxlEnv.portaluserScreenIntensity.x=t,this.pxlEnv.pxlCamera.colliderCurObjHit=null}};var hl=class{constructor(e="pxlNav-",t="/",i=30){let s=e.substring(-1)=="-"?e:e+"-";this.prepend=s,this.exp=i,this.path="path="+t,this.deleteDate="expires=Thu, 01 Jan 1970 00:00:01 GMT;",this.sub="_%_"}pullData(){let e=document.cookie}getExpiration(){let e=new Date;return e.setTime(e.getTime()+this.exp*24*60*60*1e3),"expires="+e.toGMTString()+";"}valueToString(e){let t=typeof e;return isNaN(Number(e))?t=="string"?"'"+e+"'":t=="boolean"?e?"true":"false":e==null?"null":isNaN(Number(e))?"NaN":e:e}variableToString(e){return Array.isArray(e)?"["+e.map(i=>Array.isArray(i)?this.variableToString(i):this.valueToString(i)).join(",")+"]":this.valueToString(e)}hasCookie(e){return document.cookie.includes(this.prepend+e)}readCookie(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g");return document.cookie.match(t)[0].split("=")[1].replace(this.prepend,"").replace(this.sub,";")}return null}parseCookie(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g"),i=document.cookie.match(t)[0].split("=")[1].replace(this.prepend,"").replace(this.sub,";");return i=="true"?i=!0:i=="false"?i=!1:parseInt(i)==i?i=parseInt(i):parseFloat(i)==i&&(i=parseFloat(i)),i}return null}isEqual(e){return this.hasCookie(e)?(console.log(e),this.readCookie(e)==this.variableToString(e)):!1}evalCookie(e){if(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g");return console.log("Eval Cookie has been limited, responce is: "),console.log(document.cookie.match(t)[0].replace(this.prepend,"").replace(this.sub,";")),!0}return!1}else{let t=new RegExp("(?="+this.prepend+").*?((?=;)|(?=$))","g");return console.log("Eval Cookie has been limited, may error."),document.cookie.match(t).forEach(i=>{i.replace(this.prepend,"").replace(this.sub,";")}),!0}}setCookie(e,t){t=this.variableToString(t),t.replace&&t.replace(";",this.sub),document.cookie=this.prepend+e+"="+t+";"+this.getExpiration()+this.path}addDictionary(e){let t=Object.keys(e);for(let i=0;i<t.length;++i){let s=e[t[i]];s=this.variableToString(s),s.replace&&s.replace(";",this.sub),document.cookie=this.prepend+t[i]+"="+s+";"+this.getExpiration()+this.path}}parseDict(e){let t=Object.keys(e),i=!1;return t.forEach(s=>{this.hasCookie(s)&&(e[s]=this.parseCookie(s),i=!0)}),i}clearCookie(e){if(e)typeof e=="string"&&(e=[e]),e.forEach(t=>{document.cookie=t+"=;"+this.deleteDate+this.path});else{let t=new RegExp("(?="+this.prepend+").*?(?==)","g");document.cookie.match(t).forEach(s=>{document.cookie=s+"=;"+this.deleteDate+this.path})}}};var cl=class{constructor(){this.active=!1,this.msRunner=new G(0,0),this.msLog=0,this.fpsStats=-1;let e=new Date().getTime()*.001;this._bootMS=e,this._curMS=e,this._prevMS=e,this.videoFeeds=[],this.booted=!1}init(){this.booted||(this.prevMS=this.curMS,this.msRunner.x=0,this.msRunner.y=0,this.step(),this.booted=!0)}get runtime(){return this._curMS-this._bootMS}get curMS(){return this._curMS}updateTime(){this._curMS=new Date().getTime()*.001}get prevMS(){return this._prevMS}set prevMS(e){this._prevMS=e}start(){this.play()}pause(){return this.active=!this.active,this.active}play(){return this.active=!0,this.active}stop(){return this.active=!1,this.active}toggleMSLog(){this.msLog=(this.msLog+1)%2}step(){this.prevMS=this._curMS,this.updateTime(),this.fpsStats!=-1&&this.fpsStats.update();let e=this.curMS-this.prevMS;this.msRunner.x+=e>0?e:0,this.msRunner.y=(this.msRunner.y+e)*.5}};var ul=class{constructor(e=null){this.id=null,this.jitsiUserId=null,this.jmaActive=!1,this.jmaConnectObj=!1,this.jmaServer=!1,this.jmaRoom=!1,this.jmaUserId=null,this.jmaUserName=null,this.jmaTempUserIdActive=!1,this.pxlEnv=null,this.welcome=!1,this.tankStrafe=!1,this.invertMouse=!1,this.renderSettingsCookie="settings_renderSettings",this.controlModeCookie="settings_controlMode",this.tankStrageCookie="settings_tankStrage",this.invertMouseCookie="settings_invertMouse",this.rootUserCookie="data_userEnlil",this.adminUserCookie="data_userNanna",this.localUserMoved=!1,this.localUserTurned=!1,this.itemRunTime=60,this.itemGroupList=[],this.itemList={},this.itemListNames=[],this.itemBaseList=[],this.itemActiveList=[],this.itemInactiveCmd=[],this.itemActiveTimer=[],this.itemRotateRate=.65,this.itemBaseRotateRate=.1,this.itemBobRate=.35,this.itemBobMag=0,this.mPick=[],this.activeEffects={},this.lowGrav=0,this.lKing=0,this.lKingInactive=[.025,.018],this.lKingActive=[.35,.25],this.lKingWarp=0,this.lKingPass=null,this.sField=0,this.sFieldWarp=0,this.sFieldPass=null,this.iZoom=0,this.iZoomWarp=0,this.iZoomPass=null}checkItemWearOff(e){return this.itemActiveList.length>0&&this.itemActiveTimer[0]-e<=0?(this.itemInactiveCmd.shift()(),this.itemActiveTimer.shift(),this.itemActiveList.shift(),!0):!1}checkItemPickUp(e){if(e=="LowGravity")return this.lowGrav==0?(this.lowGrav=1,!0):!1;if(e=="LizardKing")return this.lKing==0?(this.lKing=1,this.lKingWarp.set(...this.lKingActive),this.lKingPass.enabled=!0,!0):!1;if(e=="StarField")return this.sField==0?(this.sField=1,this.sFieldPass.enabled=!0,!0):!1;if(e=="InfinityZoom")return this.iZoom==0?(this.iZoom=1,this.iZoomPass.enabled=!0,!0):!1}toggleTankRotate(e=null){this.tankStrafe=e??!this.tankStrafe,this.tankStrageText=this.tankStrafe?"Left/Right Rotation":"Left/Right Strafe"}toggleMouseInf(e=null){this.invertMouse=e??!this.invertMouse,this.invertMouseText=this.invertMouse?"Revert Mouse":"Invert Mouse"}toggleFpsStats(){pxlTimer.fpsStats==-1?(pxlTimer.fpsStats=new Stats,document.body.appendChild(pxlTimer.fpsStats.domElement),pxlTimer.fpsStats.update(),this.fpsDisplayText="Hide FPS Stats"):(pxlTimer.fpsStats.domElement.remove(),pxlTimer.fpsStats=-1,this.fpsDisplayText="Display FPS Stats")}};var dl=class{constructor(e,t,i){this.projectTitle=e,this.pxlCore=t,this.pxlEnv=null,this.pxlTimer=null,this.pxlAudio=null,this.pxlUser=null,this.pxlCamera=null,this.pxlAutoCam=null,this.pxlGuiDraws=null,this.pxlQuality=null,this.allowCursorSwap=!1,this.longTouchLength=.75;let s=window.innerWidth,r=window.innerHeight;this.sW=s,this.sH=r,this.touchScreen=!1,this.x=s*.5,this.y=r*.5,this.screenRes=new G(1/s,1/r),this.screenAspect=new G(1,1),this.screenRatio=new G(s/r,r/s),this.origRes=new G(s,r),this.screenResDeltaPerc=new G(1,1),this.mapW=1,this.mapH=1,this.gammaCorrection=new M(1,1,1),this.lightShift=new G(1,1),this.firefox=/Firefox/i.test(navigator.userAgent),this.mobile=i,this.button=0,this.inputActive=!1,this.startPos=[0,0],this.endPos=[0,0],this.dragCount=0,this.dragTotal=0,this.latched=!1,this.windowHidden=!1,this.mouseX=s/2,this.mouseY=r/2,this.keyDownCount=[0,0,0],this.directionKeyDown=!1,this.directionKeysPressed=[0,0,0,0],this.shiftBoost=1,this.controlKey=!1,this.objectPercList=[],this.objectPercFuncList={},this.objectPerc={active:!1,object:null,left:0,top:0,width:0,height:0,startX:0,startY:0,offsetX:0,offsetY:0,percX:0,percY:0,offsetPercX:0,offsetPercY:0},this.canCursorLock="pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document,this.cursorLockActive=!1,this.cursorRightButtonLockActive=!1,this.gyroGravity=[0,0,0],this.touchMouseData={active:!1,lock:!1,mode:0,updated:0,button:0,dragCount:0,dragTotal:0,startPos:null,moveMult:new G(1,1),velocityEase:new G(0,0),velocityEasePrev:null,velocity:new G(0,0),mBlurVelInf:new G(2*this.screenRes.x,2*this.screenRes.y),prevDeltaPos:[0,0,0],endPos:null,latchMatrix:null,netDistance:new G(0,0),netDistYPerc:0,curDistance:new G(0,0),curFadeOut:new G(0,0),curStepDistance:new G(0,0),initialQuat:new Ue,releaseTime:0},this.subscriptableEvents=["keydown","keyup","resize"],this.callbackList={},this.init()}setDependencies(e){this.pxlEnv=e.pxlEnv,this.pxlTimer=e.pxlTimer,this.pxlAudio=e.pxlAudio,this.pxlUser=e.pxlUser,this.pxlCamera=e.pxlCamera,this.pxlAutoCam=e.pxlAutoCam,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlQuality=e.pxlQuality}init(){this.setGammaCorrection();let e=this;document.addEventListener("mousedown",i=>{e.onmousedown(e,i)},!1),document.addEventListener("mousemove",i=>{e.onmousemove(e,i)},!1),document.addEventListener("mouseup",i=>{e.onmouseup(e,i)},!1),document.addEventListener("contextmenu",i=>{e.oncontextmenu(i)},!1),window.addEventListener("resize",i=>{e.resizeRenderResolution()},!1),document.addEventListener("touchstart",function(i){e.touchstart(e,i)},{passive:!0}),document.addEventListener("touchmove",function(i){e.touchmove(e,i)},{passive:!0}),document.addEventListener("touchend",function(i){e.touchend(e,i)},{passive:!0}),document.onkeydown=i=>{e.onkeydown(e,i)},document.onkeyup=i=>{e.onkeyup(e,i)};let t=this;document.addEventListener("visibilitychange",function(i){t.windowHidden=document.hidden,t.directionKeysPressed=[0,0,0,0],t.directionKeyDown=!1,t.shiftBoost=1,t.pxlCamera.workerFunc("focus",!document.hidden),t.runHiddenCalcs()}),typeof window.onblur=="object"&&(window.onblur=i=>{t.resetUserInput(i)}),window.addEventListener("beforeunload",i=>{if(t.controlKey==!0)return i.preventDefault(),i.returnValue="Close tab?",t.controlKey=!1,t.mapLockCursor(!1,0),"Close tab?"})}setGammaCorrection(e=null){if(e!=null){this.gammaCorrection.x=1/e,this.gammaCorrection.y=e,this.gammaCorrection.z=e;return}let t=1.5,i=1.1,s=1.2,r=.5;if(window&&window.navigator&&window.navigator.userAgent){let a=window.navigator.userAgent.match(/(windows|win32|win64|wince)/i);if(a&&a.length>0)t=2.2,i=.95,s=1,r=0;else{let o=window.navigator.userAgent.match(/(macintosh|macintel|macppc|mac68k|iphone|ipad|ipod)/i);o&&o.length>0?(t=1.8,i=.9,s=.97,r=.1):(t=1.8,i=.7,s=.96,r=.1)}}this.gammaCorrection.x=1/t,this.gammaCorrection.y=s,this.gammaCorrection.z=r,this.lightShift.x=i}runHiddenCalcs(){this.windowHidden&&setTimeout(()=>{this.runHiddenCalcs()},100)}resetUserInput(e){this.directionKeysPressed=[0,0,0,0],this.directionKeyDown=!1,this.shiftBoost=1,this.mapLockCursor(!1,0),this.pxlCamera.camJumpKey(!1),this.pxlCamera.deviceKey("space",!1),this.touchMouseData.active&&(this.touchScreen?this.endTouch(e):this.mapOnUp(e))}onmousemove(e,t){e.mapOnMove(t)}onmousedown(e,t){e.mapOnDown(t)}onmouseup(e,t){e.mapOnUp(t)}oncontextmenu(e){return e.preventDefault(),!1}touchstart(e,t){e.startTouch(t)}touchmove(e,t){e.doTouch(t)}touchend(e,t){e.endTouch(t)}onkeydown(e,t){e.keyDownCall(t)}onkeyup(e,t){e.keyUpCall(t)}get active(){return this.inputActive}set active(e){this.inputActive=!!e}preventDefault(e){e=e||window.event,e.preventDefault(e)&&e.preventDefault(e)(),e.returnValue=!1}setCursor(e){if(this.allowCursorSwap){if(e=="activeLatch"){let t=["grab","grabbing","all-scroll"][this.touchMouseData.button]}document.body.style.cursor=e}}getMouseXY(e){if(this.mobile)try{touch=e.touches[0],this.mouseX=touch.pageX,this.mouseY=touch.pageY}catch{}else{let t=this.pxlQuality.settings.mouse?-1:1;this.cursorLockActive?(this.mouseX+=(e.movementX||e.mozMovementX||e.webkitMovementX||0)*t,this.mouseY+=(e.movementY||e.mozMovementY||e.webkitMovementY||0)*t):(this.mouseX=e.clientX,this.mouseY=e.clientY)}}mapLockCursor(e=!1,t){this.canCursorLock&&!this.mobile&&(t==2?(!e&&this.cursorRightButtonLockActive?this.cursorRightButtonLockActive=!1:!e&&!this.cursorRightButtonLockActive&&(this.cursorRightButtonLockActive=!0),e=e||this.cursorRightButtonLockActive):e||(this.cursorRightButtonLockActive=e),e==!0?(this.pxlGuiDraws.pxlNavCanvas.focus(),this.pxlGuiDraws.pxlNavCanvas.requestPointerLock().catch(i=>{})):document.pointerLockElement&&document.exitPointerLock(),this.cursorLockActive=e)}mapOnDown(e){let t=e.target;t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlTimer.active&&(this.pxlGuiDraws.chatMessageInput&&this.pxlGuiDraws.chatMessageInput.blur(),this.pxlGuiDraws.pxlNavCanvas.focus(),this.preventDefault(e),this.touchMouseData.button=e.which,this.touchMouseData.active=!0,this.touchMouseData.mode=this.touchMouseData.button,this.touchMouseData.startPos=new G(this.mouseX,this.mouseY),this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.curDistance=new G(0,0),this.touchMouseData.curStepDistance=new G(0,0),this.touchMouseData.dragCount=0,this.pxlAutoCam.touchBlender=!1,this.setCursor("grabbing"),this.mapLockCursor(!0,e.button))}mapOnMove(e){let t=e.target;if(t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlTimer.active||this.cursorLockActive)if(this.preventDefault(e),this.getMouseXY(e),(this.touchMouseData.active||this.cursorLockActive)&&this.touchMouseData.startPos){this.touchMouseData.dragCount++;let i=this.touchMouseData.endPos.clone();this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.curDistance=this.touchMouseData.startPos.clone().sub(this.touchMouseData.endPos),this.touchMouseData.curStepDistance=this.touchMouseData.endPos.clone().sub(i),this.touchMouseData.netDistance.add(this.touchMouseData.curStepDistance.clone()),this.touchMouseData.velocity=this.touchMouseData.velocity.clone().multiplyScalar(3).add(this.touchMouseData.curStepDistance).multiplyScalar(.25),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+this.touchMouseData.curDistance.y+250)*8e-4,this.touchMouseData.curFadeOut.add(i.sub(this.touchMouseData.endPos))}else this.pxlEnv.hoverUserDetect()}mapOnUp(e){let t=e.target;if(this.pxlAudio.djVolumeParentObj&&(this.pxlAudio.djVolumeParentObj.down=!1),t.getAttribute&&t.getAttribute("id")==this.pxlCore)if(this.pxlGuiDraws.checkFocus(t.getAttribute("id"),!0),this.mobile)this.pxlAutoCam.getNextPath(!1,1);else return this.preventDefault(e),this.touchMouseData.dragCount++,this.touchMouseData.dragTotal+=this.touchMouseData.dragCount,this.touchMouseData.active=!1,this.touchMouseData.releaseTime=this.pxlTimer.curMS,this.pxlAutoCam.touchBlender=!0,this.pxlAutoCam.setNextTrigger(),this.touchMouseData.dragCount<9&&this.pxlEnv.clickUserDetect(),this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+250)/1250,this.setCursor("grab"),this.mapLockCursor(!1,e.button),e.preventDefault(),!1}startTouch(e){let t=e.target;if(!(t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlTimer.active))return;this.touchScreen=!0;let s=e.touches[0];this.mouseX=s.pageX,this.mouseY=s.pageY,this.touchMouseData.active=!0,this.touchMouseData.mode=this.touchMouseData.button,this.touchMouseData.startPos=new G(this.mouseX,this.mouseY),this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.curDistance=new G(0,0),this.touchMouseData.curStepDistance=new G(0,0),this.touchMouseData.dragCount=0,this.pxlAutoCam.touchBlender=!1,this.touchMouseData.releaseTime=this.pxlTimer.curMS;let r=t.getAttribute("id");if(this.objectPercList.includes(r)){r=="djPlayerVolume"&&(t=this.pxlAudio.djVolumeParentObj,r=t.getAttribute("id"));let a=t.getBoundingClientRect();this.objectPerc.active=!0,this.objectPerc.object=t,this.objectPerc.left=a.left,this.objectPerc.top=a.top,this.objectPerc.width=a.width,this.objectPerc.height=a.height,this.objectPerc.startX=this.mouseX-a.left,this.objectPerc.startY=this.mouseY-a.top,this.objectPerc.percX=(this.mouseX-this.objectPerc.left)/this.objectPerc.width,this.objectPerc.percY=(this.mouseY-this.objectPerc.top)/this.objectPerc.height,this.objectPerc.offsetX=0,this.objectPerc.offsetY=0,this.objectPerc.offsetPercX=0,this.objectPerc.offsetPercY=0,this.objectPercFuncList[r]&&this.objectPercFuncList[r](e)}}doTouch(e){if(!this.touchMouseData.active)return;let t=e.target,i=e.touches[0];if(this.mouseX=i.pageX,this.mouseY=i.pageY,this.touchMouseData.active){if(this.touchMouseData.dragCount++,typeof e.touches[1]<"u"){let r=e.touches[1];e.touches.length>1&&this.touchMouseData.dragCount>10&&(this.touchMouseData.lock=!0,i=e.touches[1],this.pxlEnv.setFogHue([this.mouseX,this.mouseY],[i.pageX,i.pageY]));return}let s=this.touchMouseData.endPos.clone();this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.curDistance=this.touchMouseData.startPos.clone().sub(this.touchMouseData.endPos),this.touchMouseData.curStepDistance=this.touchMouseData.endPos.clone().sub(s),this.touchMouseData.netDistance.add(this.touchMouseData.curStepDistance.clone()),this.touchMouseData.velocity.add(this.touchMouseData.curStepDistance).multiplyScalar(.5),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+this.touchMouseData.curDistance.y+250)/1250,this.touchMouseData.curFadeOut.add(s.sub(this.touchMouseData.endPos))}this.objectPerc.active&&(this.objectPerc.percX=(this.mouseX-this.objectPerc.left)/this.objectPerc.width,this.objectPerc.percY=(this.mouseY-this.objectPerc.top)/this.objectPerc.height,this.objectPerc.offsetX=this.mouseX-this.objectPerc.startX,this.objectPerc.offsetY=this.mouseY-this.objectPerc.startY,this.objectPerc.offsetPercX=this.objectPerc.offsetX/this.objectPerc.width,this.objectPerc.offsetPercY=this.objectPerc.offsetY/this.objectPerc.height)}endTouch(e){if(!this.touchMouseData.active)return;if(this.touchScreen=!1,this.touchMouseData.dragCount++,this.touchMouseData.dragTotal+=this.touchMouseData.dragCount,this.touchMouseData.active=!1,this.touchMouseData.endPos=new G(this.mouseX,this.mouseY),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+250)/1250,this.touchMouseData.curDistance.multiplyScalar(0),this.touchMouseData.curStepDistance.multiplyScalar(0),this.touchMouseData.releaseTime=this.pxlTimer.curMS,this.touchMouseData.lock){this.touchMouseData.lock=!1;return}this.pxlAutoCam.touchBlender=!0,this.pxlAutoCam.setNextTrigger();let t=e.target;this.touchMouseData.dragCount<10&&t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlAutoCam.getNextPath(!1,0),this.objectPerc.active=!1,this.pxlAudio.djVolumeParentObj&&(this.pxlAudio.djVolumeParentObj.down=!1)}async keyDownCall(e){if(this.emit("keydown",e),e.ctrlKey&&(this.controlKey=!0),document.activeElement.type==null&&this.pxlTimer.active){if(e.repeat)return;let t=e.keyCode||e.which;(t==37||t==65)&&(this.directionKeyDown=!0,this.keyDownCount[0]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[0]=1,this.pxlCamera.deviceKey(0,!0)),e.ctrlKey&&t==87&&this.directionKeysPressed[1]==1&&e.this.preventDefault(e)(),(t==38||t==87)&&(this.directionKeyDown=!0,this.keyDownCount[1]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[1]=1,this.pxlCamera.deviceKey(1,!0)),(t==39||t==68)&&(this.directionKeyDown=!0,this.keyDownCount[0]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[2]=1,this.pxlCamera.deviceKey(2,!0)),(t==40||t==83)&&(this.directionKeyDown=!0,this.keyDownCount[1]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[3]=1,this.pxlCamera.deviceKey(3,!0)),(t==16||t==224)&&(this.shiftBoost=7,this.pxlCamera.deviceKey("shift",!0)),t==32&&(this.pxlCamera.camJumpKey(!0),this.pxlCamera.deviceKey("space",!0))}}async keyUpCall(e){if(this.emit("keyup",e),e.ctrlKey)return this.controlKey=!1,e.preventDefault(),!1;if(document.activeElement.type==null){let t=e.keyCode||e.which,i=e.code||e.which;if(!e.isTrusted)return!1;if(e.ctrlKey||e.altKey||e.code.includes("F"))return e.preventDefault(),!1;if(i=="Backquote"){this.pxlGuiDraws.guiToggleVisibility();return}if(t==89&&this.pxlGuiDraws.toggleShaderEditor(),t==220){console.log("Saving screenshot");let s=this.pxlQuality.screenResPerc;this.pxlQuality.screenResPerc=1,this.pxlEnv.mapRender(!1);let r=this.pxlGuiDraws.pxlNavCanvas.toDataURL("image/png"),a=atob(r.split(",")[1]),o=a.length,l=new Uint8Array(o);for(let p=0;p<o;++p)l[p]=a.charCodeAt(p);let h=URL.createObjectURL(new Blob([l])),c=new Date,u=c.getDate(),d=c.getMonth()+1,f=c.getFullYear()+"-"+d+"-"+u+"_"+c.getHours()+"-"+c.getMinutes()+"-"+c.getSeconds(),v=document.createElement("a");v.download=this.projectTitle+"_"+f+".png",v.href=h,document.body.appendChild(v),v.click(),v.parentNode.removeChild(v),this.pxlQuality.screenResPerc=s,this.pxlEnv.mapRender(!1);return}if(this.pxlTimer.active){if((t==37||t==65)&&(this.directionKeysPressed[0]=0,this.pxlCamera.deviceKey(0,!1)),(t==38||t==87)&&(this.directionKeysPressed[1]=0,this.pxlAutoCam.active&&this.pxlAutoCam.step(!0),this.pxlCamera.deviceKey(1,!1)),(t==39||t==68)&&(this.directionKeysPressed[2]=0,this.pxlCamera.deviceKey(2,!1)),(t==40||t==83)&&(this.directionKeysPressed[3]=0,this.pxlAutoCam.active&&this.pxlAutoCam.setRoom(!0),this.pxlCamera.deviceKey(3,!1)),this.directionKeysPressed.includes(1)||(this.directionKeyDown=!1),t==16||t==224){this.shiftBoost=1,this.pxlCamera.deviceKey("shift",!1);return}if(t==32){this.pxlCamera.camJumpKey(!1),this.pxlCamera.deviceKey("space",!1);return}if(!this.directionKeyDown){if(t==49||t==97){this.pxlCamera.fastTravel(0);return}if(t==50||t==98){this.pxlCamera.fastTravel(1);return}if(t==51||t==99){this.pxlCamera.fastTravel(2);return}if(t==52||t==100){this.pxlCamera.fastTravel(3);return}if(t==53||t==101){this.pxlAutoCam.preAutoCamToggle();return}}if(t==75||t==107||t==187,t==74||t==109||t==189,t==76,t==48,t==221){this.pxlUser?.itemInactiveCmd?.length>0&&console.log(this.pxlUser.itemInactiveCmd.pop());return}t==106}if(t==27||t==13&&!e.ctrlKey){this.pxlGuiDraws.toggleHudBlock(!1,!0),this.pxlGuiDraws.toggleGuiWindowContainer(!1,!1,!0);return}if(e.altKey||e.ctrlKey||e.shiftKey)return;if(t==85,t==73){this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.infoIcon,"info");return}if(t==71){this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.settingsIcon,"settings");return}if(t==67,t==66){this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.musicIcon,"musicToggle");return}if(t==78){this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.speakerIcon,"speakerToggle");return}if(t==77,t==86,t==191){this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.helpIcon,"help");return}if(t==80){this.directionKeysPressed=[0,0,0,0],this.directionKeyDown=!1,this.pxlTimer.pause(),this.pxlTimer.active&&this.pxlEnv.mapRender(),this.pxlCamera.workerFunc("activeToggle",this.pxlTimer.active);return}}}resizeRenderResolution(e=null,t=null){if(e=e||window.innerWidth,t=t||window.innerHeight,this.mapW=(this.sW=e)*this.pxlQuality.screenResPerc,this.mapH=(this.sH=t)*this.pxlQuality.screenResPerc,this.screenRes.x=1/this.mapW,this.screenRes.y=1/this.mapH,this.screenRatio.x=this.sW/this.sH,this.screenRatio.y=this.sH/this.sW,this.pxlEnv.geoList.HDRView){let a=this.mapW>this.mapH?1:this.mapW/this.mapH;this.pxlEnv.geoList.HDRView.material.uniforms.ratioU.value=a}if(this.touchMouseData.mBlurVelInf=new G(2*this.screenRes.x,2*this.screenRes.y),!this.pxlEnv.mapGlowPass)return;this.pxlEnv.scene.renderTarget.setSize(this.mapW*this.pxlQuality.bufferPercMult,this.mapH*this.pxlQuality.bufferPercMult),this.pxlEnv.scene.renderWorldPos.setSize(this.mapW*this.pxlQuality.bufferPercMult,this.mapH*this.pxlQuality.bufferPercMult),this.pxlEnv.mapComposer.setSize(this.mapW,this.mapH),this.pxlEnv.mapComposerGlow.setSize(this.mapW,this.mapH),this.pxlEnv.roomComposer.setSize(this.mapW,this.mapH),this.pxlEnv.roomGlowPass.setSize(this.mapW*this.pxlQuality.bloomPercMult,this.mapH*this.pxlQuality.bloomPercMult),this.pxlEnv.delayComposer.setSize(this.mapW,this.mapH),this.pxlEnv.mapGlowPass.setSize(this.mapW*this.pxlQuality.bloomPercMult,this.mapH*this.pxlQuality.bloomPercMult),this.pxlEnv.mapMotionBlurPass.setSize(this.mapW*this.pxlQuality.mBlurPercMult,this.mapH*this.pxlQuality.mBlurPercMult),this.pxlEnv.mapOverlayHeavyPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlayPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlaySlimPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlayHeavyPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlEnv.mapOverlayPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlEnv.mapOverlaySlimPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlGuiDraws.pxlNavCanvas.width=this.sW,this.pxlGuiDraws.pxlNavCanvas.height=this.sH,this.pxlGuiDraws.loading=!0,this.pxlEnv.engine.setPixelRatio(window.devicePixelRatio*this.pxlQuality.screenResPerc),this.pxlEnv.engine.setSize(this.sW,this.sH);let i=this.mapW/this.mapH;this.pxlCamera.setAspect(i);let s=[this.sW/this.sH,this.sH/this.sW],r=[1,1];r[0]=i>s[0]?1:this.sW/(this.sH*s[0]),r[1]=i>s[1]?this.sH/(this.sW*s[1]):1,r[0]>1?(r[1]*=1/r[0],r[0]=1):r[1]>1&&(r[0]*=1/r[1],r[1]=1),this.screenAspect.x=r[0]*(1/(.5**2+.5**2)**.5),this.screenAspect.y=r[1],this.screenResDeltaPerc.x=this.sW/this.origRes.x,this.screenResDeltaPerc.y=this.sH/this.origRes.y,this.pxlEnv.roomSubList.Lobby&&this.pxlEnv.roomSubList.Lobby.setShaders(),this.pxlEnv.updateCompUniforms(),this.pxlEnv.roomNameList.forEach(a=>{this.pxlEnv.roomSceneList[a].pxlCamAspect=i,this.pxlEnv.roomSceneList[a]?.resize&&this.pxlEnv.roomSceneList[a].resize(this.mapW,this.mapH)}),this.emit("resize",{width:this.mapW,height:this.mapH,xPixelPerc:this.screenRes.x,yPixelPerc:this.screenRes.y,aspectRatio:i}),this.pxlTimer.active||this.pxlEnv.mapRender(!1)}subscribe(e,t){if(!this.subscriptableEvents.includes(e)){console.error("Event type not subscribable: ",e);return}this.callbackList[e]||(this.callbackList[e]=[]),this.callbackList[e].push(t)}unsubscribe(e,t){if(this.callbackList[e]){let i=this.callbackList[e].indexOf(t);i>=0&&this.callbackList[e].splice(i,1)}}emit(e,t){this.callbackList.hasOwnProperty(e)&&this.callbackList[e].forEach(i=>{i(t)})}};var pl=class{constructor(e=!1,t=100,i=500){this.pxlEnv=null,this.verbose=e,this.delimiter=",",this.roomColliderData={},this.baseGridSize=t,this.degToRad=Math.PI/180,this.epsilon=1e-5,this.colliderBoundsReference=i,this.prevGridKey=""}setDependencies(e){this.pxlEnv=e}log(e){this.verbose>=ti.INFO&&console.log(e)}warn(e){this.verbose>=ti.WARN&&console.warn(e)}error(e){this.verbose>=ti.ERROR&&console.error(e)}init(){}start(){}stop(){}step(){}prepColliders(e,t=ge.FLOOR,i=null){if(e.hasColliders()){i||(i=this.baseGridSize);let s=1/i;if(t==ge.HOVERABLE||t==ge.CLICKABLE){this.prepInteractables(e,t);return}let r=e.getName(),a=e.getColliders(t);this.roomColliderData.hasOwnProperty(r)||(this.roomColliderData[r]={}),this.roomColliderData[r].hasOwnProperty(t)||(this.roomColliderData[r][t]={},this.roomColliderData[r][t].helper=null,this.roomColliderData[r][t].count=0,this.roomColliderData[r][t].gridSize=i,this.roomColliderData[r][t].gridSizeInv=s,this.roomColliderData[r][t].faceVerts={},this.roomColliderData[r][t].faceGridGroup={});let o=[],l={min:new G(1/0,1/0),max:new G(-1/0,-1/0)};a.forEach(v=>{let p=v.geometry.attributes.position.array,g=p.length/3;for(let x=0;x<g;++x){let y=new G(p[x*3],p[x*3+2]);o.push(y),l.min.min(y),l.max.max(y)}});let h=l.max.clone().sub(l.min),c=Math.abs(Math.max(h.x,h.z)),u=Math.min(1,c/this.colliderBoundsReference);if(u<1){let v=i;i=i*u,s=1/i,this.roomColliderData[r][t].gridSize=i,this.roomColliderData[r][t].gridSizeInv=s,this.log("Grid size adjusted for pxlRoom: "+r+"; from "+v+" to "+i+" units; "+u+"%"),this.log("Reference bound set to: "+this.colliderBoundsReference+" units"),this.log("Total pxlRoom bounds found: "+c+" units")}else this.log("-- Grid size unchanged for pxlRoom '"+r+"', collider bounds within reference bounds --");this.log("Collider bounds: {x:"+l.min.x+", y:"+l.min.y+"} -to- {x:"+l.max.x+", y:"+l.max.y+" }");let d=-1,m=0;a.forEach(v=>{d++;let p=v.geometry.attributes.position.array,g=p.length/3,x=v.matrixWorld;for(let y=0;y<g;++y){let _=y*9,b=new M(p[_],p[_+1],p[_+2]),S=new M(p[_+3],p[_+4],p[_+5]),E=new M(p[_+6],p[_+7],p[_+8]);if(b.applyMatrix4(x),S.applyMatrix4(x),E.applyMatrix4(x),b.length()==0&&S.length()==0&&E.length()==0)continue;let P=Math.min(b.x,S.x,E.x),D=Math.max(b.x,S.x,E.x),O=Math.min(b.z,S.z,E.z),B=Math.max(b.z,S.z,E.z),V=Math.floor(P*s),j=Math.floor(D*s),z=Math.floor(O*s),q=Math.floor(B*s);m++;let K=S.clone().sub(b),$=E.clone().sub(b),ee=K.clone().cross($),le=K.dot(K),me=K.dot($),J=$.dot($),re=1/(le*J-me*me),ce=v.name!=""?v.name:"collider_"+d,de=this.getGridKey(ce,"_face_",this.flattenVector3(b),this.flattenVector3(S),this.flattenVector3(E)),ae={object:v,name:v.name,key:de,verts:[b,S,E],edge0:K,edge1:$,normal:ee,dotE0E0:le,dotE0E1:me,dotE1E1:J,areaInv:re};if(this.roomColliderData[r][t].faceVerts[de]=ae,V==j&&z==q){this.addFaceToGridLocation(r,t,V,z,de);continue}let A=E.clone().sub(S);for(let C=V;C<=j;++C)for(let U=z;U<=q;++U)this.addFaceToGridLocation(r,t,C,U,de)}});let f=Object.keys(this.roomColliderData[r][t].faceGridGroup);for(let v=0;v<f.length;++v){let p=this.roomColliderData[r][t].faceGridGroup[f[v]];this.roomColliderData[r][t].faceGridGroup[f[v]]=[...new Set(p)]}this.roomColliderData[r][t].count=m,this.log(" -- Collider Count for "+r+" : "+m)}else this.log(" -- No colliders found for room: "+e.getName()),this.log("      If you didn't intend on including collider objects in your FBX, something went wrong. Please check your FBX for unintentional collider user-detail attributes on mainScene objects.")}prepInteractables(e,t=ge.HOVERABLE){if(!e.hasColliderType(t))return;let i=e.getName(),s=e.getColliders(t);if(s.length==0)return;this.roomColliderData.hasOwnProperty(i)||(this.roomColliderData[i]={});let r=-1;s.forEach(a=>{r++;let o=a.geometry.attributes.position.array,l=o.length/3,h=a.name;if(!this.roomColliderData[i].hasOwnProperty(h)){this.roomColliderData[i][h]={},this.roomColliderData[i][h].hoverable=t==ge.HOVERABLE,this.roomColliderData[i][h].clickable=t==ge.CLICKABLE,this.roomColliderData[i][h].gridSize=this.baseGridSize,this.roomColliderData[i][h].faceVerts={};for(let c=0;c<l;++c){let u=c*9,d=new M(o[u],o[u+1],o[u+2]),m=new M(o[u+3],o[u+4],o[u+5]),f=new M(o[u+6],o[u+7],o[u+8]),v=m.clone().sub(d),p=f.clone().sub(d),g=v.clone().cross(p),x=this.getGridKey(h,"_",this.flattenVector3(d),this.flattenVector3(m),this.flattenVector3(f)),y={object:a,key:x,verts:[d,m,f],edge0:v,edge1:p,normal:g};this.roomColliderData[i][h].faceVerts[x]=y}}})}isGridEdgeIntersecting(e,t,i,s,r,a){let o=t.x,l=t.z,h=o!==0?(i-e.x)/o:1/0,c=o!==0?(s-e.x)/o:-1/0,u=l!==0?(r-e.z)/l:1/0,d=l!==0?(a-e.z)/l:-1/0,m=Math.max(Math.min(h,c),Math.min(u,d)),f=Math.min(Math.max(h,c),Math.max(u,d));return f>=m&&f>=0&&m<=1}getGridKey(...e){return e.join(this.delimiter)}flattenVector3(e){return this.getGridKey(this.toNearestStr(e.x),this.toNearestStr(e.y),this.toNearestStr(e.z))}toNearestStr(e,t=1){return e.toFixed(t)}addFaceToGridLocation(e,t,i,s,r){let a=this.getGridKey(i,s);this.roomColliderData[e][t].faceGridGroup[a]||(this.roomColliderData[e][t].faceGridGroup[a]=[]),this.roomColliderData[e][t].faceGridGroup[a].push(r)}castRay(e,t,i,s=ge.FLOOR,r=!0){if(!this.roomColliderData.hasOwnProperty(e)||!this.roomColliderData[e].hasOwnProperty(s))return this.error("Room '"+e+"' does not have collider data for type: "+s),this.error(" -- Please register any collider objects with `pxlColliders.prepColliders()` or `pxlColliders.prepInteractables` first -- "),[];let a=this.roomColliderData[e][s],l=1/a.gridSize,h=Math.floor(t.x*l),c=Math.floor(t.z*l),u=this.getGridKey(h,c);if(!a.faceGridGroup.hasOwnProperty(u))return[];let d=a.faceGridGroup[u],m=[],f={};d.forEach(g=>{let x=a.faceVerts[g],y=x.verts[0],_=x.edge0,b=x.edge1,S=i.clone().cross(b),E=_.dot(S);if(E>-this.epsilon&&E<this.epsilon)return;let P=1/E,D=t.clone().sub(y),O=P*D.dot(S);if(O<0||O>1)return;let B=D.clone().cross(_),V=P*i.dot(B);if(V<0||O+V>1)return;let j=P*b.dot(B);if(j>this.epsilon){let z=t.clone().add(i.clone().multiplyScalar(j));f[j]={object:x.object,pos:z,dist:j}}});let v=Object.keys(f);v.sort();let p=[];for(let g=0;g<v.length;++g)p.push(f[v[g]]);if(a.helper){let g=p.length>0?p[0]:-1;this.setHelperActiveFace(e,s,g)}return p}castGravityRay(e,t,i=ge.FLOOR,s=!0){if(!this.roomColliderData.hasOwnProperty(e)||!this.roomColliderData[e].hasOwnProperty(i))return[];let r=this.roomColliderData[e][i],a=r.gridSize,o=r.faceGridGroup,l=1/a,h=Math.floor(t.x*l),c=Math.floor(t.z*l),u=[this.getGridKey(h-1,c-1),this.getGridKey(h-1,c),this.getGridKey(h,c-1),this.getGridKey(h,c),this.getGridKey(h+1,c),this.getGridKey(h,c+1),this.getGridKey(h+1,c+1)],d=[];for(let p=0;p<u.length;++p)o?.hasOwnProperty(u[p])&&d.push(...o[u[p]]);if(d=Object.keys(r.faceVerts),d.length==0)return[];d=[...new Set(d)];let m={};for(let p=0;p<d.length;++p){let g=r.faceVerts[d[p]],x=g.verts[0],y=g.verts[1],_=g.verts[2],b=t.clone().sub(x),S=g.normal,E=b.dot(S)/S.dot(S),P=t.clone().sub(S.clone().multiplyScalar(E)),D=_.sub(x),O=y.sub(x),B=P.clone().sub(x),V=D.dot(D),j=D.dot(O),z=D.dot(B),q=O.dot(O),K=O.dot(B),$=V*q-j*j;if($==0)continue;$=1/(V*q-j*j);let ee=(q*z-j*K)*$,le=(V*K-j*z)*$;if(ee>=0&&le>=0&&ee+le<1){let me=x.clone().add(D.multiplyScalar(ee)).add(O.multiplyScalar(le));console.log("--",me);let J=t.distanceTo(me),re={object:g.object,pos:me,dist:J};if(m[J]=re,!s)return[re]}}let f=Object.keys(m);f.sort();let v=[];for(let p=0;p<f.length;++p)v.push(m[f[p]]);if(r.helper){let p=v.length>0?v[0]:-1;this.setHelperActiveFace(e,i,p)}return v}castInteractRay(e,t=[],i=null,s=G(0,0),r=!0){let a=new M(0,0,0);i.getWorldDirection(a);let o=i.position.clone(),l=i.fov*this.degToRad,h=Math.tan(l*.5),c=i.aspect,u=s.x*c*h,d=s.y*h,m=-1,f=new M(u,d,m).applyMatrix4(i.matrixWorld).sub(i.position).normalize(),v={};t.forEach(x=>{let y=x.name,b=this.roomColliderData[e][y].faceVerts;Object.keys(b).forEach(E=>{let P=b[E],D=P.verts[0],O=P.verts[1],B=P.verts[2],V=P.edge0,j=P.edge1,z=P.normal,q=z.dot(f);if(Math.abs(q)<1e-6)return;let $=(z.dot(D)-z.dot(o))/q;if($<0)return;let ee=o.clone().add(f.clone().multiplyScalar($)),le=D.clone().sub(ee),me=O.clone().sub(ee),J=B.clone().sub(ee),re=me.clone().cross(J).length(),ce=J.clone().cross(le).length(),de=le.clone().cross(me).length(),ae=re+ce+de,A=re/ae,C=ce/ae,U=de/ae;if(A>=0&&A<=1&&C>=0&&C<=1&&U>=0&&U<=1){let F=D.clone().add(V.multiplyScalar(A)).add(j.multiplyScalar(C)),R=o.distanceTo(F);if(v[R]={obj:x,pos:ee},!r)return{obj:x,pos:ee}}})});let p=Object.keys(v);p.sort();let g={};g.order=[],g.hits={},g.hitCount=0;for(let x=0;x<p.length;++x){let y=v[p[x]].obj,_=v[p[x]].pos,b=y.name;g.order.push(y),g.hits.hasOwnProperty(b)||(g.hits[b]=[]),g.hits[b].push(_),g.hitCount++}return g}toColorId(e,t=256){let i=1/t,s=1/(t*t),r=Math.floor(e*s)%t,a=Math.floor(e*i)%t,o=e%t;return[r*i,a*i,o*i]}getRandomColorIdList(e=64){let t=Array.from({length:e},(r,a)=>a),i=parseInt(Math.floor(t.length/3));i+=i&1?0:1;let s=[];for(let r=0;r<e&&t.length!=0;++r){if(t.length==1){s.push(t.pop());break}let a=i*r%t.length,o=t.splice(a,1);s.push(o[0])}return s}buildHelper(e,t=ge.FLOOR){let i=e.getName(),s=this.roomColliderData[i][t],r=s.count;this.log("Building helper for "+i+" with "+r+" triangles");let a=new We,o=[],l=[],h=[],c=this.getRandomColorIdList(r),u=parseInt(r**.5),d=.1;Object.keys(s.faceVerts).forEach((x,y)=>{let _=s.faceVerts[x].verts;o.push(_[0].x,_[0].y+d,_[0].z),o.push(_[1].x,_[1].y+d,_[1].z),o.push(_[2].x,_[2].y+d,_[2].z),h.push(0,0,0);let b=this.toColorId(c[y],u);l.push(...b,...b,...b)});let m=new Float32Array(o),f=new Float32Array(l),v=new Float32Array(h);a.setAttribute("position",new Et(m,3)),a.setAttribute("colorId",new Et(f,3)),a.setAttribute("visibility",new Et(v,1));let p=new we({uniforms:{visibleFaceId:{value:-1}},vertexShader:`
        uniform float visibleFaceId;

        attribute vec3 colorId;
        attribute float visibility;

        varying vec4 vCd;
        varying float vVisibility;

        void main() {
          vVisibility = visibility*.5+.5;
          
          vCd = vec4( normalize(colorId), 0.50 ); // Pre-calculated Blue for visible face
          if (visibleFaceId == 1.0) {
            vCd = vec4( 0.0, 1.0, 0.0, 1.0 ); // Green for visible face
          }

          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        varying vec4 vCd;
        varying float vVisibility;

        void main() {

          vec4 Cd = vCd;
          //Cd.a *= vVisibility;
          //Cd.rgb = vec3( vVisibility );

          gl_FragColor = Cd;
        }
      `});p.side=Je,p.transparent=!0,p.depthTest=!0,p.depthWrite=!1,p.blending=Bs;let g=new nt(a,p);return g.renderOrder=2,this.roomColliderData[i][t].helper=g,g}stepHelper(e,t=ge.FLOOR){let i=e.getName(),s=this.roomColliderData[i][t],r=s.helper,a=s.faceGridGroup,l=1/s.gridSize,h=Math.floor(e.position.x*l),c=Math.floor(e.position.z*l),u=this.getGridKey(h,c),d=a[u];if(this.prevGridKey==u)return;let v=r.geometry.attributes.visibility.array}setHelperActiveFace(e,t=ge.FLOOR,i=-1){let a=this.roomColliderData[e][t].helper.material;a.uniforms.visibleFaceId.value=i}destroy(e){if(this.objNames.includes(e)){this.animMixer[e].stopAllAction(),delete this.animMixer[e],delete this.objects[e];let t=this.objNames.indexOf(e);this.objNames.splice(t,1)}}};var ml=class{constructor(e=null,t=null){this.pxlEnv=null,this.assetPath=e,this.verbose=!1,this.animInitEntry={rig:null,mesh:null,mixer:null,clips:{},state:null,hasConnection:!1,prevTime:-1,connected:[],connections:{}},this.objNames=[],this.objects={},this.animMixer={},this.msRunner=t,this.clock=new Fs}setDependencies(e){this.pxlEnv=e}log(e){this.verbose&&console.log(e)}initObject(e,t){let i=null,s=null,r=t.children.length,a=0,o=[...t.children],l=0,h=0,c=0,u=0;for(;a<r;){let m=o[a];switch(m.type){case"Bone":++h,i=m;break;case"Mesh":++l,m.visible=!1;break;case"SkinnedMesh":++c,s=m;break;case"Group":++u,o=o.concat(m.children),r=o.length;break;default:break}++a}let d=!1;if(i||(this.log("Error, No Bone/Rig Root Found; Please move your rig to the scene's root. Grouped rigs aren't supported yet."),d=!0),s||(this.log("Error, No SkinnedMesh Found; Please ensure your rig has a mesh to animate."),d=!0),d){console.log("Unable to prepare '"+e+"' for animation"),console.log("Group Count: "+u),console.log("Bone Root Found : "+(h>0)),console.log("Bone Count : "+h),console.log("Mesh Count: "+l),console.log("SkinnedMesh Count: "+c);return}if(!this.objNames.includes(e)){this.objNames.push(e);let m=Object.assign({},this.animInitEntry);m.rig=i,m.mesh=s,this.animMixer[e]=new Fn(i),m.mixer=this.animMixer[e],this.objects[e]=m;let f=new Cn;f.map=s.material.map,s.material=f}}addClips(e,t,i){if(!this.objNames.includes(e)){this.log("Error, '"+e+"' not found in Animation Manager");return}Object.keys(this.objects[e].clips).includes(t)&&this.log("Warning, '"+t+"' already exists in '"+e+"'");let a=this.animMixer[e].clipAction(i.animations[0]);this.objects[e].clips[t]=a}hasClip(e,t){return this.objNames.includes(e)?Object.keys(this.objects[e].clips).includes(t):!1}getMixer(e){return this.objNames.includes(e)?this.animMixer[e]:null}getRig(e){return this.objNames.includes(e)?this.objects[e].rig:null}getMesh(e){return this.objNames.includes(e)?this.objects[e].mesh:null}playClip(e,t){if(this.objNames.includes(e)&&Object.keys(this.objects[e].clips).includes(t)){let s=this.objects[e].clips[t];this.objects[e].state=t,this.objects[e].prevTime=-1,this.objects[e].hasConnection=this.objects[e].connected.includes(t),this.setWeight(e,t,1,!0),s.reset(),s.play()}}setWeight(e,t,i,s=!1){if(this.objNames.includes(e)){let r=Object.keys(this.objects[e].clips);if(r.includes(t)){let a=this.objects[e].clips[t];a.enabled=!0,a.setEffectiveTimeScale(1),a.setEffectiveWeight(i),s&&r.forEach(o=>{if(o!=t){let l=this.objects[e].clips[o];l.enabled=!1,l.setEffectiveTimeScale(1),l.setEffectiveWeight(0)}})}}}setStateConnections(e,t){if(this.objNames.includes(e)){let i=Object.keys(t);this.objects[e].connected=i,this.objects[e].connections=t}}step(e){if(this.objNames.includes(e)){if(!this.objects[e].hasConnection){this.animMixer[e].update(this.clock.getDelta());return}let i=this.objects[e].state;if(i){let r=this.objects[e].clips[i].time;if(this.objects[e].prevTime>r){let o=this.objects[e].connections[i],l=o[Math.floor(Math.random()*o.length)];this.playClip(e,l)}else this.animMixer[e].update(this.clock.getDelta()),this.objects[e].prevTime=r}else this.animMixer[e].update(this.clock.getDelta())}}destroy(e){if(this.objNames.includes(e)){this.animMixer[e].stopAllAction(),delete this.animMixer[e],delete this.objects[e];let t=this.objNames.indexOf(e);this.objNames.splice(t,1)}}};var Dr={verbose:wt.VERBOSE_LEVEL.NONE,pxlRoomRoot:"./pxlRooms",staticCamera:!1,autoCamera:!1,antiAliasing:wt.ANTI_ALIASING.LOW,collisionScale:{gridSize:50,gridReference:1e3},shadowMapBiasing:wt.SHADOW_MAP.BASIC,LoadEnvAssetFile:!1,skyHaze:wt.SKY_HAZE.OFF,loaderPhrases:["...loading the pixels..."]};var qs={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};var mi=class{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}},s0=new Is(-1,1,1,-1,0,1),zc=class extends We{constructor(){super(),this.setAttribute("position",new _e([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new _e([0,2,0,0,2,0],2))}},r0=new zc,Lr=class{constructor(e){this._mesh=new nt(r0,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,s0)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}};var at=class extends mi{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof we?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ji.clone(e.uniforms),this.material=new we({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Lr(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}};var Yn=class extends mi{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){let s=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let a,o;this.inverse?(a=0,o=1):(a=1,o=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),r.buffers.stencil.setFunc(s.ALWAYS,a,4294967295),r.buffers.stencil.setClear(o),r.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(s.EQUAL,1,4294967295),r.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),r.buffers.stencil.setLocked(!0)}},fl=class extends mi{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}};var Yi=class{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){let i=e.getSize(new G);this._width=i.width,this._height=i.height,t=new ct(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:zt}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new at(qs),this.copyPass.material.blending=Si,this.clock=new Fs}swapBuffers(){let e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){let t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());let t=this.renderer.getRenderTarget(),i=!1;for(let s=0,r=this.passes.length;s<r;s++){let a=this.passes[s];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),a.needsSwap){if(i){let o=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}Yn!==void 0&&(a instanceof Yn?i=!0:a instanceof fl&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){let t=this.renderer.getSize(new G);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;let i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(i,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}};var Ir=class extends mi{constructor(e,t,i=null,s=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=s,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new he}render(e,t,i){let s=e.autoClear;e.autoClear=!1;let r,a;this.overrideMaterial!==null&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=a),e.autoClear=s}};var Jp={name:"LuminosityHighPassShader",shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new he(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			float v = luminance( texel.xyz );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};var Ur=class n extends mi{constructor(e,t,i,s){super(),this.strength=t!==void 0?t:1,this.radius=i,this.threshold=s,this.resolution=e!==void 0?new G(e.x,e.y):new G(256,256),this.clearColor=new he(0,0,0),this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2);this.renderTargetBright=new ct(r,a,{type:zt}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let u=0;u<this.nMips;u++){let d=new ct(r,a,{type:zt});d.texture.name="UnrealBloomPass.h"+u,d.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(d);let m=new ct(r,a,{type:zt});m.texture.name="UnrealBloomPass.v"+u,m.texture.generateMipmaps=!1,this.renderTargetsVertical.push(m),r=Math.round(r/2),a=Math.round(a/2)}let o=Jp;this.highPassUniforms=ji.clone(o.uniforms),this.highPassUniforms.luminosityThreshold.value=s,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new we({uniforms:this.highPassUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),this.separableBlurMaterials=[];let l=[3,5,7,9,11];r=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2);for(let u=0;u<this.nMips;u++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(l[u])),this.separableBlurMaterials[u].uniforms.invSize.value=new G(1/r,1/a),r=Math.round(r/2),a=Math.round(a/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1;let h=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=h,this.bloomTintColors=[new M(1,1,1),new M(1,1,1),new M(1,1,1),new M(1,1,1),new M(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;let c=qs;this.copyUniforms=ji.clone(c.uniforms),this.blendMaterial=new we({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:Bs,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new he,this.oldClearAlpha=1,this.basic=new ki,this.fsQuad=new Lr(null)}dispose(){for(let e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(let e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose();for(let e=0;e<this.separableBlurMaterials.length;e++)this.separableBlurMaterials[e].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this.basic.dispose(),this.fsQuad.dispose()}setSize(e,t){let i=Math.round(e/2),s=Math.round(t/2);this.renderTargetBright.setSize(i,s);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(i,s),this.renderTargetsVertical[r].setSize(i,s),this.separableBlurMaterials[r].uniforms.invSize.value=new G(1/i,1/s),i=Math.round(i/2),s=Math.round(s/2)}render(e,t,i,s,r){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();let a=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),r&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=i.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);let o=this.renderTargetBright;for(let l=0;l<this.nMips;l++)this.fsQuad.material=this.separableBlurMaterials[l],this.separableBlurMaterials[l].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[l]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[l]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[l];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(i),this.fsQuad.render(e)),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=a}getSeperableBlurMaterial(e){let t=[];for(let i=0;i<e;i++)t.push(.39894*Math.exp(-.5*i*i/(e*e))/e);return new we({defines:{KERNEL_RADIUS:e},uniforms:{colorTexture:{value:null},invSize:{value:new G(.5,.5)},direction:{value:new G(.5,.5)},gaussianCoefficients:{value:t}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 invSize;
				uniform vec2 direction;
				uniform float gaussianCoefficients[KERNEL_RADIUS];

				void main() {
					float weightSum = gaussianCoefficients[0];
					vec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianCoefficients[i];
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(e){return new we({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}};Ur.BlurDirectionX=new G(1,0);Ur.BlurDirectionY=new G(0,1);var gl=class{constructor(e,t="Default",i){this.engine=null,this.scene=null,this.parentGroupList={},this.parentGroupList[t]=[],this.parentNameList=[],this.options=e,this.prevRenderMS=0,this.nextRenderMS=0,this.fps=i?30:60,this.renderInterval=1/this.fps;let s="Default";this.options.hasOwnProperty("pxlRoomName")?s=this.options.pxlRoomName:s=t,this.pxlRoomAbsRoot=s;let r=s.split("/");r.splice(0,1),r=r.join("/"),this.pxlRoomLclRoot=s,this.options.hasOwnProperty("pxlRoomRoot")?this.pxlRoomLclRoot=this.options.pxlRoomRoot:this.pxlRoomLclRoot="./"+s.split("/").pop(),this.mainRoom=t,this.bootRoom=t,this.bootLocation=null,this.currentRoom=t,this.roomNameList=[t],this.roomSubList={},this.roomSceneList={},this.roomSceneList[t]=this,this.roomPostGuiCalls=[],this.jmaCheckConnection=!1,this.checkContext=0,this.activeContext=!1,this.warpPortalTextures={},this.warpZoneRenderTarget=null,this.currentAudioZone=0,this.pxlUtils=null,this.pxlTimer=null,this.pxlAnim=null,this.pxlColliders=null,this.pxlAutoCam=null,this.pxlAudio=null,this.pxlFile=null,this.pxlVideo=null,this.pxlQuality=null,this.pxlUser=null,this.pxlShaders=null,this.pxlDevice=null,this.pxlCamera=null,this.pxlGuiDraws=null,this.renderLayerEnum={SCENE:0,PARTICLES:1,GLOW:2,SKY:3},this.cloud3dTexture=null,this.softNoiseTexture=null,this.detailNoiseTexture=null,this.chroAberUVTexture=null,this.blockAnimTexture=null,this.userScreenIntensity=new G(0,.8),this.portaluserScreenIntensity=new G(1,0),this.portalMtlRate=.7,this.mobile=i,this.camNear=.1,this.camFar=5e3,this.fogMult=new G(0,0),this.fogColor=new he(.07,.07,.1),this.fogColorSky=new he(.1,.1,.12),this.fogExp=3e-4,this.fog=new ws(this.fogColor,this.fogExp),this.listener=null,this.posted=!1,this.postIntro=!1,this.camLocation={},this.camInitPos=new M(0,15,0),this.camInitLookAt=new M(0,15,0),this.camThumbPos=new M(0,0,0),this.camThumbLookAt=new M(0,20,0),this.camReturnPos=new M(0,0,0),this.camReturnLookAt=new M(0,0,0),this.camLobbyPos=new M(0,15,0),this.camLobbyLookAt=new M(0,15,-100),this.pxlCamFOV={PC:60,MOBILE:80},this.pxlCamZoom=1,this.pxlCamAspect=1,this.pxlCamNearClipping=this.camNear,this.pxlCamFarClipping=this.camFar,this.groupList=[],this.geoList=[],this.geoLoadList=[],this.geoLoadListComplete=0,this.lightList=[],this.returnPortalGlowList=[],this.roomWarpVisuals={},this.proximityGeo=null,this.userAvatarGroup=new bt,this.warpVisualActive=!1,this.warpVisualMaxTime=[1.5,1],this.warpVisualStartTime=0,this.warpVisualFader=new G(0,1),this.warpVisualCmd=null,this.stepShaderFuncArr=[],this.mapMotionBlurPass=null,this.mapCopyMotionBlurPass=null,this.mapOverlayHeavyPass=null,this.mapOverlayPass=null,this.mapOverlaySlimPass=null,this.mapBoxAAPass=null,this.mapCrossAAPass=null,this.mapWorldPosMaterial=null,this.mapGlowPass=null,this.mapGlowMotionBlur=null,this.mapComposer=null,this.mapComposerMotionBlur=null,this.mapComposerBloom=null,this.mapComposerGlow=null,this.chroAberrationPass=null,this.chroAberrationRoomPass=null,this.lizardKingPass=null,this.lizardKingRoomPass=null,this.mapComposerWarpPass=null,this.blurScreenMerge=null,this.pxlRenderSettings={exposure:1,mult:1,bloomStrength:.5,bloomThresh:.6,bloomRadius:.05},this.exposureShiftActive=!1,this.delayComposer=null,this.delayPass=null,this.chroAberMult=new G(1,0),this.blurDirCur=new G(0,0),this.blurDirPrev=new G(0,0),this.shaderPasses={},this.roomComposer=null,this.roomRenderPass=null,this.roomBloomPass=null,this.roomGlowPass=null,this.blurComposer=null,this.glowPassMask=new G(1,0),this.objectClickable=[],this.objectClickableObjectList={},this.clickablePrevActiveObject=null,this.promoClickable=[],this.promoClickableObjectList={},this.promoPrevActiveObject=null,this.promoClickableLinks={},this.remoteVideoTextureList=[],this.remoteUserNameList=[],this.remoteUserMediaList={},this.remoteUserVideoList=[],this.remoteUserAudioList=[],this.camScreenData={count:0,prevCount:0,checkUserCount:!0,checkVideoStatus:!0,findCamCount:()=>{},videoObjectList:[],screenGeoList:[],screenClickable:[],screenMtlUniforms:[],userDataList:[],camFindInfoList:[]},this.curUserCount=0,this.prevUserCount=0,this.emit=(a,o)=>{}}setDependencies(e){this.scene=e.scene,this.pxlUtils=e.pxlUtils,this.pxlTimer=e.pxlTimer,this.pxlAnim=e.pxlAnim,this.pxlColliders=e.pxlColliders,this.pxlAutoCam=e.pxlAutoCam,this.pxlAudio=e.pxlAudio,this.pxlFile=e.pxlFile,this.pxlVideo=e.pxlVideo,this.pxlQuality=e.pxlQuality,this.pxlUser=e.pxlUser,this.pxlShaders=e.pxlShaders,this.pxlDevice=e.pxlDevice,this.pxlCamera=e.pxlCamera,this.pxlGuiDraws=e.pxlGuiDraws,this.emit=e.emit.bind(e)}log(e,t=ti.INFO){this.options.verbose>ti.INFO&&console.log(e)}init(){let e=Object.keys(this.options);Object.keys(Dr).forEach(s=>{e.includes(s)||(this.options[s]=Dr[s])}),Object.keys(this.roomSubList).forEach(s=>{this.roomSubList[s].init()})}boot(){}setBootRoom(e,t){console.log(e,t),this.bootRoom=e,this.bootLocation=t}postBoot(){this.pxlGuiDraws.togglePageDisplay(),this.roomSceneList[this.bootRoom].start(),this.posted=!0}postHelpIntro(){!this.pxlDevice.mobile&&!this.pxlAutoCam.enabled?this.pxlCamera.jogServerMemory():(this.pxlCamera.colliderValid=!0,this.pxlCamera.eventCheckStatus=!0,this.pxlCamera.colliderShiftActive=!0,this.pxlCamera.nearestFloorObjName="mobile",this.pxlCamera.colliderCurObjHit="AudioTrigger_2",this.pxlCamera.proximityScaleTrigger=!0,this.exposureShiftActive=!0,this.pxlDevice.mobile||(this.pxlAudio.play(),setTimeout(()=>{this.pxlAudio.initPlay()},100))),this.postIntro=!0}start(){this.init()}step(){if(this.pxlTimer.step(),this.pxlAudio.step(),this.pxlQuality.step(),this.pxlAutoCam.step()&&this.pxlCamera.step(),this.pxlGuiDraws.step(),this.stepWarpPass(),this.pxlTimer.msRunner.x>this.checkContext&&this.activeContext){this.checkContext=this.pxlTimer.msRunner.x+1;let e=document.createElement("canvas");try{let t=!!e.getContext("webgl")}catch{this.activeContext=!0,this.pxlGuiDraws.pxlNavCanvas.style.display="none"}}this.pxlDevice.mobile&&this.exposureShiftActive}async stop(){this.setExposure(0),Object.keys(this.roomSubList).forEach(t=>{this.roomSubList[t].stop()})}loadRoom(e){return new Promise((t,i)=>{this.log("Loading Room - ",e),import(`${this.pxlRoomLclRoot}/${e}/${e}.js`).then(r=>{let a=new r[e](e,`${this.pxlRoomLclRoot}/${e}/`,this.pxlTimer.msRunner,null,null,this.cloud3dTexture);a.setDependencies(this),a.camera=this.pxlCamera.camera,a.scene=new Cs,a.userAvatarGroup||(a.userAvatarGroup=new bt),a.scene.add(a.userAvatarGroup);var o={format:ut,antialias:!1,sortObjects:!0,alpha:!0,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?HalfFloatType:Ut};a.scene.renderTarget=new ct(this.pxlDevice.sW*this.pxlQuality.screenResPerc,this.pxlDevice.sH*this.pxlQuality.screenResPerc,o),a.scene.renderTarget.texture.format=ut,a.scene.renderTarget.texture.minFilter=Qe,a.scene.renderTarget.texture.magFilter=Qe,a.scene.renderTarget.texture.generateMipmaps=!1,a.scene.renderTarget.depthBuffer=!0,a.scene.renderTarget.depthTexture=new Ni(this.pxlDevice.sW*this.pxlQuality.screenResPerc,this.pxlDevice.sH*this.pxlQuality.screenResPerc),a.scene.renderTarget.depthTexture.format=Zt,a.scene.renderTarget.depthTexture.type=as,a.cloud3dTexture=this.cloud3dTexture,this.roomNameList.includes(e)||this.roomNameList.push(e),this.roomSceneList[e]=a,t(!0)})})}startAllRooms(){this.roomNameList.forEach(e=>{this.startRoom(this.roomSceneList[e])})}startRoom(e){e.active=!1,e.startTime=this.pxlTimer.msRunner.x}newSubRoom(e){this.roomSubList[e.getName()]=e}addToRooms(e){let t={};return this.roomNameList.forEach(i=>{let s=e.clone();this.roomSceneList[i].scene.add(s),t[i]=s}),t}addToRoomLayers(e,t=1){let i={};return this.roomNameList.forEach(s=>{let r=e.clone();this.roomSceneList[s].scene.add(r),i[s]=r,r.layers.set(t)}),i}addToRoomParents(e,t){let i={};return this.parentNameList.includes(t)||this.parentNameList.push(t),this.roomNameList.forEach(s=>{let r=e.clone();if(this.parentGroupList[s]||(this.parentGroupList[s]={}),!this.parentGroupList[s][t]){let a=new bt;this.parentGroupList[s][t]=a,this.roomSceneList[s].scene.add(a)}this.parentGroupList[s][t].add(r),i[s]=r}),i}buildRoomEnvironments(){this.log("Building Room Environments"),this.log(this.roomNameList);let e=[];this.roomNameList.forEach(t=>{this.roomSceneList[t].init(),this.roomSceneList[t].build&&this.roomSceneList[t].build()})}getArtistInfo(){return null}setFogHue(e=[0,0],t=[1,1]){let i=this.fog.color.getHSL(),s=[t[0]-e[0],t[1]-e[1]],r=Math.abs(Math.atan2(s[0],s[1])*.3183098861837907),a=(s[0]**2+s[1]**2)**.5/Math.max(this.pxlDevice.sW,this.pxlDevice.sH);this.fog.color.setHSL(r,a*.5+.3,a*.5),this.roomSceneList[this.currentRoom]&&this.roomSceneList[this.currentRoom].setFog&&this.roomSceneList[this.currentRoom].setFog(this.fog.color)}readShader(e=""){if(e=="script_fog"){if(this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.mapOverlayHeavyPass.enabled==!0)return this.mapOverlayHeavyPass.material;if(this.mapOverlayPass.enabled==!0)return this.mapOverlayPass.material;if(this.mapOverlaySlimPass.enabled==!0)return this.mapOverlaySlimPass.material}else{if(e=="script_dArrows")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.geoList.dArrows[0].material;if(e=="script_userScreens")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.camScreenData.screenGeoList[0].material;if(e=="script_warpZonePortals")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.returnPortalGlowList[0].material;if(e=="script_lizardking")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.lizardKingPass.material;if(e=="script_majorTom")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.pxlUser.sFieldPass.material;if(e=="script_fractalSubstrate")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.pxlUser.iZoomPass.material;if(e=="script_fractalEcho")return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.delayPass.material;{let t=e.split("_");if(t.shift(),t=t.join("_"),this.geoList[t])return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.geoList[t].material}}}setShader(e,t,i){let s,r=this.pxlGuiDraws.guiWindows.shaderGui.currentShader;if(r=="script_fog")this.mapOverlayHeavyPass.enabled==!0?s=this.mapOverlayHeavyPass.material:this.mapOverlayPass.enabled==!0?s=this.mapOverlayPass.material:this.mapOverlaySlimPass.enabled==!0&&(s=this.mapOverlaySlimPass.material);else if(r=="script_dArrows"){this.geoList.dArrows.forEach(a=>{s=a.material,s.vertexShader=t,s.fragmentShader=i,s.needsUpdate=!0});return}else if(r=="script_userScreens"){this.camScreenData.screenGeoList.forEach(a=>{s=a.material,s.vertexShader=t,s.fragmentShader=i,s.needsUpdate=!0});return}else if(r=="script_warpZonePortals"){this.returnPortalGlowList.forEach(a=>{s=a.material,s.vertexShader=t,s.fragmentShader=i,s.needsUpdate=!0});return}else if(r=="script_lizardking")s=this.lizardKingPass.material;else if(r=="script_majorTom")s=this.pxlUser.sFieldPass.material;else if(r=="script_fractalSubstrate")s=this.pxlUser.iZoomPass.material;else if(r=="script_fractalEcho")s=this.delayPass.material;else{let a=r.split("_");a.shift(),a=a.join("_"),this.geoList[a]&&(s=this.geoList[a].material)}s&&(s.vertexShader=t,s.fragmentShader=i,s.needsUpdate=!0)}getAssetTexture(e,t=null,i=null){this.log("Get Internal Texture - ",e);let s=this.pxlUtils.assetRoot+e;if(!t){let o=e.split(".").pop().toLowerCase();o=="jpg"||o=="jpeg"?t=3:o=="png"&&(t=4)}return i||(i={encoding:Qt,magFilter:Qe,minFilter:Qe}),this.pxlUtils.loadTexture(s,t,i)}buildBackgroundObject(e={},t=null,i=null){let s=new PlaneBufferGeometry,r={};Object.assign(r,e),(t==null||typeof t!="string")&&(t=this.pxlShaders.scene.bgScreenVert()),(i==null||typeof i!="string")&&(i=this.pxlShaders.scene.bgScreenFrag());let a=this.pxlFile.pxlShaderBuilder(r,t,i);a.side=DoubleSide,a.depthTest=!0,a.depthWrite=!1;let o=new Mesh(s,a);return o.frustumCulled=!1,o}clickUserDetect(){let e=this.roomSceneList[this.currentRoom],t=this.pxlUtils.screenToNDC(this.pxlDevice.mouseX,this.pxlDevice.mouseY,this.pxlDevice.sW,this.pxlDevice.sH),i={};if(e.hasColliderType(ge.CLICKABLE)){let s=e.getColliders(ge.CLICKABLE);i=this.pxlColliders.castInteractRay(this.currentRoom,s,this.pxlCamera.camera,t)}if(i.hasOwnProperty("order")&&i.order.length>0){let s=i.order[0];this.clickableActions(s.name);return}if(i={},i=this.pxlColliders.castInteractRay(this.currentRoom,this.promoClickable,this.pxlCamera.camera,t),i.hasOwnProperty("order")&&i.order.length>0){let s=i.order[0];this.promoActions(s)}}clickableActions(e=null){e=="CallToAction"&&this.clickablePrevActiveObject&&(this.pxlGuiDraws.ctaBuildPopup(),this.objectClickableObjectList[this.clickablePrevActiveObject].Inactive.visible=!0,this.objectClickableObjectList[this.clickablePrevActiveObject].Hover.visible=!1,this.clickablePrevActiveObject=null)}promoActions(e=null){let t=e.userData.video,i=e.name;if(this.promoClickableLinks.hasOwnProperty(t)){var s=window.open(this.promoClickableLinks[t],"_blank");s.focus()}}hoverUserDetect(){let e=this.roomSceneList[this.currentRoom],t=this.pxlUtils.screenToNDC(this.pxlDevice.mouseX,this.pxlDevice.mouseY,this.pxlDevice.sW,this.pxlDevice.sH),i={};if(e.hasColliderType(ge.CLICKABLE)||e.hasColliderType(ge.HOVERABLE)){let s=[...e.getColliders(ge.CLICKABLE),...e.getColliders(ge.HOVERABLE)];i=this.pxlColliders.castInteractRay(this.currentRoom,s,this.pxlCamera.camera,t)}if(i.hasOwnProperty("order")&&i.order.length>0){let s=i.order[0];this.pxlDevice.setCursor("help"),this.objectClickableObjectList[s.name]&&(this.clickablePrevActiveObject==null&&(this.clickablePrevActiveObject=s.name),this.objectClickableObjectList[s.name].Inactive.visible=!1,this.objectClickableObjectList[s.name].Hover.visible=!0);return}else this.clickablePrevActiveObject&&(this.objectClickableObjectList[this.clickablePrevActiveObject].Inactive.visible=!0,this.objectClickableObjectList[this.clickablePrevActiveObject].Hover.visible=!1,this.clickablePrevActiveObject=null),this.pxlDevice.setCursor("grab");if(i={},i=this.pxlColliders.castInteractRay(this.currentRoom,this.promoClickable,this.pxlCamera.camera,t),i.hasOwnProperty("order")&&i.order.length>0){let s=i.order[0];this.pxlDevice.setCursor("alias"),this.promoClickableObjectList[s.name]&&(this.promoPrevActiveObject==null&&(this.promoPrevActiveObject=s.name),this.promoClickableObjectList[s.name].x=1)}else this.promoPrevActiveObject&&(this.promoClickableObjectList[this.promoPrevActiveObject].x=.1,this.promoPrevActiveObject=null),this.pxlDevice.setCursor("grab")}updateCompUniforms(e=null){e&&(this.pxlRenderSettings.exposure=e*this.pxlRenderSettings.mult),this.mapOverlayPass&&(this.mapMotionBlurPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlayHeavyPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlayPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlaySlimPass.uniforms.exposure.value=this.pxlRenderSettings.exposure)}sendRoomMessage(e,t,i){this.roomSceneList[e]&&this.roomSceneList[e].onMessage(t,i)}buildComposers(){this.mapWorldPosMaterial=new we({uniforms:{camNear:{type:"f",value:this.pxlCamera.camera.near},camFar:{type:"f",value:this.pxlCamera.camera.far}},vertexShader:this.pxlShaders.rendering.worldPositionVert(),fragmentShader:this.pxlShaders.rendering.worldPositionFrag()}),this.mapWorldPosMaterial.side=ft,this.mapWorldPosMaterial.name="mapWorldPosMaterial",this.blurComposer=new Yi(this.engine),this.shaderPasses.blurXShaderPass=new at(new we({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:null},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.directionalBlurPass("pDiffuse",[1,0],4,1.8),defines:{}}),"tDiffuse"),this.shaderPasses.blurXShaderPass.material.uniforms.pDiffuse=this.scene.renderGlowTarget.texture,this.shaderPasses.blurXShaderPass.material.transparent=!0,this.shaderPasses.blurXShaderPass.needsSwap=!0,this.shaderPasses.blurXShaderPass.enabled=!1,this.shaderPasses.blurXShaderPass.name="blurXShaderPass",this.blurComposer.addPass(this.shaderPasses.blurXShaderPass),this.shaderPasses.dirBlurCopyPass=new at(qs),this.shaderPasses.dirBlurCopyPass.enabled=!1,this.shaderPasses.dirBlurCopyPass.name="dirBlurCopyPass",this.blurComposer.addPass(this.shaderPasses.dirBlurCopyPass),this.shaderPasses.blurYShaderPass=new at(new we({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:null},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.directionalBlurPass("pDiffuse",[0,1],4,1.3),defines:{}}),"tDiffuse"),this.shaderPasses.blurYShaderPass.material.uniforms.pDiffuse=this.scene.renderGlowTarget.texture,this.shaderPasses.blurYShaderPass.material.transparent=!0,this.shaderPasses.blurYShaderPass.enabled=!1,this.shaderPasses.blurYShaderPass.name="blurYShaderPass",this.blurComposer.addPass(this.shaderPasses.blurYShaderPass),this.shaderPasses.scatterMixShaderPass=new at(new we({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:null},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.mixBlurShaderPass(),defines:{}}),"tDiffuse"),this.shaderPasses.scatterMixShaderPass.material.uniforms.pDiffuse=this.scene.renderGlowTarget.texture,this.shaderPasses.scatterMixShaderPass.material.transparent=!0,this.shaderPasses.scatterMixShaderPass.enabled=!1,this.shaderPasses.scatterMixShaderPass.name="scatterMixShaderPass",this.blurComposer.addPass(this.shaderPasses.scatterMixShaderPass),this.options.antiAliasing==qn.LOW?this.shaderPasses.scatterMixShaderPass.enabled=!0:this.options.antiAliasing==qn.MEDIUM?(this.shaderPasses.blurXShaderPass.enabled=!0,this.shaderPasses.dirBlurCopyPass.enabled=!0,this.shaderPasses.blurYShaderPass.enabled=!0):this.options.antiAliasing==qn.HIGH&&(this.shaderPasses.blurXShaderPass.enabled=!0,this.shaderPasses.dirBlurCopyPass.enabled=!0,this.shaderPasses.blurYShaderPass.enabled=!0,this.shaderPasses.scatterMixShaderPass.enabled=!0),this.mapComposerMotionBlur=new Yi(this.engine),this.mapMotionBlurPass=new at(new we({uniforms:{tDiffuse:{value:null},rDiffuse:{value:null},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camRotXYZ:{value:this.pxlCamera.camRotXYZ},blurDirCur:{type:"f",value:this.blurDirCur},blurDirPrev:{type:"f",value:this.blurDirPrev},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.motionBlurPostProcess(this.pxlDevice.screenRes,this.pxlDevice.mobile),defines:{}}),"tDiffuse"),this.mapMotionBlurPass.material.uniforms.rDiffuse=this.scene.renderTarget.texture,this.mapMotionBlurPass.needsSwap=!0,this.mapMotionBlurPass.name="mapMotionBlurPass",this.mapComposerMotionBlur.addPass(this.mapMotionBlurPass),this.mapMotionBlurPass.enabled=!1,this.mapComposerMotionBlur.renderToScreen=!1,this.mapComposerGlow=new Yi(this.engine);let e=new Ir(this.scene,this.pxlCamera.camera);this.mapComposerGlow.addPass(e),this.blurScreenMerge=new at(new we({uniforms:{tDiffuse:{value:null},rDiffuse:{value:null},mtDiffuse:{value:null},exposure:{type:"f",value:this.pxlRenderSettings.exposure}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.compLayersPostProcess(),defines:{}}),"tDiffuse"),this.blurScreenMerge.material.uniforms.rDiffuse=this.scene.renderTarget.texture,this.blurScreenMerge.material.uniforms.mtDiffuse=this.scene.renderTarget.texture,this.blurScreenMerge.needsSwap=!0,this.blurScreenMerge.name="blurScreenMerge",this.mapComposerGlow.addPass(this.blurScreenMerge);let t=new at(qs);t.name="glowCopyPassBlur",this.mapComposerGlow.addPass(t),this.mapComposerGlow.renderToScreen=!1,this.mapComposerGlow.autoClear=!0,this.mapOverlayHeavyPass=new at(new we({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:null},bloomTexture:{value:null},sceneDepth:{value:null},scenePos:{value:null},noiseTexture:{value:this.cloud3dTexture},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlayHeavyShader(),defines:{}}),"tDiffuse"),this.mapOverlayHeavyPass.material.uniforms.rDiffuse=this.scene.renderTarget.texture,this.mapOverlayHeavyPass.material.uniforms.bloomTexture=this.mapComposerGlow.renderTarget2.texture,this.mapOverlayHeavyPass.material.uniforms.sceneDepth=this.scene.renderTarget.depthTexture,this.mapOverlayHeavyPass.material.uniforms.scenePos=this.scene.renderWorldPos.texture,this.mapOverlayHeavyPass.needsSwap=!0,this.mapOverlayHeavyPass.name="mapOverlayHeavyPass",this.mapOverlayPass=new at(new we({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:null},bloomTexture:{value:null},sceneDepth:{value:null},scenePos:{value:null},noiseTexture:{value:this.cloud3dTexture},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlayShader(),defines:{}}),"tDiffuse"),this.mapOverlayPass.material.uniforms.rDiffuse=this.scene.renderTarget.texture,this.mapOverlayPass.material.uniforms.bloomTexture=this.mapComposerGlow.renderTarget2.texture,this.mapOverlayPass.material.uniforms.sceneDepth=this.scene.renderTarget.depthTexture,this.mapOverlayPass.material.uniforms.scenePos=this.scene.renderWorldPos.texture,this.mapOverlayPass.needsSwap=!0,this.mapOverlayPass.name="mapOverlayPass",this.mapOverlaySlimPass=new at(new we({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:null},bloomTexture:{value:null},sceneDepth:{value:null},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlaySlimShader(),defines:{}}),"tDiffuse"),this.mapOverlaySlimPass.material.uniforms.rDiffuse=this.scene.renderTarget.texture,this.mapOverlaySlimPass.material.uniforms.bloomTexture=this.mapComposerGlow.renderTarget2.texture,this.mapOverlaySlimPass.material.uniforms.sceneDepth=this.scene.renderTarget.depthTexture,this.mapOverlaySlimPass.needsSwap=!0,this.mapOverlaySlimPass.name="mapOverlaySlimPass",this.mapGlowPass=new at(new we({uniforms:{time:{value:this.pxlTimer.msRunner},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:null},sceneDepth:{value:null}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.glowPassPostProcess(),defines:{}}),"tDiffuse"),this.mapGlowPass.material.uniforms.rDiffuse=this.scene.renderGlowTarget.texture,this.mapGlowPass.material.uniforms.sceneDepth=this.scene.renderTarget.depthTexture,this.mapGlowPass.needsSwap=!0,this.mapGlowPass.name="mapGlowPass",this.mapComposer=new Yi(this.engine),this.mapComposer.addPass(this.mapOverlayHeavyPass),this.mapComposer.addPass(this.mapOverlayPass),this.mapComposer.addPass(this.mapOverlaySlimPass),this.mapComposer.addPass(this.mapGlowPass),this.mapOverlayHeavyPass.enabled=!1,this.mapOverlayPass.enabled=!1,this.pxlUser.lKingWarp=new G(...this.pxlUser.lKingInactive),this.lizardKingPass=new at(new we({uniforms:{tDiffuse:{value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.lKingPostProcess(),defines:{}}),"tDiffuse"),this.pxlUser.lKingPass=this.lizardKingPass,this.lizardKingPass.enabled=!1,this.pxlUser.lKingPass.name="lizardKingPass",this.pxlUser.sFieldPass=new at(new we({uniforms:{tDiffuse:{value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture},starTexture:{value:this.pxlUtils.loadTexture(this.pxlUtils.assetRoot+"uv_starNoise.jpg",null,{encoding:Qt})}},vertexShader:this.pxlShaders.rendering.sFieldPostProcessVert(),fragmentShader:this.pxlShaders.rendering.sFieldPostProcessFrag(),defines:{}}),"tDiffuse"),this.pxlUser.sFieldPass.enabled=!1,this.pxlUser.sFieldPass.name="sFieldPass",this.pxlUser.iZoomPass=new at(new we({uniforms:{tDiffuse:{value:null},tDiffusePrev:{type:"t",value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.iZoomPostProcess(),defines:{}}),"tDiffuse"),this.pxlUser.iZoomPass.enabled=!1,this.pxlUser.iZoomPass.name="iZoomPass",this.chroAberrationPass=new at(new we({uniforms:{tDiffuse:{value:null},ratio:{value:this.pxlDevice.screenRes},warpMult:{value:this.chroAberMult},chroAberUVTexture:{value:this.chroAberUVTexture},lKing:{value:this.pxlUser.lKingWarp}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.chroAberPostProcess(),defines:{}}),"tDiffuse"),this.chroAberrationPass.enabled=!1,this.chroAberrationPass.name="chroAberrationPass",this.mapComposer.addPass(this.chroAberrationPass),this.mapComposer.addPass(this.lizardKingPass),this.mapComposer.addPass(this.pxlUser.sFieldPass),this.mapComposer.addPass(this.pxlUser.iZoomPass),this.mapComposerWarpPass=new at(new we({uniforms:{time:{value:this.pxlTimer.msRunner},fader:{value:this.warpVisualFader},tDiffuse:{value:null},noiseTexture:{value:this.cloud3dTexture},animTexture:{value:this.blockAnimTexture}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.warpPostProcess(),defines:{}}),"tDiffuse"),this.mapComposerWarpPass.needsSwap=!0,this.mapComposerWarpPass.enabled=!1,this.mapComposerWarpPass.name="mapComposerWarpPass",this.mapComposer.addPass(this.mapComposerWarpPass),this.mapBoxAAPass=new at(new we({uniforms:{tDiffuse:{value:null},resUV:{type:"f",value:this.pxlDevice.screenRes},ratio:{type:"f",value:1},gamma:{type:"f",value:this.pxlDevice.gammaCorrection}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.boxAntiAliasPass(),defines:{}}),"tDiffuse"),this.mapBoxAAPass.enabled=!1,this.mapBoxAAPass.name="mapBoxAAPass",this.mapComposer.addPass(this.mapBoxAAPass),this.mapCrossAAPass=new at(new we({uniforms:{tDiffuse:{value:null},resUV:{type:"f",value:this.pxlDevice.screenRes},ratio:{type:"f",value:1},gamma:{type:"f",value:this.pxlDevice.gammaCorrection}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.crossAntiAliasPass(),defines:{}}),"tDiffuse"),this.mapCrossAAPass.enabled=!1,this.mapCrossAAPass.name="mapCrossAAPass",this.mapComposer.addPass(this.mapCrossAAPass),this.mapComposer.autoClear=!0;let i=this.roomSceneList[this.bootRoom].scene;this.roomComposer=new Yi(this.engine),this.roomRenderPass=new Ir(i,this.pxlCamera.camera),this.roomRenderPass.name="roomRenderPass",this.roomComposer.addPass(this.roomRenderPass),this.roomNameList.forEach(r=>{if(r!=this.mainRoom){let a=this.roomSceneList[r].applyRoomPass(this.roomComposer);a&&(a.enabled=!1,this.roomComposer.addPass(a))}}),this.roomBloomPass=new Ur(new G(this.pxlDevice.mapW*.5,this.pxlDevice.mapH*.5),1.5,.8,.85),this.roomBloomPass.threshold=this.pxlRenderSettings.bloomThresh,this.roomBloomPass.strength=this.pxlRenderSettings.bloomStrength,this.roomBloomPass.radius=this.pxlRenderSettings.bloomRadius,this.roomBloomPass.name="roomBloomPass",this.roomComposer.addPass(this.roomBloomPass),this.roomGlowPass=new at(new we({uniforms:{time:{value:this.pxlTimer.msRunner},ratio:{type:"f",value:1},tDiffuse:{value:null},gDiffuse:{value:null},rDiffuse:{value:null},sceneDepth:{value:null}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.glowPassPostProcess(),defines:{}}),"tDiffuse"),this.roomGlowPass.material.uniforms.gDiffuse=this.blurComposer.writeBuffer.texture,this.roomGlowPass.material.uniforms.rDiffuse=this.blurComposer.renderTarget2.texture,this.roomGlowPass.material.uniforms.sceneDepth=this.scene.renderTarget.depthTexture,this.roomGlowPass.needsSwap=!0,this.roomGlowPass.name="roomGlowPass",this.roomComposer.addPass(this.roomGlowPass),this.roomComposer.addPass(this.chroAberrationPass),this.roomComposer.addPass(this.lizardKingPass),this.roomComposer.addPass(this.pxlUser.sFieldPass),this.roomComposer.addPass(this.pxlUser.iZoomPass),this.roomComposer.addPass(this.mapComposerWarpPass),this.roomComposer.addPass(this.mapCrossAAPass),this.roomComposer.addPass(this.mapBoxAAPass),this.roomComposer.autoClear=!0,this.delayComposer=new Yi(this.engine);let s=new Ir(this.scene,this.pxlCamera.camera);this.delayPass=new at(new we({uniforms:{tDiffuse:{value:null},roomComposer:{type:"f",value:0},tDiffusePrev:{value:null},tDiffusePrevRoom:{value:null}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.textureStorePass(),defines:{}}),"tDiffuse"),this.delayPass.material.uniforms.tDiffusePrev=this.mapComposer.renderTarget1.texture,this.delayPass.material.uniforms.tDiffusePrevRoom=this.roomComposer.renderTarget1.texture,this.delayPass.clear=!1,this.delayComposer.addPass(this.delayPass),this.delayComposer.renderToScreen=!1,this.delayComposer.autoClear=!1,this.pxlUser.iZoomPass.uniforms.tDiffusePrev.value=this.delayComposer.renderTarget2.texture}setExposure(e){e=e*1,this.pxlCamera.uniformScalars.exposureUniformBase=e,this.updateCompUniforms(e)}stepWarpPass(){if(this.warpVisualActive){let e=(this.pxlTimer.curMS-this.warpVisualStartTime)/this.warpVisualMaxTime[this.pxlCamera.warpType],t=Math.min(1,e*3),i=Math.min(1,3-e*3);t==1&&i==1&&this.pxlCamera.warpActive&&this.pxlCamera.warpCamRun(),this.warpVisualFader.x=t,this.warpVisualFader.y=i,i<=0&&this.stopWarpVisual()}}checkUserVideoStatus(e){}remoteUserUpdateMedia(e,t=!1,i=null){}userRemoveRemoteData(e){}stepShaderValues(){this.stepShaderFuncArr.forEach(e=>{typeof e=="object"?e.step():typeof e=="string"&&(console.log("Does this trigger?"),console.log(e))})}stepAnimatedObjects(){this.pxlUser.itemListNames.length>0&&this.pxlUser.itemListNames.forEach(e=>{this.pxlUser.itemList[e].rotation.y=this.pxlTimer.msRunner.x*this.pxlUser.itemRotateRate})}initWarpVisual(e){this.warpVisualActive=!0,this.warpVisualFader.x=0,this.warpVisualFader.y=1,this.warpVisualStartTime=this.pxlTimer.curMS,this.mapComposerWarpPass.enabled=!0}stopWarpVisual(){this.warpVisualActive=!1,this.warpVisualFader.x=1,this.warpVisualFader.y=0,this.mapComposerWarpPass.enabled=!!this.pxlUser.iZoom}prepPortalRender(){}cleanupPortalRender(){}setPortalTexture(e,t){this.roomWarpVisuals[t].material.map=e}warpPortalQueue(){return Object.keys(this.roomSceneList).reverse()}getSceneSnapshot(e){let t=this.roomSceneList[e];this.engine.setRenderTarget(t.warpZoneRenderTarget),t.prepPortalRender(),this.engine.render(t.scene||t.scene,this.pxlCamera.camera),t.cleanupPortalRender(),this.engine.setRenderTarget(null)}mapRender(e=!0){if(this.pxlTimer.active&&this.step(),this.pxlTimer.curMS>this.nextRenderMS||e==!1){this.prevRenderMS=this.nextRenderMS,this.nextRenderMS=this.pxlTimer.curMS+this.renderInterval,this.stepShaderValues(),this.stepAnimatedObjects();let t=this.roomSceneList[this.currentRoom];t&&t.booted&&(t.step(),t.camera.layers.disable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(t.scene.renderTarget),this.engine.clear(),this.engine.render(t.scene,t.camera),this.engine.setRenderTarget(null),t.camera.layers.enable(this.renderLayerEnum.SKY),this.mapComposerGlow&&(this.pxlQuality.settings.bloom||this.pxlQuality.settings.fog)&&this.mapComposerGlow.render(),this.mapRenderBlurStack(t,t.camera,t.scene,this.scene.renderGlowTarget),this.roomComposer.render()),this.pxlUser.iZoom&&this.delayComposer.render()}this.pxlTimer.active&&e&&requestAnimationFrame(()=>{this.mapRender()})}mapRenderBlurStack(e,t,i,s){if(this.blurComposer){e.geoList.GlowPass&&(e.geoList.GlowPass.forEach(o=>{if(o.userData.hasOwnProperty("GlowPerc")){let l=o.userData.GlowPerc;o.material.hasOwnProperty("uniforms")&&o.material.uniforms.mult&&(o.material.uniforms.mult.value=l)}}),e.geoList.hasOwnProperty("GlowPassMask")&&e.geoList.GlowPassMask.forEach(o=>{o.material.uniforms&&o.material.uniforms.cdMult&&(o.material.uniforms.cdMult.value=0)})),t.layers.disable(this.renderLayerEnum.SCENE),t.layers.disable(this.renderLayerEnum.PARTICLES),t.layers.disable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(s);let r=0,a=i.background.clone();i.background.set(r),this.engine.setClearColor(r,0),this.engine.render(i,t),i.background.r=a.r,i.background.g=a.g,i.background.b=a.b,t.layers.enable(this.renderLayerEnum.SCENE),t.layers.enable(this.renderLayerEnum.PARTICLES),t.layers.enable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(null),e.geoList.GlowPass&&(e.geoList.GlowPass.forEach(o=>{o.userData.hasOwnProperty("GlowPerc")&&o.material.hasOwnProperty("uniforms")&&o.material.uniforms.mult&&(o.material.uniforms.mult.value=1)}),e.geoList.hasOwnProperty("GlowPassMask")&&e.geoList.GlowPassMask.forEach(o=>{o.material.uniforms&&o.material.uniforms.cdMult&&(o.material.uniforms.cdMult.value=1)})),this.blurComposer.render(),this.roomBloomPass.enabled=!1}}};var vt=class{static svgPromise(e,t,i=null,s=null){let r={},a=document.getElementById(t);if(!a)return;i!=null&&a.classList.add(i);let o=this,l=Promise.resolve(qi.getURLContent(e));return l.then(h=>{a.innerHTML=h,r.svg=a.getElementsByTagName("svg")[0],s!=null&&r.svg.classList.add(s)}),r.promise=l,r}static svgRawPromise(e){let t={},i=this;return Promise.resolve(qi.getURLContent(e)).then(r=>{let a=document.createElement("div");a.innerHTML=r,t.svg=a.getElementsByTagName("svg")[0]}),t}static svgIconPromise(e,t,i,s=null,r=null){let a=this,o={};o.hover=null,o.mute=null,o.caret=null,o.indicator=null,o.waiting=[],o.state=null,o.eventType=i;let l=document.getElementById(t);if(!l)return;r?l.classList.add(r):l.classList.add("iconStyle"),o.parent=l.parentNode,o.parent.classList.add("iconHover"),o.parent.addEventListener("click",c=>{a.iconEvent("click",o,i)});let h=Promise.resolve(qi.getURLContent(e));return h.then(c=>{if(l.innerHTML=c,o.svg=l.getElementsByTagName("svg")[0],o.svg){r?o.svg.classList.add(r):o.svg.classList.add("iconStyle");let u=o.svg.children,d=o.svg.getAttribute("xmlns"),m=o.svg.getAttribute("height"),f=o.svg.getAttribute("width");for(let p=0;p<u.length;++p){let g=u[p];if(t=="speakerIcon"){let y=l.getAttribute("xmlns"),_=parseInt(m),b=parseInt(f),S=document.createElementNS(y,"rect");S.setAttribute("x",-1),S.setAttribute("y",-1),S.setAttribute("fill","white"),S.setAttribute("fill-opacity",0),S.setAttribute("height",m+2),S.setAttribute("width",f+2),S.setAttribute("z-index",-1),l.appendChild(S),o.hover=S,o.svg.setAttribute("fill-opacity",this.toggleOpacity[0])}let x=g.getAttribute("id");if(x=="mute"){o.mute=g,o.mute.style.transformOrigin="50% 50%",o.mute.style.filter="alpha(opacity=0)",o.mute.style.opacity="0",o.mute.style.transform="scale(0,0)",o.mute.style.transition="scale 1s, opacity .5s, filter .5s";let y=document.createElement("style");y.type="text/css",y.innerHTML=`
                                @keyframes loadingSpinner{
                                    0%{
                                        transform: rotate(0deg);
                                    }
                                    100%{
                                        transform: rotate(360deg);
                                    }
                                }
                            `,o.svg.appendChild(y);let _=Math.max(2,Math.min(m,f)*.25),b=f*.5,S=m*.5,E=document.createElementNS(d,"path");E.setAttribute("d",` M ${b} ${S-_} A ${_} ${_} 0 1 1 ${b-_} ${S} `),E.setAttribute("stroke","white"),E.setAttribute("stroke-width","2"),E.style.display="none",E.style.transformOrigin="50% 50%",E.style.animation="loadingSpinner 1s linear infinite",E.style.animationDuration="2s",E.style.animationPlayState="paused",o.indicator=E,o.svg.appendChild(E),this.toggleIcon(o,s)}else x=="caret"?(o.caret=g,o.caret.style.transformOrigin="50% 50%",o.caret.style.transition="transform .5s",this.flipIcon(o,!1)):x=="state"?(g.style.display="none",o.state=g):o.waiting.push(g)}let v=document.createElementNS(d,"rect");v.classList.add("iconHover"),v.setAttribute("x",0),v.setAttribute("y",0),v.setAttribute("height",m),v.setAttribute("width",f),o.svg.appendChild(v)}}),o.promise=h,o}static svgButtonPromise(e,t,i=null,s=!1,r=null){if(typeof t=="string"&&(t=document.getElementById(t),!t))return;let a=this;Promise.resolve(qi.getURLContent(e)).then(l=>{t.innerHTML=l;let h=t.getElementsByTagName("svg");if(h.length>0&&(h=h[0],i&&(i=typeof i=="string"?[i]:i,i.forEach(c=>{h.classList.add(c)})),s)){let c=h.getAttribute("xmlns"),u=parseInt(h.getAttribute("height")),d=parseInt(h.getAttribute("width")),m=document.createElementNS(c,"rect");m.setAttribute("x",-1),m.setAttribute("y",-1),m.setAttribute("fill","white"),m.setAttribute("fill-opacity",0),m.setAttribute("height",u+2),m.setAttribute("width",d+2),m.setAttribute("z-index",-1),h.appendChild(m);let f=h.getElementById("state");f&&f.setAttribute("fill-opacity",this.toggleOpacity[0]),r&&(h.onclick=v=>{a.svgCheckClick(v,r)},a.pxlDevice.mobile?(h.ontouchstart=v=>{a.svgStylize(v,!0)},h.ontouchend=v=>{a.svgStylize(v,!1)}):(h.onmouseover=v=>{a.svgStylize(v,!0)},h.onmouseout=v=>{a.svgStylize(v,!1)}))}})}};var vl=class{constructor(e,t="Metal-Asylum",i="images/assets/",s="images/GUI/"){this.projectTitle=t,this.verbose=e,this.sW=window.innerWidth,this.sH=window.innerHeight,this.mobile=!1,this.pxlFile=null,this.pxlCookie=null,this.pxlTimer=null,this.pxlAudio=null,this.pxlUtils=null,this.pxlUser=null,this.pxlDevice=null,this.pxlAutoCam=null,this.pxlCamera=null,this.pxlNavCanvas=null,this.pxlQuality=null,this.pxlEnv=null,this.assetRoot=i,this.guiRoot=s,this.introHelpActive=!0,this.branding={title:t,loader:s+".svg",logo:s+".svg",medalion:s+".svg",stack:s+".svg"},this.loaderPhrases=["Loading..."],this.lableBoxSize=40,this.optionWidthRound=10,this.optionWidthAdd=25,this.deviceOptionHeight=[0,300],this.pxlLoader=null,this.pxlLoaderCount=0,this.pxlLoaderTotal=5,this.hudBlock={obj:null,active:!1},this.userControlBlock=null,this.hudVisibility=!0,this.hudIcons={},this.hudElements={},this.guiWindows={},this.msgCount=0,this.hudMedalionBar=null,this.userProfileMessageInput=null,this.userProfileReturnMessage=null,this.userCountObj=null,this.userCountCur=0,this.messageCountObj=null,this.messageCountCur=0,this.chatMessageDisplay=null,this.chatMessageInput=null,this.camChoicesActive=!1,this.micChoicesActive=!1,this.pxlNavData={active:!1,gui:null,height:null,fpsSet:0,fps:null,dl:null,ul:null},this.djPlayerObj=null,this.buildGuiStatus={hud:!1,userTopBar:!1,bottomBar:!1,djPlayer:!1,roomControls:!1,verseList:!1,medalion:!0,loadingBranding:!1},this.requestVerseList=!1,this.verseList=[],this.verseUserCounts={},this.verseTitlePrefix="",this.verseTitleSuffix="'s Room",this.multiverseData={fromVerse:null,toVerse:null,electedVerse:null,mitosisState:!1,mitosisBufferTime:15,mitosisTime:0,mitosisUpdateTime:0},this.textDescriptions={chatIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">C</span> )</span><br>chat',pos:[1,-1.5]},multiverseIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">U</span> )</span><br>multiverse<br>selection',pos:[0,-1.3]},djPlayerVolumeParent:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">B</span> )</span><br>music volume',pos:[0,-1.5]},speakerIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute people<br>pick audio output',pos:[0,-1.5]},micIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">M</span> )</span><br>mute/pick<br>mic input',pos:[0,-1.5]},camIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">V</span> )</span><br>enable/pick<br>video input',pos:[0,-1.5]},helpIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">?</span> )</span><br>help &<br>instructions',pos:[0,-1.5]},infoIconParent:{text:'Info <span class="helpHotKeyParent">( <span class="helpHotKey">I</span> )</span>',pos:[-1,0],offset:[-10,0]},settingsIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">G</span> )</span><br>graphics &<br>navigation',pos:[0,-1.5]},muteAllIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute all users',pos:[1,0]},fullScreenIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">F</span> )</span><br>toggle full screen',pos:[-1,0]},videoQualityIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">H</span> )</span><br>video quality settings',pos:[-1,0]},statsIcon:{text:"jitsi connection status; toggle connection ",pos:[1,0]},usersIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">T</span> )</span> user moderator tools',pos:[1,0]},ft2Button:{text:"Environment",pos:[-1,0],offset:[-10,0]},ft3Button:{text:"Invite Friends",pos:[-1,0],offset:[-10,0]},hud_userCount:{text:"# of People",pos:[-1,0],offset:[-10,0]}},this.loading=!0,this.disclaimer=!1,this.mapPrompt=null,this.mapPromptBG=null,this.delayLoadChatWindow=!1,this.renderSettings=null,this.controlSettings=null,this.shaderEditorDisplay=null,this.radioControls=[],this.controlState=[!0,!1,!1,!1],this.controlToggle=[!0,!0,!1,!1],this.buttonPadding=6,this.toggleOpacity=[.6,1],this.qualityText=["Netbook","Laptop","Desktop Computer","Gamer Rig"],this.activeItem=null,this.jmaWindowVis=!1,this.actionPopUp=null,this.ctaLocalDocURL={},this.ctaContentLoading=!1,this.googleDocHTML=null,this.googleDocURL=""}setDependencies(e){this.pxlFile=e.pxlFile,this.pxlCookie=e.pxlCookie,this.pxlTimer=e.pxlTimer,this.pxlAudio=e.pxlAudio,this.pxlUtils=e.pxlUtils,this.pxlUser=e.pxlUser,this.pxlDevice=e.pxlDevice,this.pxlAutoCam=e.pxlAutoCam,this.pxlCamera=e.pxlCamera,this.pxlNavCanvas=e.pxlNavCanvas,this.pxlQuality=e.pxlQuality,this.pxlEnv=e.pxlEnv,this.mobile=e.mobile,this.renderSettings=this.pxlCookie.readCookie(this.pxlUser.renderSettingsCookie),this.controlSettings=this.pxlCookie.readCookie(this.pxlUser.controlModeCookie),e.pxlDevice.subscribe("resize",this.resize.bind(this))}init(){this.cssBuildClasses(),this.buildConsole()}prepLoader(){this.mapPromptBG=document.createElement("div"),this.mapPromptBG.classList.add("mapPromptBackgroundStyle"),document.body.appendChild(this.mapPromptBG),this.mapPrompt=document.createElement("div"),this.mapPrompt.setAttribute("id","mapPrompt"),this.mapPrompt.classList.add("mapPromptStyle"),this.mapPrompt.classList.add("fader"),this.mapPrompt.classList.add("visOn"),this.mapPrompt.innerHTML=`
            <div id="loaderLogoBranding" class='pxlLoaderLogo'></div>
            <div class='loadStyleParent'>
              <div id='pxlLoader' class='loadStyle'></div>
              <div id='pxlLoaderBackground' class='loadStyleBackground'></div>
            </div>
            <div id="loaderBranding" class='pxlLoaderTitle'>${this.projectTitle}</div>
            <div id="loaderMessage" class='pxlLoaderMessage'></div>
          `,document.body.appendChild(this.mapPrompt);let e=document.getElementById("loaderMessage");if(e){let o=this.loaderPhrases[Math.floor(Math.random()*this.loaderPhrases.length)];e.innerHTML=o}this.buildGuiStatus.loadingBranding&&vt.svgPromise(this.branding.loader,"loaderBranding","pxlLoaderTitle","loadBrandingLogo"),this.pxlLoader=document.getElementById("pxlLoader"),this.pxlLoader.style.width="2%";let t=document.createElement("div");t.classList.add("canvasCrashPromptBackgroundStyle"),document.body.appendChild(t);let i=document.createElement("div");i.classList.add("canvasCrashPromptStyle"),t.appendChild(i);let s;this.pxlQuality&&(parseInt(this.pxlQuality.detailLimit)==0?s=`Looks like your computer is having a hard time, but we\u2019ve got your fix.
          <br>Please click <a id="crashLink" class="crashLink">HERE</a> to reload ${this.projectTitle}.
          <br>If you\u2019re still having issues, drop us a line in the chat.`:s=`Looks like your computer is still having trouble, but we\u2019ve got another fix for ya.
          <br>Please click <a id="crashLink" class="crashLink">HERE</a> to reload ${this.projectTitle} again.
          <br>Again, if you\u2019re still having issues, drop us a line in the chat.`),i.innerHTML=s;let r=document.getElementById("crashLink"),a=this;r&&(r.onclick=o=>{a.crashLinkTrigger(o,a)})}stepLoader(e=""){this.pxlLoaderCount+=1;let t=Math.min(100,this.pxlLoaderCount/(this.pxlLoaderTotal-1)*100);t==100&&(this.pxlLoader.style.borderRadius="5px"),this.pxlLoader.style.width=t+"%",this.verbose>=ti.INFO&&console.log("Loader",this.pxlLoaderCount,this.pxlLoader.style.width,"; "+e)}setLoaderPhrases(e,t=!0){e&&e.length>0&&(t&&(this.loaderPhrases=[]),this.loaderPhrases=this.loaderPhrases.concat(e),this.setLoaderObjMessage())}setLoaderObjMessage(){let e=document.getElementById("loaderMessage");if(e){let t=Math.floor(Math.random()*17391.537193*this.loaderPhrases.length%this.loaderPhrases.length),i=this.loaderPhrases[t];e.innerHTML=i}}booted(){this.buildHudBlock(),this.buildTopBar(),this.buildBottomBar(),this.buildGuiWindowContainer(),this.buildUserControlBlock(),this.buildRawHtml(),this.prepPageDisplay()}step(){this.updateGuiPositions(),this.pxlUser?.checkItemWearOff(this.pxlTimer.prevMS)&&this.hideItemHud(),this.pxlNavDataUpdate()}resize(){this.sW=window.innerWidth,this.sH=window.innerHeight,this.resetHelpTextPlacement(),["videoinput","audioinput","audiooutput"].forEach(t=>{let i=null,s=null;t=="videoinput"?(i="camChoiceOptionsBlock",s=this.hudIcons.camChoiceIcon):t=="audioinput"?(i="micChoiceOptionsBlock",s=this.hudIcons.micChoiceIcon):t=="audiooutput"&&(i="speakerChoiceOptionsBlock",s=this.hudIcons.speakerChoiceIcon);let r=document.getElementById(i);if(r&&s){let a=r.getBoundingClientRect().width,o=s.parent.getBoundingClientRect();r.style.left=o.x-a*.5,r.style.bottom=this.sH-this.hudBottomBar.getBoundingClientRect().y}}),this.setUserControlPosition(),this.inviteUserPosition(),this.setArtistInfoSizing()}resetHelpTextPlacement(){Object.keys(this.textDescriptions).forEach(t=>{let i=this.textDescriptions[t];if(i){let s=document.getElementById("helpText_"+t);if(!s)return;let r=document.getElementById(t);if(r){let a=2,o=i.pos,l=i.offset?i.offset:[0,0],h=r.getBoundingClientRect(),c=s.getBoundingClientRect(),u=0,d=0,m=!1;o[1]<0?(d=h.y+c.height*o[1],m=!0):o[1]==0?d=h.y+h.height*.5-c.height*.5:o[1]>0&&(d=h.y+h.height+c.height*(o[1]-1),m=!0),m?o[0]<0?u=h.x+h.width+c.width*o[0]:o[0]==0?u=h.x+h.width*.5-c.width*.5:o[0]>0&&(u=h.x+h.width*(o[0]-1)):o[0]<0?u=h.x+c.width*o[0]:o[0]==0?u=h.x+h.width*.5-c.width*.5:o[0]>0&&(u=h.x+h.width*2*o[0]),u=u+l[0],u+c.width>this.sW-a?u=this.sW-a-c.width:u<a&&(u=a),d=d+l[1],s.style.left=u,s.style.top=d}else s.style.display="none"}})}crashLinkTrigger(e,t){let i=location.search.match(/[a-zA-Z0-9=]+/g),s="?";i.forEach(r=>{let a=r.split("=");a[0]=="dlimit"?s+=a[0]+"="+(parseInt(a[1])+1)+"&":s+=r+"&"}),location.search=s}guiToggleVisibility(e=null){if(e=e??!this.hudVisibility,this.hudVisibility=e,this.hudTopBar&&!this.hudTopBar.origDisplay&&(this.hudTopBar.origDisplay=this.hudTopBar.style.display),this.fastTravelBar&&!this.fastTravelBar.origDisplay&&(this.fastTravelBar.origDisplay=this.fastTravelBar.style.display),this.hudBottomBar&&!this.hudBottomBar.origDisplay&&(this.hudBottomBar.origDisplay=this.hudBottomBar.style.display),e){if(this.hudTopBar&&this.hudTopBar.removeAttribute("style"),this.fastTravelBar&&this.fastTravelBar.removeAttribute("style"),this.hudBottomBar&&this.hudBottomBar.removeAttribute("style"),this.userControlBlock){let t=this.userControlBlock.gui.style.top;this.userControlBlock.gui.removeAttribute("style"),this.userControlBlock.gui.style.top=t}}else this.hudTopBar&&(this.hudTopBar.style.display="none"),this.fastTravelBar&&(this.fastTravelBar.style.display="none"),this.hudBottomBar&&(this.hudBottomBar.style.display="none"),this.userControlBlock&&(this.userControlBlock.gui.style.display="none");this.hudElements.artistInfo&&(this.hudElements.artistInfo.parent.style.display=e?"grid":"none")}cssBuildClasses(){let e=document.createElement("style");e.type="text/css",e.innerHTML=`
			.fader{
				transition: opacity .8s, filter .8s;
			}
			.visOn{
				filter:alpha(opacity=100);
				opacity:1.0;
			}
			.visOff{
				filter:alpha(opacity=0);
				opacity:0.0;
			}
		`,document.getElementsByTagName("head")[0].appendChild(e)}prepPromptFader(e,t=!1){let i=e;typeof i=="string"&&(i=document.getElementById(i),!i)||(i.classList.add("fader"),i.classList.add(t?"visOn":"visOff"),i.style.display=t?"inline-block":"none")}promptFader(e,t,i=null,s=!1){typeof e=="string"&&(e=document.getElementById(e),!e)||(e.classList.value.indexOf("fader")<0&&e.classList.add("fader"),t?(e.style.display="inline-block",setTimeout(()=>{e.classList.contains("visOff")&&(e.classList.remove("visOff"),e.classList.add("visOn"),i!=null&&(e.setAttribute("fadeOut",clockTime+i*1e3),fadeOutList.push(e)))},50)):(e.classList.remove("visOn"),e.classList.add("visOff"),s?["webkitTransitionEnd","otransitionend","oTransitionEnd","msTransitionEnd","transitionend"].forEach(a=>{e.addEventListener(a,()=>{let o=e.parentNode;o&&o.removeChild(e)})}):setTimeout(()=>{e.classList.contains("visOff")&&(e.style.display="none")},1e3)))}buildConsole(){let e=document.createElement("div");e.id="consoleBlock",e.classList.add("consoleBlockStyle"),document.body.appendChild(e),this.guiWindows.consoleBlock={active:!1,gui:e}}buildMessageBlock(e,t="Info"){let i=document.createElement("div");this.msgCount++,i.id="messageBlock-"+this.msgCount,i.classList.add("messageBlockStyle"),i.classList.add("message"+t);let s=this,r=document.createElement("div");r.classList.add("messageCloseBtn"),r.innerHTML="X",r.addEventListener("click",function(){s.removeMessage(i)});let a=document.createElement("div");a.classList.add("messageTopBarStyle");let o=document.createElement("div");o.classList.add("messageHeaderStyle"),o.innerHTML=t,a.appendChild(o),a.appendChild(r),i.appendChild(a);let l=document.createElement("div");return l.classList.add("messageContentStyle"),l.innerHTML=e,i.appendChild(l),i}print(e){this.guiWindows.consoleBlock||this.buildConsole(),this.guiWindows.consoleBlock.active||(this.guiWindows.consoleBlock.active=!0,this.promptFader(this.guiWindows.consoleBlock.gui,!0));let t=this.guiWindows.consoleBlock.gui,i=this.buildMessageBlock(e);t.appendChild(i)}buildHudBlock(){if(!this.buildGuiStatus.hud)return;let e=document.createElement("div");e.id="hudBlock",e.classList.add("hudBlockStyle"),this.hudBlock.obj=e,document.body.appendChild(this.hudBlock.obj),this.hudBlock.obj.style.display="none";let t=this;this.hudBlock.obj.addEventListener("click",i=>{t.toggleHudBlock(!1,!0)})}toggleHudBlock(e=null,t=!1){if(!this.hudBlock)return;e=e??!this.hudBlock.active,this.hudBlock.active=e;let i=!1;e?i="inline-block":this.checkOpenWindows(t)||(i="none",this.pxlNavCanvas&&this.pxlNavCanvas.focus()),this.hudBlock.obj&&this.hudBlock.obj.style&&i!=!1&&(this.hudBlock.obj.style.display=i)}checkOpenWindows(e=!1){let t=Object.keys(this.guiWindows),i=!1;return t.forEach(s=>{s!="chatBoxGui"&&(e&&(this.guiWindows[s].button&&this.flipIcon(this.guiWindows[s].button,!1),this.guiWindows[s].gui&&this.guiWindows[s].active&&(this.guiWindows[s].active=!1,this.promptFader(this.guiWindows[s].gui,!1),s=="settingsGui"&&this.togglePxlNavDataDisplay(!1))),i=i||this.guiWindows[s].active)}),i}checkFocus(e=null,t=null){t===!0&&this.guiWindows.inviteUserGui&&this.guiWindows.inviteUserGui.active&&this.toggleInviteUser(!1)}buildRawHtml(){}buildTopBar(){if(this.mobile||!this.buildGuiStatus.userTopBar)return;let e=document.createElement("div");e.id="hud_topBar",e.classList.add("hud_topBarBlockStyle"),this.hudTopBar=e,document.body.appendChild(this.hudTopBar);let t="";t='<div id="statsIcon"></div>',t+=`</div>
		<div id="usersIconParent">
			<div id="usersIcon"></div>`;let i;i=`
			<div id="hud_localVideoStyle" class="hud_localVideoStyle"></div>
			<div id="hud_topBarParent" class="hud_topBarParentStyle">
		<div id="statsIconParent">
			${t}
		</div>
		<div  class="hud_topBarVSpacerStyle"></div>
			</div>
		`,e.innerHTML=i,this.hudIcons.statsIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_stats.svg`,"statsIcon","stats"),this.hudIcons.statsIcon.promise.finally(()=>{}),this.hudIcons.usersIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_user.svg`,"usersIcon","users");let s=document.createElement("div");s.id="hud_pxlNavData",s.classList.add("hud_pxlNavDataParentStyle"),e.appendChild(s),this.pxlNavData.gui=s;let r=document.createElement("div");r.id="hud_pxlNavData",r.classList.add("hud_pxlNavDataStyle"),s.appendChild(r),i=`
      <div class="hud_pxlNavData_FPS gui_boldText">FPS</div><div class="hud_pxlNavData_FPS">:</div><div id="hud_pxlFPS" class="hud_pxlNavData_FPS"> - </div>
      <div class="hud_pxlNavData_UL gui_boldText">\u2191</div><div class="hud_pxlNavData_UL">:</div><div id="hud_pxlUL" class="hud_pxlNavData_UL"> - </div>
      <div class="hud_pxlNavData_DL gui_boldText">\u2193</div><div class="hud_pxlNavData_DL">:</div><div id="hud_pxlDL" class="hud_pxlNavData_DL"> - </div>
    `,r.innerHTML=i,this.pxlNavData.fps=document.getElementById("hud_pxlFPS"),this.pxlNavData.ul=document.getElementById("hud_pxlUL"),this.pxlNavData.dl=document.getElementById("hud_pxlDL")}buildUserControlBlock(){this.userControlBlock={},this.userControlBlock.activeList=[],this.userControlBlock.userList={},this.userControlBlock.mutedList=[];let e=document.createElement("div");e.classList.add("userControlBlockStyle"),document.body.appendChild(e),this.userControlBlock.gui=e,this.userControlBlock.speakerIcon=null}buildMedalionBar(){if(this.buildGuiStatus.medalion){let e=document.createElement("div");e.id="hud_medalionBar",e.classList.add("hud_medalionIconBlockStyle"),this.hudMedalionBar=e,document.body.appendChild(this.hudMedalionBar);let t=`
        <div id="medalionIconParent" class="hud_speakerIconStyle">
          <div id="medalionIcon"></div>
        </div>
        <div id="medalionTitle" class="medalionTitleStyle">${this.branding.title}</div>
      `;this.hudMedalionBar.innerHTML=t;let i=document.getElementById("medalionIcon"),s=document.getElementById("medalionTitle");i.addEventListener("mouseover",()=>{s.classList.add("medalionTitleGrowStyle")}),i.addEventListener("mouseout",()=>{s.classList.remove("medalionTitleGrowStyle")}),this.hudIcons.medalionIcon=vt.svgIconPromise(this.branding.medalion,"medalionIcon","info",null,"medalionStyle")}}buildBottomBar(){if(!this.buildGuiStatus.bottomBar)return;let e=document.createElement("div");e.id="hud_bottomBar",e.classList.add("hud_bottomBarStyle"),this.hudBottomBar=e,document.body.appendChild(this.hudBottomBar);let t="";if(t+=`
    <div id="hud_chatIconBlock" class="hud_bottomLeftBlockStyle">
        <div id="settingsIconParent" class="hud_settingsIconStyle">
          <object id="settingsIcon"></object>
        </div>
  <div></div>
        <div id="helpIconParent" class="hud_helpIconStyle">
          <object id="helpIcon"></object>
        </div>
        `,!this.mobile&&this.buildGuiStatus.verseList&&(t+=`<div class="hud_usersIconStyle">
            <div id="multiverseIcon"></div>
          </div>
          <div></div>`),t+="</div>",this.mobile||(t+=`
        <div class="hud_micCamIconsBlockStyle">
          <div id="speakerIconParent" class="hud_speakerIconStyle">
            <div id="speakerIcon"></div>
          </div>
          <div id="speakerChoiceIconParent" class="hud_speakerChoiceIconStyle">
            <div id="speakerChoiceOptionsBlock" class="gui_iconButtonPopup">
            </div>
            <div id="speakerChoiceIconParent">
              <div id="speakerChoiceIcon" class="iconCaretStyle"></div>
            </div>
          </div>
          <div class="hud_micCamSpacerStyle"></div>
          <div id="micIconParent" class="hud_micIconStyle">
            <div id="micIcon"></div>
          </div>
          <div id="micChoiceIconParent" class="hud_micChoiceIconStyle">
            <div id="micChoiceOptionsBlock" class="gui_iconButtonPopup">
            </div>
            <div id="camChoiceIconParent">
              <div id="micChoiceIcon" class="iconCaretStyle"></div>
            </div>
          </div>
          <div class="hud_micCamSpacerStyle"></div>
          <div id="camIconParent" class="hud_camIconStyle">
            <div id="camIcon"></div>
          </div>
          <div id="camChoiceIconBlock" class="hud_camChoiceIconStyle">
            <div id="camChoiceOptionsBlock" class="gui_iconButtonPopup">
            </div>
            <div id="camChoiceIconParent">
              <div id="camChoiceIcon" class="iconCaretStyle"></div>
            </div>
          </div>
        </div>
        
        <div id="hud_helpInfoSettingsBlock" class="hud_helpInfoSettingsBlockStyle">
          <div class="guiVerseHudTitle">
            <span id="guiVerseTitle"></span>
          </div>
          <div></div>
          <div id="chatIconParent" class="hud_chatIconStyle">
            <div id="chatIcon"></div>
          </div>
          <div id="hud_messageCount" class="hud_userCountStyle hud_messageCountBaseStyle">0</div>
        </div>
      `),this.hudBottomBar.innerHTML=t,this.messageCountObj=document.getElementById("hud_messageCount"),this.hudIcons.chatIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_chat.svg`,"chatIcon","chat"),!this.mobile&&!this.pxlAutoCam.enabled){this.hudIcons.multiverseIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_multiverse.svg`,"multiverseIcon","multiverse"),this.hudIcons.speakerIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_ProxAudio.svg`,"speakerIcon","speakerToggle",!1),this.hudIcons.speakerChoiceIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"speakerChoiceIcon","speakerChoice",!1,"iconCaretStyle"),this.hudIcons.micIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_mic.svg`,"micIcon","micToggle",!1),this.hudIcons.micChoiceIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"micChoiceIcon","micChoice",!1,"iconCaretStyle"),this.hudIcons.camIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_camera.svg`,"camIcon","camToggle",!1),this.hudIcons.camChoiceIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"camChoiceIcon","camChoice",!1,"iconCaretStyle"),this.hudIcons.helpIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_help.svg`,"helpIcon","help"),this.hudIcons.settingsIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_settings.svg`,"settingsIcon","settings");let i=document.getElementById("guiVerseTitle"),s=this}else{let i=document.getElementById("hud_chatIconBlock");i.style.gridAutoColumns="max-content max-content auto max-content",i.style.margin="0px 10px"}}prepArtistInfo(e=null){if(!(!this.pxlEnv?.postIntro||e=="")){if(!this.hudElements.artistInfo){this.hudElements.artistInfo={},this.hudElements.artistInfo.active=!1;let t=document.createElement("div");t.classList.add("hud_aristInfoParentStyle"),this.hudElements.artistInfo.parent=t;let i=document.createElement("div");i.classList.add("hud_aristInfoButtonStyle"),t.appendChild(i);let s=this;i.onclick=()=>{s.toggleArtistInfo()},this.hudElements.artistInfo.button=i;let r=document.createElement("div");r.classList.add("hud_aristInfoButtonTextStyle"),r.innerHTML="artwork info&nbsp;&nbsp;",i.appendChild(r),this.hudElements.artistInfo.buttonText=r;let a=document.createElement("div");a.classList.add("hud_aristInfoCarrotXStyle"),a.id="artistInfoCarrotX",i.appendChild(a);let o=document.createElement("div");o.classList.add("hud_aristInfoInner"),o.innerHTML=e,t.appendChild(o),this.hudElements.artistInfo.inner=o,document.body.appendChild(t),this.hudElements.artistInfo.closeSvg=vt.svgPromise(`${this.guiRoot}global/carrotCloseAnimate.svg`,"artistInfoCarrotX"),this.hudElements.artistInfo.closeSvg.promise.finally(()=>{this.artistInfoButtonPrep()})}this.toggleArtistInfo(!1),e!=null&&this.hudVisibility&&!this.pxlAutoCam.active?(this.hudElements.artistInfo.parent.style.zIndex=155,this.hudElements.artistInfo.parent.style.display="grid",this.hudElements.artistInfo.inner.innerHTML=e,setTimeout(()=>{this.setArtistInfoSizing()},20)):(this.hudElements.artistInfo.parent.style.zIndex=-5,this.hudElements.artistInfo.parent.style.display="none")}}artistInfoButtonPrep(e=0){let t=this.hudElements.artistInfo.closeSvg.svg;if(t){let i=t.getElementById("carrotToClone_on"),s=t.getElementById("carrotToClone_off");i&&s?(this.hudElements.artistInfo.onAnim=i,this.hudElements.artistInfo.offAnim=s):e==2||setTimeout(()=>{this.artistInfoButtonPrep(e+=1)},100)}}setArtistInfoSizing(){if(this.hudElements.artistInfo){let e=this.hudElements.artistInfo.inner.clientHeight,t=this.hudElements.artistInfo.inner.clientWidth,i=this.hudElements.artistInfo.button.clientHeight,s=this.hudElements.artistInfo.button.clientWidth;this.hudElements.artistInfo.innerHeight=e,this.hudElements.artistInfo.innerWidth=t,this.hudElements.artistInfo.baseHeight=i,this.hudElements.artistInfo.baseWidth=s,this.hudElements.artistInfo.parent.style.height=e+"px",this.hudElements.artistInfo.parent.style.width=t+"px";let r=this.hudElements.artistInfo.buttonText.clientWidth;this.hudElements.artistInfo.buttonText.maxWidth=r,this.hudElements.artistInfo.buttonText.style.maxWidth=r+"px",this.toggleArtistInfo(this.hudElements.artistInfo.active)}}toggleArtistInfo(e=null){e=e??!this.hudElements.artistInfo.active,this.hudElements.artistInfo.active=e;let t=this.hudElements.artistInfo.innerHeight,i=Math.min(this.pxlDevice.sW*.3,this.hudElements.artistInfo.innerWidth),s=this.hudElements.artistInfo.baseHeight,r=this.hudElements.artistInfo.baseWidth;this.hudElements.artistInfo.parent.style.maxHeight=e?t+"px":s+"px",this.hudElements.artistInfo.parent.style.maxWidth=e?i+"px":r+"px",this.hudElements.artistInfo.parent.style.padding=e?"5px":"0px";let a=this.hudElements.artistInfo.buttonText.maxWidth;this.hudElements.artistInfo.buttonText.style.maxWidth=e?"0px":a+"px",this.hudElements.artistInfo.buttonText.style.opacity=e?"0":"1",this.hudElements.artistInfo.buttonText.style.filter="alpha(opacity="+(e?"0":"1000")+")",this.hudElements.artistInfo.inner.style.opacity=e?"1":"0",this.hudElements.artistInfo.inner.style.filter="alpha(opacity="+(e?"100":"0")+")",this.hudElements.artistInfo.onAnim&&(e?this.hudElements.artistInfo.onAnim.beginElement():this.hudElements.artistInfo.offAnim.beginElement())}prepPageDisplay(e=null){if(!(!this.pxlEnv?.postIntro||e=="")){if(!this.hudElements.artistInfo){this.hudElements.artistInfo={},this.hudElements.artistInfo.active=!1;let t=document.createElement("div");t.classList.add("hud_aristInfoParentStyle"),this.hudElements.artistInfo.parent=t;let i=document.createElement("div");i.classList.add("hud_aristInfoButtonStyle"),t.appendChild(i);let s=this;i.onclick=()=>{s.togglePageDisplay()},this.hudElements.artistInfo.button=i;let r=document.createElement("div");r.classList.add("hud_aristInfoButtonTextStyle"),r.innerHTML="artwork info&nbsp;&nbsp;",i.appendChild(r),this.hudElements.artistInfo.buttonText=r;let a=document.createElement("div");a.classList.add("hud_aristInfoCarrotXStyle"),a.id="artistInfoCarrotX",i.appendChild(a);let o=document.createElement("div");o.classList.add("hud_aristInfoInner"),o.innerHTML=e,t.appendChild(o),this.hudElements.artistInfo.inner=o,document.body.appendChild(t)}this.togglePageDisplay(!1),e!=null&&this.hudVisibility&&!this.pxlAutoCam.active?(this.hudElements.artistInfo.parent.style.zIndex=155,this.hudElements.artistInfo.parent.style.display="grid",this.hudElements.artistInfo.inner.innerHTML=e,setTimeout(()=>{this.setArtistInfoSizing()},20)):(this.hudElements.artistInfo.parent.style.zIndex=-5,this.hudElements.artistInfo.parent.style.display="none")}}setPageToDisplay(){if(this.hudElements.artistInfo){let e=this.hudElements.artistInfo.inner.clientHeight,t=this.hudElements.artistInfo.inner.clientWidth,i=this.hudElements.artistInfo.button.clientHeight,s=this.hudElements.artistInfo.button.clientWidth;this.hudElements.artistInfo.innerHeight=e,this.hudElements.artistInfo.innerWidth=t,this.hudElements.artistInfo.baseHeight=i,this.hudElements.artistInfo.baseWidth=s,this.hudElements.artistInfo.parent.style.height=e+"px",this.hudElements.artistInfo.parent.style.width=t+"px";let r=this.hudElements.artistInfo.buttonText.clientWidth;this.hudElements.artistInfo.buttonText.maxWidth=r,this.hudElements.artistInfo.buttonText.style.maxWidth=r+"px",this.toggleArtistInfo(this.hudElements.artistInfo.active)}}togglePageDisplay(e=null){if(this.hudElements.artistInfo){e=e??!this.hudElements.artistInfo.active,this.hudElements?.artistInfo&&(this.hudElements.artistInfo.active=e);let t=this.hudElements.artistInfo.innerHeight,i=Math.min(this.pxlDevice.sW*.3,this.hudElements.artistInfo.innerWidth),s=this.hudElements.artistInfo.baseHeight,r=this.hudElements.artistInfo.baseWidth;this.hudElements.artistInfo.parent.style.maxHeight=e?t+"px":s+"px",this.hudElements.artistInfo.parent.style.maxWidth=e?i+"px":r+"px",this.hudElements.artistInfo.parent.style.padding=e?"5px":"0px";let a=this.hudElements.artistInfo.buttonText.maxWidth;this.hudElements.artistInfo.buttonText.style.maxWidth=e?"0px":a+"px",this.hudElements.artistInfo.buttonText.style.opacity=e?"0":"1",this.hudElements.artistInfo.buttonText.style.filter="alpha(opacity="+(e?"0":"1000")+")",this.hudElements.artistInfo.inner.style.opacity=e?"1":"0",this.hudElements.artistInfo.inner.style.filter="alpha(opacity="+(e?"100":"0")+")",this.hudElements.artistInfo.onAnim&&(e?this.hudElements.artistInfo.onAnim.beginElement():this.hudElements.artistInfo.offAnim.beginElement())}}iconEvent(e,t,i=null){if(this.hudBlock.obj&&(this.hudBlock.obj.style.display="none"),e=="click"){if(i=="chat"){this.toggleChatBox();return}else if(i=="musicToggle"){this.pxlAudio.djPlayerMuteToggle(),this.toggleIcon(t,!this.pxlAudio.djMuted,!0);return}else if(i=="userSpeakerToggle"){this.setUserControls(t);return}else if(i=="speakerToggle"){this.toggleIcon(t,!1,!0);return}else if(i=="speakerChoice"){let s="audiooutput";this.flipIcon(t,this.guiWindows[s]&&this.guiWindows[s].active);return}else if(i=="help"){let s=this.guiWindows.helpGui?this.guiWindows.helpGui.active:!1;this.checkOpenWindows(!0),this.helpGuiToggle(!s);return}else if(i=="info"){let s=this.guiWindows.infoGui?this.guiWindows.infoGui.active:!1;this.checkOpenWindows(!0),this.infoGuiToggle(!s);return}else if(i=="settings"){let s=this.guiWindows.settingsGui?this.guiWindows.settingsGui.active:!1;this.checkOpenWindows(!0),this.settingsGuiToggle(!s);return}else if(i=="userProfile"){this.toggleUserProfile();return}else if(i!="users"){if(i=="stats")return}}}setMicVolumeLevel(e){this.hudIcons.micIcon.volumeMask||(this.hudIcons.micIcon.volumeMask=document.getElementById("gui_micVolumeMask"),this.hudIcons.micIcon.timer=this.pxlTimer.msRunner.x-1);let t=12-e*11;this.hudIcons.micIcon.volumeMask.setAttribute("y",t)}toggleIcon(e,t,i=!1){if(e){if(e.mute.style.filter=t?"alpha(opacity=0)":"alpha(opacity=100)",e.mute.style.opacity=t?"0":"1",e.mute.style.transform=t?"scale(0,0)":"scale(1,1)",["camToggle","speakerToggle"].includes(e.eventType))return;let r={speakerToggle:"speaker",micToggle:"audio",camToggle:"video"}[e.eventType];r&&i&&this.loadingDeviceChange(r,t)}}flipIcon(e,t){e.caret.style.transform=`rotate( ${t?"180deg":"0deg"} )`}loadingDeviceChange(e,t=!0){let i=null;e=="speaker"?i=this.hudIcons.speakerIcon:e=="audio"?i=this.hudIcons.micIcon:e=="video"&&(i=this.hudIcons.camIcon),i.indicator.style.display=t?"inline-block":"none",i.indicator.style.animationPlayState=t?"running":"paused",i.waiting.forEach(s=>{s.setAttribute("fill-opacity",t?".5":"1")}),t&&setTimeout(()=>{this.loadingDeviceChange(e,!1)},1e3)}djBuildPlayer(){if(this.buildGuiStatus.djPlayer){this.djPlayerObj=document.createElement("div"),this.djPlayerObj.id="djPlayer";let e=`
          <audio id="djStream" playsinline muted>
            <source src="`+this.pxlAudio.djUrlSource+`"></source>
          </audio>
          <table cellpadding=0 cellspacing=5 border=0 style="height:100%;"><tbody><tr>
              <td align="left">
                  <div id="djPlayerVol"></div>
              <  d><td valign="center" align="left" width=100%>
                  <div id="djPlayerVolumeParent" class="volParent"><div id="djPlayerVolume" class="volSlider"></div></div>
              <  d><  r>
          <  body><  able>`;this.djPlayerObj.innerHTML=e,document.getElementById("musicControllerBlock").appendChild(this.djPlayerObj),this.hudIcons.musicIcon=vt.svgIconPromise(`${this.guiRoot}icons/icon_music.svg`,"djPlayerVol","musicToggle",!this.pxlAudio.djMuted),this.pxlAudio.djBuildPlayer()}}buildItemHud(e,t){this.activeItem.innerHTML=t,this.activeItem.style.opacity="1",this.activeItem.style.filter="alpha(opacity=100)",this.activeItem.style.textShadow="1px 1px 3px #000000",setTimeout(()=>{this.activeItem.style.fontSize="1.5em",this.activeItem.style.top=".5%",this.activeItem.style.right="140px",this.activeItem.style.transform="translateX(0%)"},1500)}hideItemHud(){this.activeItem.innerHTML="",this.activeItem.style.fontSize="3em",this.activeItem.style.top="10%",this.activeItem.style.right="50%",this.activeItem.style.transform="translateX(50%)",this.activeItem.style.opacity="0",this.activeItem.style.filter="alpha(opacity=0)"}mapPrepPrompts(){this.activeItem=document.createElement("div"),this.activeItem.classList.add("activeItemStyle"),document.body.appendChild(this.activeItem)}updateGuiPositions(){if(this.loading){let e=this.radioControls.length,t=!1;for(let i=0;i<e;++i){if(!this.radioControls[i][3]){t=!0;break}let s=this.radioControls[i][0],a=this.radioControls[i][2].getBoundingClientRect(),o=a.width+this.buttonPadding*2,l=a.height+this.buttonPadding*2,h=a.top-this.buttonPadding,c=a.left-this.buttonPadding;s.style.width=o,s.style.height=l,s.style.top=h,s.style.left=c,this.radioControls[i][1].style.width=o,this.radioControls[i][1].style.height=l,this.radioControls[i][1].style.top=h,this.radioControls[i][1].style.left=c}this.loading=t}}togglGuiWindow(e=null,t=!1){e=="helpGui"?this.helpGuiToggle(t,!1):e=="infoGui"?this.infoGuiToggle(t,!1):e=="settingsGui"&&this.settingsGuiToggle(t,!1)}svgCheckClick(e=null,t=null){if(t)if(t=="close"){this.toggleGuiWindowContainer(null,!1,!0);return}else{if(t=="ft1")return;if(t=="ft2")return;if(t=="ft3"){this.toggleInviteUser();return}else{if(t=="ft4")return;if(t=="ft5"){this.pxlAutoCam.toggleAutoCam();return}}}}svgStylize(e=null,t=!1){if(!e)return;let i=e.path?e.path[1]:e.target.parentNode,s=i.getElementById("state");if(s){let a=t?"white":"none";s.setAttribute("fill",a)}let r=i.getElementById("hover");r&&r.setAttribute("fill",color)}renderQualitySettings(e){this.pxlQuality.percent=e,this.pxlQuality.screenResPerc=e*.75+.25,this.pxlQuality.mapAutoQualityUpdate(e,!0),this.pxlDevice.resizeRenderResolution()}pxlNavDataUpdate(){this.pxlNavData.active&&this.pxlTimer.msRunner.x>this.pxlNavData.fpsSet&&(this.pxlNavData.fpsSet=this.pxlTimer.msRunner.x+1,this.pxlNavData.fps.innerText=parseInt(1/this.pxlTimer.msRunner.y))}buildGuiWindowContainer(){let e=document.createElement("div");e.classList.id="guiWindowBackground",e.classList.add("guiWindowBackground"),e.classList.add("fader"),e.classList.add("visOff"),e.style.display="none";let t=this;e.onclick=i=>{t.toggleGuiWindowContainer(i,!1,!0)},this.guiWindowBG=e,document.body.appendChild(e)}toggleGuiWindowContainer(e,t,i=!1){if(e){let a=(e.path?e.path[0]:e.target).getAttribute("id");if(a!="guiWindowBackground"&&!["gui_helpGuiWindow","gui_helpContent","gui_infoGuiWindow","gui_infoContent","gui_settingsGuiWindow","gui_settingsContent"].includes(a))return null}let s=this.checkOpenWindows(i);this.guiWindowBG&&s==t&&this.promptFader(this.guiWindowBG,t,null,!1),t?this.pxlNavCanvas.blur():this.pxlNavCanvas.focus()}helpGuiBuild(){this.guiWindows.helpGui={},this.guiWindows.helpGui.gui=null,this.guiWindows.helpGui.active=!1;let e=document.createElement("div");e.id="gui_helpGuiWindow",e.classList.add("gui_helpGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+=`
    <div id="gui_helpContent" class="gui_contentStyle">
  <div class="gui_body">
    <div id="gui_helpGui_keyboardParent" class="gui_helpGui_keyboardParent">
    <div id="gui_helpGui_controlsKeyboard" class="guiPadding settings_sectionHeader">keyboard controls</div>
    <div class="gui_helpGui_ASDWorUDLR">
      <div id="gui_helpGui_asdw" class="gui_helpGui_asdw"></div>
      <div id="gui_helpGui_or" class="gui_helpGui_text">or</div>
      <div id="gui_helpGui_udlr" class="gui_helpGui_udlr"></div>
    </div>
    <div id="gui_helpGui_useKeys" class="gui_helpGui_text" style="display:inline-block;">Use your keyboard <span class="gui_boldText">ARROWS</span> or<br><span class="gui_boldText">AWSD</span> keys to move around</div>
    </div>
    <div id="gui_helpGui_mouse" class="gui_helpGui_mouse">
    <div id="gui_helpGui_MouseControls" class="guiPadding settings_sectionHeader">mouse controls</div>
    <div id="gui_helpGui_MouseOutlined" class="gui_helpGui_mouseOutline"></div>
    <div id="gui_helpGui_useMouse" class="guiPadding gui_helpGui_text" style="display:inline-block;">To orient your view:<br><span class="gui_boldText">LEFT CLICK</span> and drag your mouse<br><span class="gui_boldText">RIGHT CLICK</span> to lock your mouse</div>
    </div>
  </div>
  <div id="gui_helpGui_hotKeys" class="gui_helpGui_hotKeys">
          You can change <span class="gui_boldText">Navigation</span> and <span class="gui_boldText">Look controls</span> in the <span class="gui_boldText">Settings</span> <span id="gui_helpGui_settingIcon"></span> menu
        </div>
  <div id="guiHelpFooter" class="gui_footer">
    <div class="guiButton" id="guiHelpBackButton">close</div>
  </div>
  <div class="gui_spacer"></div>
    </div>
  `,e.innerHTML=t,[[this.guiRoot+"keyboard/asdw.svg","gui_helpGui_asdw","guiKeyDispSVG",!1],[this.guiRoot+"keyboard/udlr.svg","gui_helpGui_udlr","guiKeyDispSVG",!1],[this.guiRoot+"mouse/MouseOutlined.svg","gui_helpGui_MouseOutlined","guiMouseDispSVG",!1]].forEach(l=>{vt.svgButtonPromise(...l)});let s=this,r=document.getElementById("guiHelpBackButton");r.onclick=l=>{s.introHelpActive&&(s.introHelpActive=!1,s.pxlEnv.postHelpIntro()),s.svgCheckClick(l,"close")},Object.keys(this.textDescriptions).forEach(l=>{let h=this.textDescriptions[l];if(h){let c=h.text,u=h.pos,d=document.createElement("div");d.id="helpText_"+l,d.classList.add("helpTextDescriptionParent"),d.innerHTML=c,e.appendChild(d),this.textDescriptions[l].obj=d}});let o=document.getElementById("gui_helpGui_settingIcon");o&&this.hudIcons.settingsIcon&&(o.innerHTML=this.hudIcons.settingsIcon.svg.parentNode.innerHTML,o.style.position="relative",o.style.top="7.3px",o.style.width="30px",o.style.padding="2px",o.style.cursor="pointer",o.children[0].style.height="26px",o.onclick=()=>{s.iconEvent("click",null,"settings")}),this.guiWindows.helpGui.gui=e,setTimeout(()=>{this.resize()},50)}helpGuiToggle(e=null,t=!0){this.guiWindows.helpGui||this.helpGuiBuild(),e=e??!this.guiWindows.helpGui.active,this.guiWindows.helpGui.active=e,this.promptFader(this.guiWindows.helpGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro()),setTimeout(()=>{this.resetHelpTextPlacement()},20)}infoGuiBuild(){this.guiWindows.infoGui={},this.guiWindows.infoGui.gui=null,this.guiWindows.infoGui.active=!1;let e=document.createElement("div");e.id="gui_infoGuiWindow",e.classList.add("gui_infoGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+=`
    <div id="gui_infoContent" class="gui_contentInfoStyle">
  <div class="gui_infoBody">
    <div id="gui_infoGuiParent" class="gui_infoGuiParent">
    <br>${this.projectTitle}, created by <a href="https://www.theumbrella.nyc/">The Umbrella</a>,
    <br>an experience design collective.
    <br>
    <br>Want to chat?
    <br><a href="mailto:info@theumbrella.nyc">info@theumbrella.nyc</a>
    <br>
    <br>We\u2019re in active development. Get in touch if you have any issues.
    <br>
    </div>
  </div>
  <div id="guiInfoFooter" class="gui_footer">
    <div class="guiButton" id="guiInfoBackButton">close</div>
  </div>
    </div>
  `,e.innerHTML=t;let i=this,s=document.getElementById("guiInfoBackButton");s.onclick=r=>{i.svgCheckClick(r,"close")},this.guiWindows.infoGui.gui=e}infoGuiToggle(e=null,t=!0){this.guiWindows.infoGui||this.infoGuiBuild(),e=e??!this.guiWindows.infoGui.active,this.guiWindows.infoGui.active=e,this.promptFader(this.guiWindows.infoGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro())}applyCookies(){this.controlSettings&&(console.log(this.controlSettings),this.controlSettings=this.controlSettings),this.renderSettings&&(console.log(this.renderSettings),this.renderSettings=this.renderSettings)}settingsGuiBuild(){this.guiWindows.settingsGui={},this.guiWindows.settingsGui.gui=null,this.guiWindows.settingsGui.active=!1;let e=document.createElement("div");e.id="gui_settingsGuiWindow",e.classList.add("gui_settingsGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="Default";t=t||"";let i=`
    <div id="gui_settingsContent" class="gui_contentSettingsStyle">
  <div class="gui_settingsBody">
    <div class="gui_settingsParentGrid">
      <!-- -- Username -- -- -->
    <div class="cellMargin settings_icon" id="settings_user"></div>
    <div class="settings_optionHeader">Username</div>
    <div class="settings_radio" style="grid-auto-flow: row; justify-content: start;">
                    <div id="guiuserProfileBoxFieldParent" class="gui_userProfileBoxFieldParentStyle">
                      <input type="text" placeholder="Set your username" value="${t}" id="settings_usernameInput" class="settings_usernameInput"></input>
                      <input type="button" value="Set" id="settings_sendUsername" class="sendUsername">
                    </div>
                    <div id="settings_usernameResponseMessage" class="usernameResponseMessageStyle"></div>
                </div>
      <!-- -- -- -- -- -- -->
    <div class="settingsGridSpan settingsSpacer"></div>
      <!-- -- Left/Right -- -- -->
    <div class="cellMargin settings_icon" id="settings_left_right"></div>
    <div class="settings_optionHeader">Left/Right</div>
    <div class="settings_radio" id="settingsRadioBlock_leftRight">
      <span>
      <input type="radio" id="settings_tankTurning" name="settings_leftRight" value="0" hidden>
      <label for="settings_tankTurning">Turn</label>
      </span>
      <span>
      <input type="radio" id="settings_strafing" name="settings_leftRight" value="1" hidden>
      <label for="settings_strafing">Strafe</label>
      </span>
    </div>
      <!-- -- Mouse -- -- -->
    <div class="cellMargin settings_icon" id="settings_mouse"></div>
    <div class="settings_optionHeader">Mouse Looking</div>
    <div class="settings_radio" id="settingsRadioBlock_mouse">
      <span>
      <input type="radio" id="settings_dragLooking" name="settings_mouse" value="0" hidden>
      <label for="settings_dragLooking">Native</label>
      </span>
      <span>
      <input type="radio" id="settings_pointLooking" name="settings_mouse" value="1" hidden>
      <label for="settings_pointLooking">Inverted</label>
      </span>
    </div>
      <!-- -- -- -- -- -- -->
    <div class="settingsGridSpan settingsSpacer"></div>
      <!-- -- Graphics Quality -- -- -->
    <div class="cellMargin settings_icon" id="settings_graphics"></div>
    <div class="settings_optionHeader">Graphics Quality</div>
    <div class="settings_radio" id="settingsRadioBlock_graphics">
      <span>
      <input type="radio" id="settings_graphicsQuality_low" name="settings_autoQuality" value="0" hidden>
      <label for="settings_graphicsQuality_low">Low</label>
      </span>
      <span>
      <input type="radio" id="settings_graphicsQuality_med" name="settings_autoQuality" value="1" hidden>
      <label for="settings_graphicsQuality_med">Medium</label>
      </span>
      <span>
      <input type="radio" id="settings_graphicsQuality_high" name="settings_autoQuality" value="2" hidden>
      <label for="settings_graphicsQuality_high">High</label>
      </span>
      <span>
      <input type="radio" id="settings_graphicsQuality_custom" name="settings_autoQuality" value="3" hidden>
      <label for="settings_graphicsQuality_custom">Custom</label>
      </span>
    </div>
      <!-- -- -- -- -->
      <div class="r7Adv gui_settingsAdvancedParentGrid" id="gui_advancedSettings">
    <!-- -- -- -- -->
      <div class="cellMargin settings_icon" id="settings_render"></div>
      <div class="settings_optionHeader">Render Resolution</div>
      <div class="settings_radio" id="settingsRadioBlock_resolution">
      <span>
        <input type="radio" id="settings_render_25" name="settings_renderPerc" value=".25" hidden>
        <label for="settings_render_25">25%</label>
      </span>
      <span>
        <input type="radio" id="settings_render_50" name="settings_renderPerc" value=".5" hidden>
        <label for="settings_render_50">50%</label>
      </span>
      <span>
        <input type="radio" id="settings_render_75" name="settings_renderPerc" value=".75" hidden>
        <label for="settings_render_75">75%</label>
      </span>
      <span>
        <input type="radio" id="settings_render_100" name="settings_renderPerc" value="1" hidden>
        <label for="settings_render_100">100%</label>
      </span>
      </div>
    <!-- -- -- -- -->
      <div class="cellMargin settings_icon" id="settings_fog"></div>
      <div class="settings_optionHeader">Fog Quality</div>
      <div class="settings_radio" id="settingsRadioBlock_fog">
      <span>
        <input type="radio" id="settings_noRedFog" name="settings_fogLevel" value="0" hidden>
        <label for="settings_noRedFog">Low</label>
      </span>
      <span>
        <input type="radio" id="settings_cheapResFog" name="settings_fogLevel" value="1" hidden>
        <label for="settings_cheapResFog">Medium</label>
      </span>
      <span>
        <input type="radio" id="settings_highResFog" name="settings_fogLevel" value="2" hidden>
        <label for="settings_highResFog">High</label>
      </span>
      </div>
    <!-- -- -- -- -->
      <div class="cellMargin settings_icon" id="settings_bloom"></div>
      <div class="settings_optionHeader">Bloom Effects</div>
      <div class="settings_radio" id="settingsRadioBlock_bloom">
      <span>
        <input type="radio" id="settings_noBloom" name="settings_bloomEffects" value="0" hidden>
        <label for="settings_noBloom">Off</label>
      </span>
      <span>
        <input type="radio" id="settings_bloomActive" name="settings_bloomEffects" value="1" hidden>
        <label for="settings_bloomActive">On</label>
      </span>
      </div>
    <!-- -- -- -- -->
      </div>
    </div>
      <div class="settingsGridSpan settingsEmptySpacer"></div>
    </div>
    <div class="guiSettingsFooterButtons">
    <div class="guiButton" id="guiSettingsBackButton">close</div>
    </div>
  </div>
    </div>
  `;e.innerHTML=i,this.guiWindows.settingsGui.gui=e;let s=this;this.qualitySlider=document.getElementById("SettingsGraphicsQualitySlider");let r=document.getElementById("guiSettingsBackButton");r.onclick=d=>{s.svgCheckClick(d,"close")},[[this.guiRoot+"settingsIcons/settings_user.svg","settings_user",["settings_icon_scale"],!1],[this.guiRoot+"settingsIcons/settings_left_right.svg","settings_left_right",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_mouse.svg","settings_mouse",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_graphics.svg","settings_graphics",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_render.svg","settings_render",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_fog.svg","settings_fog",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_bloom.svg","settings_bloom",["settingsIconStyle"],!1]].forEach(d=>{vt.svgButtonPromise(...d)});let o=document.getElementById("settings_usernameInput");o.onkeyup=d=>{s.keyUsernameSet(d)},o.onkeydown=d=>{s.keyDownUsernameSet(d)},this.guiWindows.settingsGui.usernameInput=o,document.getElementById("settings_sendUsername").addEventListener("click",()=>{s.sendUsernameUpdate(o)});let h=document.getElementById("settings_usernameResponseMessage");this.guiWindows.settingsGui.usernameReturn=h;let c,u;this.guiWindows.settingsGui.advObj=document.getElementById("gui_advancedSettings"),this.guiWindows.settingsGui.customObj=document.getElementById("settings_graphicsQuality_custom"),c=["settings_graphicsQuality_low","settings_graphicsQuality_med","settings_graphicsQuality_high","settings_graphicsQuality_custom"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=parseInt(f.value);f.addEventListener("change",p=>{s.pxlQuality.setQualityLevel(v),s.setRadioValues()})}c=["settings_render_25","settings_render_50","settings_render_75","settings_render_100"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=parseFloat(f.value);f.addEventListener("change",p=>{s.guiWindows.settingsGui.customObj.checked=!0,s.pxlQuality.setGraphicsSettings({resolution:v}),s.pxlQuality.setQualityCookie(3)})}c=["settings_noRedFog","settings_cheapResFog","settings_highResFog"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=f.value;f.addEventListener("change",p=>{s.guiWindows.settingsGui.customObj.checked=!0,s.pxlQuality.setGraphicsSettings({fog:v}),s.pxlQuality.setQualityCookie(3)})}c=["settings_noBloom","settings_bloomActive"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=f.value==1;f.addEventListener("change",p=>{s.guiWindows.settingsGui.customObj.checked=!0,s.pxlQuality.setGraphicsSettings({bloom:v}),s.pxlQuality.setQualityCookie(3)})}c=["settings_tankTurning","settings_strafing"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=f.value==1;f.addEventListener("change",p=>{s.pxlQuality.setGraphicsSettings({leftRight:v},null)})}c=["settings_dragLooking","settings_pointLooking"],u=c.length;for(let d=0;d<u;++d){let m=c[d],f=document.getElementById(m);this.setRadioStyle(f,d,u);let v=f.value==1;f.addEventListener("change",p=>{s.pxlQuality.setGraphicsSettings({mouse:v},null)})}this.setRadioValues()}setRadioStyle(e,t,i){let s="settings_radio_label_mid";t==0?s="settings_radio_label_start":t==i-1&&(s="settings_radio_label_end"),e.parentNode.children[1].classList.add(s)}setRadioValues(){let e=this.pxlQuality.settings;Object.keys(e).forEach(i=>{let s=document.getElementById("settingsRadioBlock_"+i);if(s){let r=i=="resolution"?e[i]*4-1:~~e[i];s.children[r].children[0].checked=!0}})}settingsGuiAdvObjSizing(e=!0){let t=this.guiWindows.settingsGui.advObj,i=t.offsetHeight;t.style.maxHeight=(e?i:0)+"px",t.setAttribute("maxHeight",i)}settingsGuiToggle(e=null,t=!0){this.guiWindows.settingsGui||this.settingsGuiBuild(),e=e??!this.guiWindows.settingsGui.active,e&&this.guiWindows.settingsGui&&(this.guiWindows.settingsGui.usernameReturn.innerText=""),this.guiWindows.settingsGui.active=e,this.promptFader(this.guiWindows.settingsGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.toggleHudBlock(e,!1),this.togglePxlNavDataDisplay(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro())}togglePxlNavDataDisplay(e=null){e==null&&(this.guiWindows.settingsGui?e=this.guiWindows.settingsGui.active:e=!1),this.pxlNavData.active=e;let t=this.pxlNavData.height||200;this.pxlNavData.gui.style.maxHeight=e?t+"px":"0px",e||(this.pxlNavData.height=this.pxlNavData.gui.offsetHeight)}renderRadius(e){this.pxlEnv.mapGlowPass.strength=Number(e),this.pxlEnv.roomBloomPass.strength=Number(e)}renderThreshold(e){this.pxlEnv.mapGlowPass.threshold=Number(e),this.pxlEnv.roomBloomPass.threshold=Number(e)}renderGlowRadius(e){this.pxlEnv.mapGlowPass.radius=Number(e),this.pxlEnv.roomBloomPass.radius=Number(e)}renderResolution(e){this.pxlQuality.screenResPerc=e*.75+.25,this.pxlDevice.resizeRenderResolution()}inviteUserBuild(){this.guiWindows.inviteUserGui={},this.guiWindows.inviteUserGui.gui=null,this.guiWindows.inviteUserGui.active=!1;let e=document.createElement("div");e.id="gui_inviteUserWindow",e.classList.add("gui_inviteUserParentStyle"),this.prepPromptFader(e),document.body.appendChild(e);let t=window.location+"";console.log(t),t=t.replace(/^https?:\/\//,""),console.log(t);let i="";i+=`
      <div class="gui_inviteUserBody">
        <div class="iu_urlStyle">${t}</div>
        <div id="iu_copy" class="iu_copyStyle">Copy</div>
      </div>
  `,e.innerHTML=i;let s=this.pxlUtils,r=document.getElementById("iu_copy");r.addEventListener("click",()=>{s.copyRoomUrl()?r.innerText="Copied":r.innerText="Error",r.timeout&&clearTimeout(r.timeout),r.timeout=setTimeout(()=>{r.innerText="Copy",clearTimeout(r.timeout)},2e3)}),this.guiWindows.inviteUserGui.gui=e}inviteUserPosition(){if(this.guiWindows.inviteUserGui&&this.guiWindows.inviteUserGui.active){let t=document.getElementById("ft3Button").getBoundingClientRect();this.guiWindows.inviteUserGui.gui.style.display="grid",this.guiWindows.inviteUserGui.gui.style.top=t.y,this.guiWindows.inviteUserGui.gui.style.right=this.pxlDevice.sW-t.x+5,this.guiWindows.inviteUserGui.gui.style.minHeight=t.height}}toggleInviteUser(e=null){this.guiWindows.inviteUserGui||this.inviteUserBuild(),e=e??!this.guiWindows.inviteUserGui.active,this.guiWindows.inviteUserGui.active=e,this.promptFader(this.guiWindows.inviteUserGui.gui,e),this.inviteUserPosition()}buildMobileWelcome(){this.guiWindows.mobileGui={},this.guiWindows.mobileGui.gui=null,this.guiWindows.mobileGui.active=!1;let e=document.createElement("div");e.id="gui_mobileWelcomeGuiWindow",e.classList.add("gui_helpGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+=`
    <div id="gui_helpContent" class="gui_contentStyle" style="min-height:45%;">
  <div class="gui_mobileBody">
    welcome to
          <br>${this.projectTitle}
  </div>
  <div id="guiHelpFooter" class="gui_footer" style="margin-bottom: 4vh;">
    <div class="guiButton" style="font-weight: 700; font-size: 5vw;" id="guiMobileWelcomeButton">enter</div>
  </div>
  <div class="gui_spacer"></div>
    </div>
  `,e.innerHTML=t;let i=this,s=document.getElementById("guiMobileWelcomeButton");s.onclick=r=>{i.toggleMobileWelcome(!1),i.pxlEnv.postHelpIntro()},this.guiWindows.mobileGui.gui=e}toggleMobileWelcome(e=null){this.guiWindows.mobileGui||this.buildMobileWelcome(),e=e??!this.guiWindows.mobileGui.active,this.guiWindows.mobileGui.active=e,this.promptFader(this.guiWindows.mobileGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e)}ctaBuildPopup(e=""){this.ctaContentLoading||(this.googleDocHTML?this.ctaDisplayPopup():(this.ctaContentLoading=!0,this.pxlFile.getURLContent(this.ctaLocalDocURL.blmSupport).then(t=>{this.ctaContentLoading=!1,this.googleDocHTML=t,this.ctaDisplayPopup()})))}ctaDisplayPopup(){this.actionPopUp&&this.actionPopUp.parentNode.removeChild(this.actionPopUp);let e=this.googleDocHTML;this.actionPopUp=document.createElement("div"),this.actionPopUp.setAttribute("id","ctaPopup"),this.actionPopUp.classList.add("parentGoogleLinkDoc"),this.actionPopUp.classList.add("fader"),this.actionPopUp.classList.add("visOff");let t=document.createElement("div");t.setAttribute("id","ctaPopupInner"),this.actionPopUp.appendChild(t),document.body.appendChild(this.actionPopUp);let i=null;e==""||!e?(i=document.createElement("iframe"),i.src="",i.classList.add("iframeGoogleLinkDoc"),t.appendChild(i),i.referrerpolicy="unsafe-url"):(t.innerHTML=e,t.classList.add("iframeGoogleLinkDoc"));let s=this;this.actionPopUp.onclick=function(r){r.srcElement.getAttribute("id")=="ctaPopup"&&(s.promptFader(this,!1,null,!0),s.actionPopUp=null)},i?i.onload=function(){setTimeout(()=>{this.promptFader(this.actionPopUp,!0,null,!1)},100)}:setTimeout(()=>{this.promptFader(this.actionPopUp,!0,null,!1)},100)}getUserControls(e){if(!e)return[null];let t=e,i=t.userStatusGui,s=t.audio,r=t.audioMuted,a=t.userSoundGui,o=t.displayName,l=t.userNameGui,h=t.verse;return{curAvatar:t,curName:o,curAudio:s,curAudioMuted:r,curGui:i,curNameGui:l,curAudioGui:a,curVerse:h}}async setUserControlPosition(){if(this.userControlBlock){let e=0,t=0;if(this.hudTopBar){let i=this.hudTopBar.getBoundingClientRect();e=i.y+i.height}this.userControlBlock.gui.style.top=e+"px"}}buildUserSpeaker(){let e={},t=this.userControlBlock.speakerIcon.svg.cloneNode(!0);t.classList.add("userControlSpeakerStyle"),t.classList.add("userControlSpeakerButtonStyle"),e.gui=t,e.remoteMuted=!1,e.volPrev=0;let i=t.children;for(let r=0;r<i.length;++r){let a=i[r],o=a.getAttribute("id");e[o]=a,o=="mute"?a.classList.add("userControlVisStyle"):o=="button"&&a.classList.add("userControlSpeakerButtonStyle")}let s=e.volLines.children;for(let r=0;r<s.length;++r){let a=s[r],o=a.getAttribute("id");e[o]=a}s=e.remoteMutedLines.children;for(let r=0;r<s.length;++r){let a=s[r],o=a.getAttribute("id");e[o]=a}return e}async addUserControls(e,t=!1){let{curAvatar:i,curName:s,curGui:r}=this.getUserControls(e),a=document.createElement("div");a.classList.add("userControlProximityOff"),a.classList.add("userControlParentStyle"),a.classList.add("userControlSpeakerButtonStyle"),this.mobile&&(a.style.display="none");let o=this;a.onclick=()=>{o.setUserControlMute(e)},i.userStatusGui=a,this.userControlBlock.gui.appendChild(a);let l=document.createElement("div");l.classList.add("userControlInnerParentStyle"),a.appendChild(l);let h=document.createElement("div");h.classList.add("userControlSpeakerParentStyle");let c=this.buildUserSpeaker();h.appendChild(c.gui),i.userSoundGui=c,l.appendChild(h);let u=document.createElement("div");u.classList.add("userControlNameStyle"),u.innerText=s,i.userNameGui=u,l.appendChild(u),this.setUserControlColor(e)}async setUserControlVolume(e,t,i=!0){if(this.userControlBlock.activeList.includes(e)){let{curAudioGui:s,curAudioMuted:r}=this.getUserControls(e);s&&(!r||t==0)&&(s.remoteMuted?t=0:i&&t>0&&(t*=2,t=Math.min(1,Math.max(t,(t+s.volPrev)*.5))),s.volPrev=t,s.volLines.style.opacity=t,s.volLines.style.filter="alpha(opacity="+t*100+")")}}async setUserControlMute(e){let{curAvatar:t,curAudio:i,curAudioMuted:s,curAudioGui:r}=this.getUserControls(e);if(i){let a=!s;a?(this.setUserControlVolume(e,0,!1),r.mute.classList.add("userControlVisible"),i.volume=0,i.muted=!0):(r.mute.classList.remove("userControlVisible"),i.muted=!1,i.volume=1),t.audioMuted=a}}async setUserControlRemoteMute(e,t=null,i=!0,s="#ffffff"){let{curAudio:r,curAudioGui:a}=this.getUserControls(e);if(a){t==null&&(r?t=r.muted:t=!1);let o=typeof t=="object"?t.muted:t;a.remoteMuted=o,a.base.setAttribute("fill",o?"#ff0000":s),a.remoteMutedLines.style.display=o||!i?"inline-block":"none",a.remoteS1.setAttribute("stroke",i?"#ff0000":s),a.remoteS2.setAttribute("stroke",i?"#ff0000":s),this.setUserControlVolume(e,0,!1)}}async setUserControlVis(e,t=null,i=!1){let{curAvatar:s,curGui:r,curAudio:a}=this.getUserControls(e);if(r){let o="userControlProximityOff";if(t==null&&(t=!r.classList.contains(o)),t)r.classList.remove(o),r.style.maxWidth=r.children[0].getBoundingClientRect().width+"px",this.setUserControlVolume(e,0),this.userControlBlock.activeList.includes(e)||this.userControlBlock.activeList.push(e);else{r.classList.add(o),r.style.maxWidth="30px";let l=this.userControlBlock.activeList.indexOf(e);l>-1&&this.userControlBlock.activeList.splice(l,1)}this.userControlBlock.gui.style.padding=this.userControlBlock.activeList.length==0?"0px":"5px"}}async deleteUserControlVis(e){let{curAvatar:t,curGui:i}=this.getUserControls(e);if(i){i.classList.add("userControlProximityOff"),i.style.maxWidth="30px";let r=this.userControlBlock.activeList.indexOf(e);r>-1&&this.userControlBlock.activeList.splice(r,1),this.userControlBlock.gui.style.padding=this.userControlBlock.activeList.length==0?"0px":"5px",i&&i.parentNode.removeChild(i)}}userControlsSwap(e,t){let i=this.userControlBlock.activeList.indexOf(e);i>-1&&(this.userControlBlock.activeList.splice(i,1),this.userControlBlock.activeList.includes(t)||this.userControlBlock.activeList.push(t))}setUserControlColor(e,t=null){let{curAvatar:i,curGui:s,curAudioGui:r,curVerse:a}=this.getUserControls(e),o=!0;if(t==null)if(o)t="#ffffff";else{let h=this.pxlUtils.stringToRgb(a,.3);t=this.pxlUtils.rgbToHex(...h)}s.style.color=t,r.base.setAttribute("fill",t),r.mute.setAttribute("stroke",t),r.mid.setAttribute("fill",t),r.max.setAttribute("fill",t),r.volPrev=0,r.volLines.style.opacity=0,r.volLines.style.filter="alpha(opacity=0)";let l=this;i.userStatusGui.onclick=()=>{l.setUserControlMute(e)},this.setUserControlRemoteMute(e,null,o,t)}toggleUserControls(e){if(!e)return null}};var xl=class{constructor(e,t){this.active=!1,this.isEditing=!1,this.name="GLSL Editor",this.type="shaderGui",this.pxlCore=e,this.pxlEnv=e.pxlEnv,this.guiManager=t,this.parent=null,this.gui=null,this.helpGui=null,this.shaderEditorDisplay=null,this.children={},this.uniformsObj=null,this.vertObj=null,this.fragObj=null,this.currentShader=null,this.shaderSliderValues=new M,this.editorWidthMinMax={min:30,max:70}}addSlider(e,t,i,s,r,a,o,l){typeof e=="string"&&(e=document.getElementById(e));let h=document.createElement("div");h.style.display="grid",h.style.gridAutoFlow="column",h.style.alignItems="center",h.style.gridAutoColumns="max-content auto max-content",h.innerHTML="<div class='input_sliderLabel'>"+t+" : </div>";let c=document.createElement("input");c.type="range",c.classList.add("input_sliderRange"),c.min=s,c.max=r,c.step=a,c.value=i,h.appendChild(c);let u=document.createElement("input");u.type="number",u.classList.add("gui_defaultInput"),u.classList.add("input_numberInput"),u.value=i,h.appendChild(u),u.onchange=d=>{c.value=d.target.value},c.onchange=d=>{u.value=d.target.value,o(d.target.value,...l)},c.oninput=d=>{u.value=d.target.value,o(d.target.value,...l)},e.appendChild(h)}updateShaderTextFields(e=null){let t,i="shaderGui";e||(e=this.pxlEnv.currentRoom==this.pxlEnv.mainRoom?this.currentShader:this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getCurrentShader());try{t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].readShader(e,this.shaderSliderValues)}catch{return}let s,r,a;s=r=a="Unable To Load";try{t.uniforms.sliders={type:"v",value:this.shaderSliderValues},s=JSON.stringify(t.uniforms),r=t.vertexShader,a=t.fragmentShader,s="";for(let o in t.uniforms){let l="float",h={t:"sampler2D",b:"bool",i:"int",f:"float",v:"vec",c:"vec"};if(l=typeof t.uniforms[o].value,l=="object"){if(l="",!t.uniforms[o].value)continue;"image"in t.uniforms[o].value?l="sampler2D":l=l+"vec"+Object.keys(t.uniforms[o].value).length}else h.hasOwnProperty(t.uniforms[o].type)&&(l=t.uniforms[o].type=="i"?"i":""),h.hasOwnProperty(t.uniforms[o].type)&&(l=h[t.uniforms[o].type]);s+=`uniform ${l} ${o};   `}r=r.replace(/[\t]/g,"  "),a=a.replace(/[\t]/g,"  ")}catch(o){console.log("Error Reading Shader"),console.log(o)}t&&(t.needsUpdate=!0,this.children.uniformsObj.value=s,this.children.vertObj.value=r,this.children.fragObj.value=a)}buildShaderEditor(){let e="shaderGui",t=document.createElement("div");t.id="guiShaderEditorBlock",t.classList.add("gui_shaderEditorBlockStyle"),t.style.transition="max-width .5s ease, opacity .8s, filter .8s",this.pxlEnv.pxlGuiDraws.prepPromptFader(t),this.pxlEnv.pxlGuiDraws.guiWindows[e]={},this.pxlEnv.pxlGuiDraws.guiWindows[e].gui=t,this.pxlEnv.pxlGuiDraws.guiWindows[e].active=!1,this.gui=t;let i=document.createElement("div");i.id="guiShaderHelpBlock",i.classList.add("gui_shaderHelpBlockStyle"),i.style.transition="left .3s ease, opacity .8s, filter .8s",this.pxlEnv.pxlGuiDraws.prepPromptFader(i),this.pxlEnv.pxlGuiDraws.guiWindows[e].help=i,this.helpGui=i;let s=this.pxlEnv.currentRoom,r=this.pxlEnv.roomSceneList[s].geoList,a=Object.keys(r),o="";a.forEach(_=>{if(["Mesh","Points"].includes(r[_].type)&&r[_].material.type=="ShaderMaterial"){let b=_.substring(0,1).toUpperCase()+_.substring(1,_.length);o+="<option value='geo_"+_+"'>"+b+"</option>"}});let l="",h="selected";this.pxlEnv.pxlGuiDraws.guiWindows[e].currentShader="script_fog";let c=`
    <div id="gui_shaderEditorParent" class="gui_shaderEditorParentStyle">
      <div id="gui_shaderEditorHeaderBlock" class="gui_shaderEditorHeaderBlock">
      <div class="gui_shaderEditorOptionBlock">
        <div class="gui_shaderEditorTitleBlock">
        <div id="gui_shaderEditorTitleParent" class="gui_shaderEditorTitleParentStyle">
            <div id="gui_shaderEditorTitle" clsss="gui_shaderEditorTitleStyle">GLSL Shader Editor</div>
            <div id="gui_shaderEditorHeaderList" clsss="gui_shaderEditorHeaderListStyle">
              <span id="gui_shaderEditorPulldownHeader" clsss="gui_shaderEditorPulldownHeaderStyle">Edit Shader</span>
              <select name="shaderEditor_loadShader" id="shaderEditor_loadShader" class="pickerStyle gui_shaderPickerStyle">
                <option value="script_avatar" ${l}>Avatar</option>
                <option value="script_fog" ${h}>Fog</option>
                <option value="script_dArrows">Direction Arrows</option>
                <option value="script_userScreens">User Screens</option>
                <option value="script_warpZonePortals">Warp Zone Portals</option>
                <option value="script_lizardking">Item; Lizard King</option>
                <option value="script_majorTom">Item; Major Tom</option>
                <option value="script_fractalSubstrate">Item; Fractal Substrate</option>
                <option value="script_fractalEcho">Item; Fractal Echo Pass</option>
                ${o}
              </select>
            </div>
            <div id="gui_shaderEditorFontSize" clsss="gui_shaderEditorFontSizeStyle">
              <span  style="font-size:.75em;margin-right:5px;">Font Size</span>
              <span id="gui_shaderEditorFontSmaller" class="shaderEditor_settingsButton">-</span>
              <span id="gui_shaderEditorFontLarger" class="shaderEditor_settingsButton">+</span>
              <span class="gui_shaderEditorOptionBarSpacer"> </span>
              <span id="gui_shaderEditorCloseButton" class="shaderEditor_settingsButton">X</span>
            </div>
          </div>
        </div>
        <div class="gui_shaderEditorHeaderLine"></div>
        <div id="guiShaderUserSliders"></div>
        <div class="gui_shaderEditorHeaderLine"></div>
      </div>
      </div>
      
      
      <div id="guiShaderFieldParent" class="gui_shaderEditorFieldParentStyle">
        <span style='height:12px'>Uniforms -</span>
        <textarea spellcheck="false" placeholder="Shader Uniforms" rows="3" id="shaderEditor_uniformInput" style="height:unset;" readonly></textarea>
        <span style='height:12px'>Vertex Shader -</span>
        <textarea spellcheck="false" placeholder="Vertex Shader" id="shaderEditor_vertInput"></textarea>
        <span style='height:12px'>Fragment Shader -</span>
        <textarea spellcheck="false" placeholder="Fragment Shader" id="shaderEditor_fragInput"></textarea>
      </div>
      <div id="shader_updateShader" class="shaderEditor_sendMessage">Update Shader</div>
    </div>
    `,u="<div class='gui_shaderHelpSpacerStyle'></div>";c+=`
    <div id="gui_shaderHelpBlock" class="gui_shaderHelpBlockStyle">
      <div class="gui_shaderHelpTitle">:: Keyboard Shortcuts ::</div>
      ${u}
      <span><span class="gui_boldText">Ctrl + Enter</span><br> - Update Shader on Material</span>
      <br>&nbsp;&nbsp;<span>Returns use existing indent type (Spaces or Tabs)</span>
      ${u}
      <span><span class="gui_boldText">Ctrl + D</span><br> - Duplicate current line</span>
      ${u}
      <span><span class="gui_boldText">Ctrl + K</span><br> - Comment current/selected lines</span>
      ${u}
      <span><span class="gui_boldText">Ctrl + Shift + K</span><br> - Uncomment current/selected lines</span>
      ${u}
      <span><span class="gui_boldText">Ctrl + NumPad {1,2,3}</span><br> - Add selection or '.0' into float(), vec2(), vec3() </span>
      ${u}
      <span><span class="gui_boldText">Ctrl + {Up,Down,Left,Right}</span><br> - Searches for current selection in direction</span>
      ${u}
      <span><span class="gui_boldText">Y</span><br> - To opn/close the Shader Editor</span>
      ${u}
    </div>
    `,t.innerHTML=c,document.body.appendChild(t);let d=document.getElementById("guiShaderUserSliders");this.parentObj=d;let m=this.shaderSliderValues,f=(_,...b)=>{m[b[0]]=_};this.addSlider(d,"sliders.x",0,-1,1,.01,f,["x"]),this.addSlider(d,"sliders.y",0,-5,5,.1,f,["y"]),this.addSlider(d,"sliders.z",0,-10,10,.1,f,["z"]),this.children.shaderSliders=d,this.children.shaderParentObj=document.getElementById("shaderEditor_uniformInput").parentNode,this.children.shaderEditor=document.getElementById("gui_shaderEditorParent"),this.children.headerBar=document.getElementById("gui_shaderEditorHeaderBlock"),this.children.titleParentObj=document.getElementById("gui_shaderEditorTitleParent"),this.children.titleObj=document.getElementById("gui_shaderEditorTitle"),this.children.pulldownHeaderObj=document.getElementById("gui_shaderEditorPulldownHeader"),this.children.uniformsObj=document.getElementById("shaderEditor_uniformInput"),this.children.vertObj=document.getElementById("shaderEditor_vertInput"),this.children.fragObj=document.getElementById("shaderEditor_fragInput"),this.children.updateObj=document.getElementById("shader_updateShader"),this.children.helpDiv=document.getElementById("gui_shaderHelpBlock"),this.children.shaderList=document.getElementById("gui_shaderEditorHeaderList"),this.children.shaderFieldParent=document.getElementById("guiShaderFieldParent"),this.shaderEditorDisplay=document.getElementById("shaderEditorDisplay"),this.children.shaderSelect=document.getElementById("shaderEditor_loadShader");let v=document.getElementById("gui_shaderEditorFontSize");v.style.justifySelf="end",v.style.marginTop="2px",v.style.marginRight="3px",v.style.userSelect="none",v.style.display="flex",v.style.alignItems="center";let p=this;this.children.shaderSelect.onchange=_=>{p.updateShaderTextFields(this.children.shaderSelect.value)};let g=document.getElementById("gui_shaderEditorFontSmaller");g.onclick=_=>{p.shiftFontSize(-.15)};let x=document.getElementById("gui_shaderEditorFontLarger");x.onclick=_=>{p.shiftFontSize(.15)};let y=document.getElementById("gui_shaderEditorCloseButton");y.onclick=_=>{p.toggleShaderEditor()},this.children.updateObj.addEventListener("click",()=>{this.isEditing=!1;let b=document.getElementById("shaderEditor_uniformInput").value,S=document.getElementById("shaderEditor_vertInput"),E=S.value,P=document.getElementById("shaderEditor_fragInput"),D=P.value,O=document.createElement("div");O.innerHTML=b,b=O.innerText,O.innerHTML=E,E=O.innerText,O.innerHTML=D,D=O.innerText,p.pxlEnv.roomSceneList[p.pxlEnv.currentRoom].setShader(b,E,D),S.blur(),P.blur(),p.guiManager.pxlNavCanvas.focus()}),this.children.vertObj.onfocus=_=>{p.focusShaderMessage(_,"vertObj")},this.children.vertObj.onkeydown=_=>{p.keyShaderMessage(_)},this.children.vertObj.onmousedown=_=>{p.mDownShaderMessage(_)},this.children.vertObj.onclick=_=>{p.clickShaderMessage(_)},this.children.vertObj.ondblclick=_=>{p.dblclickShaderMessage(_)},this.children.fragObj.onfocus=_=>{p.focusShaderMessage(_,"fragObj")},this.children.fragObj.onkeydown=_=>{p.keyShaderMessage(_)},this.children.fragObj.onmousedown=_=>{p.mDownShaderMessage(_)},this.children.fragObj.onclick=_=>{p.clickShaderMessage(_)},this.children.fragObj.ondblclick=_=>{p.dblclickShaderMessage(_)},this.mouseX=0,this.mouseY=0,this.prevSelectStart=0,this.prevSelectEnd=0}shiftFontSize(e){let t=document.getElementById("gui_shaderEditorParent");if(!t)return;t.hasAttribute("styleStore")||t.setAttribute("styleStore",1);let r=parseFloat(t.getAttribute("styleStore"))+e;t.setAttribute("styleStore",r),t.style.fontSize=r+"em";let a=document.getElementById("shaderEditor_uniformInput");a&&(a.style.fontSize=r+"em");let o=document.getElementById("shaderEditor_vertInput");o&&(o.style.fontSize=r+"em");let l=document.getElementById("shaderEditor_fragInput");l&&(l.style.fontSize=r+"em"),setTimeout(()=>{this.resizeShaderElements()},130)}updateHeaderBar(){this.isEditing?(this.children.titleParentObj.style.fontSize="2.05em",this.children.titleObj.style.fontSize="1.15em"):(this.children.titleParentObj.style.fontSize="1.3em",this.children.titleObj.style.fontSize="1em")}mDownShaderMessage(e){this.mouseX=e.x,this.mouseY=e.y}clickShaderMessage(e){if(!this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive){let t=Math.abs(this.mouseX-e.x),i=Math.abs(this.mouseY-e.y);if(Math.max(t,i)<5){let r=e.target,a=r.selectionStart,o=r.selectionEnd,l=parseInt((a+o)*.5);a!=o&&(this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectStart=a,this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectEnd=o)}}}dblclickShaderMessage(e){let t=this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectStart,i=this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectEnd,s=e.target,r=s.selectionStart,a=s.selectionEnd,l=s.value.substring(t,i+20),h=l.match(/[a-zA-Z0-9\.\_\[\]]+/);h&&!l[0].match(/\n/)&&(i=t+h[0].length),s.setSelectionRange(t,i),this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive=!0,setTimeout(()=>{this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive=!1},500)}keyShaderMessage(e){if(e.repeat)return!1;let t=e.key,i=e.code,s=e.shiftKey,r=e.ctrlKey,a=e.altKey,o=i.includes("Numpad");if(!(t=="Enter"||t=="Tab"||i=="KeyD"&&r||i=="KeyK"&&r||o&&r||i.includes("Arrow")&&r))return!1;e.preventDefault();let h=e.target;if(i=="NumpadAdd"){let p=window.getComputedStyle(h),g=parseFloat(p.fontSize)+2;return h.style.fontSize=g,!1}if(i=="NumpadSubtract"){let p=window.getComputedStyle(h),g=parseFloat(p.fontSize)-2;return h.style.fontSize=g,!1}let c=h.selectionStart,u=h.selectionEnd,d=h.value;if(i.includes("Arrow")){if(c==u)return!1;let p=d.substring(c,u),g,x,y;if(i=="ArrowUp"?(x=d.substring(0,c),c=x.search(/.*$/),i="ArrowLeft"):i=="ArrowDown"&&(x=d.substring(u,d.length),u=x.search(/\n/)+u,i="ArrowRight"),i=="ArrowLeft"){g=new RegExp(p+".*","gm"),x=d.substring(0,c);let _=[...x.matchAll(p,"g")];if(_.length==0&&(_=[...d.matchAll(p,"g")],_.length==0))return!1;y=_.pop().index}if(i=="ArrowRight"){g=new RegExp(p,"m"),x=d.substring(u,d.length);let _=g.exec(x);if(_)y=_.index+u;else{if(_=g.exec(d),!_)return!1;y=_.index}}if(y>-1){let _=y+p.length;h.setSelectionRange(y,_);let b=h.getBoundingClientRect(),E=window.getComputedStyle(h).font,P=[d.slice(0,y),"<span id='tmpShaderPosition'>.</span>",d.slice(y)].join("");P=P.replace(/(?:\r\n|\r|\n)/g,"<br>");let D=document.createElement("div");D.style.position="fixed",D.style.width=b.width,D.style.height=b.height,D.style.overflowY="scroll",D.style.font=E,D.innerHTML=P,document.body.appendChild(D);let B=D.querySelector("#tmpShaderPosition").offsetTop-200;document.body.removeChild(D),h.scrollTo(0,B)}return!1}if(t=="Enter"&&r)return this.children.updateObj.click(),h.focus(),h.setSelectionRange(c,u),!1;if(o){let g=d.substring(c,u),x=g.length>0,y=d.substr(c-1,1);y=/[\w|\d]/.test(y)&&g.length==0?" ":"";let _=d.substr(u+1,1);_=/[\w|\d]/.test(_)&&g.length==0?" ":"";let b=c+y.length;if(i=="Numpad1"){let S="float(";b+=S.length,g=x?g:".0",g=S+g+")"}else if(i=="Numpad2"){let S="vec2(";b+=S.length,g=x?g:".0, .0",g=S+g+")"}else if(i=="Numpad3"){let S="vec3(";b+=S.length,g=x?g:".0, .0, .0",g=S+g+")"}return g=y+g+_,document.execCommand("insertText",!1,g),x||h.setSelectionRange(b,b),!1}let m=Math.min(c,u),f=d.substr(0,m);if(i=="KeyK"){let p=!1,g=!1,x=[],y,_,b;if(c!=u&&(y=f.search(/.*$/),_=u,b=d.substring(y,u),p=/\n/.test(b)),!p){let S=f.search(/[\S\w].*$/),E=!1;if(S==-1){if(S=d.substring(m,d.length).search(/(?:[^\s])/),S==-1)return!1;S+=m,E=!0}let P=S,D=P,O="";if(s){if(D+=2,d.substr(P,2)!="//")return!1;c-=2,u-=2}else{if(d.substr(P,2)=="//")return!1;O="//",c+=2,u+=2}return h.setSelectionRange(P,D),document.execCommand("insertText",!1,O),h.setSelectionRange(c,u),!1}if(p){let S=d.substring(_,d.length),E=_+S.search(/\n./),P=d.substring(y,E),D=s?-2:2,O=[...P.matchAll(/[\S\w].*/g)],B=[],V=c-y,j=_-y;return O.forEach(z=>{let q=z.index;B.push(q)}),B=B.reverse(),B.forEach(z=>{let q=P.substr(z,2);if(s){if(q!="//")return;P=P.substring(0,z)+P.substring(z+2,P.length)}else{if(q=="//")return;P=P.substring(0,z)+"//"+P.substring(z,P.length)}c+=z<V?D:0,u+=z<j?D:0}),h.setSelectionRange(y,E),document.execCommand("insertText",!1,P),h.setSelectionRange(c,u),!1}return!1}let v=f.split(`
`);if(t=="Enter"||t=="Tab"){let p=v.pop();p.length==0&&(p=v.pop());let g=p.replace(/[\S\w].*$/g,"");t=="Tab"?(g=g.length==0?" ":g.substr(0,1),g===" "?g="  ":g="	"):g=`
`+g;let x=g,y=c,_=u;if(t=="Tab"&&c!=u){let b=d.substring(c,u);b=b.split(`
`),s?b=b.map(S=>S==""?S:S.replace(g,"")):b=b.map(S=>S==""?S:g+S),x=b.join(`
`),_=y+x.length}else y=y+x.length,_=y;return document.execCommand("insertText",!1,x),h.setSelectionRange(y,_),!1}if(i=="KeyD"&&r)if(c==u){let p=d.split(`
`);v.pop();let g=v.length,x=p[g],b=[...v,x].join(`
`).length;x=`
`+x,h.setSelectionRange(b,b),document.execCommand("insertText",!1,x),b=m+x.length,h.setSelectionRange(b,b)}else{let p=d.substring(c,u);h.setSelectionRange(u,u),document.execCommand("insertText",!1,p),u+=p.length,h.setSelectionRange(u,u)}return!1}updateShaderList(){let e=this.children.shaderSelect;if(!e){console.log("No pulldown"),console.log(this.gui);return}let t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getShaderList(),i=Object.keys(t),s="",r=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getCurrentShader();i.forEach(a=>{let o=a==r?" selected":"";s+=`<option value="${a}" ${o}>${t[a]}</option>`}),e.innerHTML=s}resize(e){this.resizeShaderElements()}resizeShaderElements(){let e=0;if(this.hudBottomBar&&(e=this.hudBottomBar.offsetHeight),this.children.headerBar&&(e+=this.children.headerBar.offsetHeight),this.gui){this.gui.style.height=this.guiManager.sH-e;let t=this.children.vertObj.getBoundingClientRect().top,i=this.children.updateObj.getBoundingClientRect().height;i+=40;let s=this.guiManager.sH-i-t;this.children.vertObj.style.maxHeight=s*.4+"px",this.children.vertObj.displayHeight=s*.4,this.children.fragObj.style.maxHeight=s*.6+"px",this.children.fragObj.displayHeight=s*.6,this.children.fieldBodyHeight=s}}toggleShaderEditor(e=null){this.gui||this.buildShaderEditor(),this.updateShaderList(),this.updateShaderTextFields(this.children.shaderSelect.value),e=e??!this.active,this.active=e,this.guiManager.promptFader(this.gui,e),this.guiManager.promptFader(this.helpGui,e),this.pxlEnv.emit("shaderEditorVis",e),e?this.guiManager.pxlNavCanvas.addEventListener("mousedown",this.blurShaderEditor.bind(this)):this.guiManager.pxlNavCanvas.removeEventListener("mousedown",this.blurShaderEditor.bind(this)),setTimeout(()=>{this.resizeShaderElements()},130)}blurShaderEditor(){this.isEditing=!1,document.activeElement.blur();let e=document.getElementById("guiShaderEditorBlock");e.style.maxWidth=this.editorWidthMinMax.min+"vw";let t=document.getElementById("gui_shaderHelpBlock");t&&(t.style.left="max("+this.editorWidthMinMax.min+"vw, 430px)");let i=document.getElementById("shaderEditor_loadShader");i&&(i.style.maxWidth="85px"),this.updateHeaderBar(),setTimeout(()=>{this.resizeShaderElements()},130)}focusShaderMessage(e,t){this.isEditing=!0;let i=this.children,s=i.vertObj.displayHeight,r=i.fragObj.displayHeight,a=Math.max(150,this.guiManager.sH*.135),o=i.fieldBodyHeight-a;s=t=="vertObj"?o:a,r=t=="fragObj"?o:a,i.vertObj.style.maxHeight=s+"px",i.fragObj.style.maxHeight=r+"px";let l=document.getElementById("gui_shaderEditorParent");this.gui.style.maxWidth=this.editorWidthMinMax.max+"vw",this.children?.shaderSelect&&(this.children.shaderSelect.style.maxWidth="225px");let h=document.getElementById("gui_shaderHelpBlock");h&&(h.style.left=this.editorWidthMinMax.max+"vw"),this.updateHeaderBar()}};var yl=class extends vl{constructor(e,t="Metal-Asylum",i="images/assets/",s="images/GUI/"){super(e,t,i,s),this.verbose=e,this.lableBoxSize=40,this.optionWidthRound=10,this.optionWidthAdd=25,this.deviceOptionHeight=[0,300],this.ShaderEditor=null,this.pxlLoaderTotal=5,this.hudVisibility=!0,this.camChoicesActive=!1,this.micChoicesActive=!1,this.textDescriptions={chatIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">C</span> )</span><br>chat',pos:[1,-1.5]},multiverseIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">U</span> )</span><br>multiverse<br>selection',pos:[0,-1.3]},djPlayerVolumeParent:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">B</span> )</span><br>music volume',pos:[0,-1.5]},speakerIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute people<br>pick audio output',pos:[0,-1.5]},micIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">M</span> )</span><br>mute/pick<br>mic input',pos:[0,-1.5]},camIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">V</span> )</span><br>enable/pick<br>video input',pos:[0,-1.5]},helpIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">?</span> )</span><br>help &<br>instructions',pos:[0,-1.5]},infoIconParent:{text:'Info <span class="helpHotKeyParent">( <span class="helpHotKey">I</span> )</span>',pos:[-1,0],offset:[-10,0]},settingsIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">G</span> )</span><br>graphics &<br>navigation',pos:[0,-1.5]},muteAllIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute all users',pos:[1,0]},fullScreenIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">F</span> )</span><br>toggle full screen',pos:[-1,0]},videoQualityIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">H</span> )</span><br>video quality settings',pos:[-1,0]},statsIcon:{text:"jitsi connection status; toggle connection ",pos:[1,0]},usersIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">T</span> )</span> user moderator tools',pos:[1,0]},ft2Button:{text:"Environment",pos:[-1,0],offset:[-10,0]},ft3Button:{text:"Invite Friends",pos:[-1,0],offset:[-10,0]},hud_userCount:{text:"# of People",pos:[-1,0],offset:[-10,0]}},this.activeItem=null,this.actionPopUp=null,this.init()}setDependencies(e){super.setDependencies(e),this.ShaderEditor=new xl(e,this)}init(){super.init()}booted(){super.booted()}step(){super.step()}toggleShaderEditor(){this.ShaderEditor.toggleShaderEditor()}resize(e){super.resize(),this.ShaderEditor&&this.ShaderEditor.resize(e)}};var _l=class{constructor(){this.standingHeight=1.75,this.movementScalar=1,this.jumpScalar=1,this.userScale=1,this.maxStepHeight=5,this.cameraEasing=[.55,.45],this.touchMaxSensitivity=500,this.cameraJumpImpulse=[.045,.085],this.cameraMaxJumpHold=[.55,1],this.gravityRate=0,this.gravityMax=2.5,this.gravityMPS=[1,.5],this.pxlAudio=null,this.pxlTimer=null,this.pxlAutoCam=null,this.pxlEnv=null,this.pxlColliders=null,this.pxlUser=null,this.pxlUtils=null,this.pxlDevice=null,this.pxlGuiDraws=null,this.pxlQuality=null,this.socket=null,this.camera=null,this.canMove=!0,this.HDRView=!1,this.camUpdated=!0,this.cameraBooted=!1,this.hasMoved=!1,this.hasRotated=!1,this.hasJumped=!1,this.hasJumpLock=!1,this.hasGravity=!1,this.roomStandingHeight={default:this.standingHeight},this.standingHeightGravInfluence=0,this.standingMaxGravityOffset=.5,this.walkBounceSeed=230,this.walkBounceHeight=.3,this.walkBounce=0,this.walkBouncePerc=0,this.walkBounceRate=.025,this.walkBounceEaseIn=.03,this.walkBounceEaseOut=.95,this.posRotEasingThreshold=.01,this.cameraMovement=[0,0],this.cameraMovementEase=.85,this.cameraMoveLength=0,this.cameraMoveLengthMult=.1,this.camPosBlend=.65,this.camRotXYZ=new M(0,0,0),this.camRotPitch=new G(0,0),this.cameraJumpActive=!1,this.cameraAllowJump=!0,this.cameraJumpHeight=0,this.cameraJumpVelocity=0,this.cameraJumpVelocityEaseOut=.8,this.cameraJumpInAir=!1,this.floorColliderInitialHit=!1,this.colliderValidityChecked=!0,this.nearestFloorHit=new M(0,0,0),this.nearestFloorObjName=null,this.nearestFloorHitPrev=new M(0,0,0),this.nearestFloorObjNamePrev=null,this.gravitySourceActive=!1,this.gravityDirection=new M(0,-1,0),this.gravityEaseOutRate=.8,this.jump=0,this.releaseJumpLockTime=0,this.releaseJumpLockDelay=.065,this.runMain=!0,this.workerActive=!1,this.worker=null,this.workerTransfers=!1,this.workerMessage=()=>{},this.workerFunc=()=>{},this.deviceKey=()=>{},this.portalList={},this.collidersExist=!1,this.colliderActive=!1,this.colliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderActive=!1,this.antiColliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderTopActive=!1,this.antiColliderTopList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.roomWarpZone=[],this.colliderCurObjHit=null,this.colliderPrevObjHit=null,this.colliderValid=!1,this.colliderFail=!1,this.warpActive=!1,this.warpType=0,this.warpObj=null,this.warpTarget=null,this.hotKeyTriggered=!1,this.eventCheckStatus=!1,this.proximityScaleTrigger=!1,this.colliderShiftActive=!0,this.colliderAdjustPerc=0,this.colliderAdjustRate=.02,this.gyroGravity=[0,0,0],this.cameraPose={alpha:null,beta:null,gamma:null,alphaOffset:0,betaOffset:0,gammaOffset:0,orientation:window.orientation||0,pos:[0,0,0],posOffset:[0,0,0],rx:()=>this.beta,ry:()=>this.alpha,rz:()=>this.gamma,accelZeroed:[0,0,0],accelCalibration:10,accelCalDiv:1/10,accelCalCount:0,accelTotal:[0,0,0],accelPrev:null,accelDelta:[0,0,0],accelClearDelta:()=>{this.accelDelta=[0,0,0]}},this.uniformScalars={curExp:1,darkBase:.1,brightBase:.5,exposureUniformBase:1},this.cameraPosLookAtNames={default:{pos:"Position",lookAt:"LookAt"},mobile:{pos:"PositionMobile",lookAt:"LookAtMobile"},vr:{pos:"PositionVR",lookAt:"LookAtVR"}},this.cameraPos=new M(0,0,0),this.cameraPrevPos=new M(0,0,0),this.cameraPrevLookAt=new M(0,0,0),this.cameraAim=new M(0,0,1),this.cameraAimTarget=new M(0,0,0),this.cameraCross=new M(1,0,0),this.lookAtTargetActive=new M(0,0,0),this.lookAtPerc=new G(1,0),this.lookAtLockPerc=0,this.lookAtLockFader=0,this.lookAtLockFadeRate=.01,this.prevQuaternion=new Ue,this.pi=3.141592653589793,this.touchSensitivityLimits=this.touchMaxSensitivity*this.pi,this.eventCallbacks={},this.init()}setDependencies(e){this.pxlAudio=e.pxlAudio,this.pxlTimer=e.pxlTimer,this.pxlAutoCam=e.pxlAutoCam,this.pxlEnv=e.pxlEnv,this.pxlColliders=e.pxlColliders,this.pxlUser=e.pxlUser,this.pxlUtils=e.pxlUtils,this.pxlDevice=e.pxlDevice,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlQuality=e.pxlQuality,this.socket=e.socket}log(e){this.verbose>=VERBOSE_LEVEL.INFO&&console.log(e)}warn(e){this.verbose>=VERBOSE_LEVEL.WARN&&console.warn(e)}error(e){this.verbose>=VERBOSE_LEVEL.ERROR&&console.error(e)}init(){var e}updateMainValues(e){let{gravityRate:t,standingHeightGravInfluence:i,cameraJumpImpulse:s}=e;t!=null&&(this.gravityRate=t),i!=null&&(this.standingHeightGravInfluence=i),s!=null&&(this.cameraJumpVelocity+=s),this.camUpdated=!0}setJumpScalar(e){e=Math.max(e,.01),this.jumpScalar=e}setUserHeight(e,t="default"){e=Math.max(e,.01),this.roomStandingHeight.hasOwnProperty(t)||(this.roomStandingHeight[t]=this.standingHeight),t=="default"&&(this.standingHeight=e),this.roomStandingHeight[t]=e}setUserScale(e){e=Math.max(e,.01),this.userScale=e}setMovementScalar(e){e=Math.max(e,.01),this.movementScalar=e}setMovementEase(e){e=Math.min(1,Math.max(e,.01)),this.cameraMovementEase=e}setPositionBlend(e){e=Math.min(1,Math.max(e,.01)),this.camPosBlend=e}setInputMovementMult(e){e=Math.max(e,.01),this.cameraMoveLengthMult=e}setCameraRotateEasing(e){Array.isArray(e)||(typeof e=="number"?(e=[e,e],this.warn("Warning : Camera.setCameraEasing() expects an array of two numeric values, [PC Easing 0-1, Mobile Easing 0-1]; Default is [.55,.45]")):this.error("Error : Camera.setCameraEasing() unexpected values type; expecting an array of two numeric values, [PC Easing 0-1, Mobile Easing 0-1]; Default is [.55,.45]")),this.cameraEasing=e}setTouchSensitivity(e){e<=0&&(e=1),this.touchMaxSensitivity=e,this.touchSensitivityLimits=this.touchMaxSensitivity*this.pi}setGravityRate(e){e<=0&&(e=1),this.gravityRate=e}setGravityMax(e){e<=0&&(e=1),this.gravityMax=e}setWalkBounceHeight(e){e<=0&&(e=0),this.walkBounceHeight=e}setWalkBounceRate(e){e<=0&&(e=1e-4),this.walkBounceRate=e}setWalkBounceEaseIn(e){e=Math.min(1,Math.max(e,1e-4)),this.walkBounceEaseIn=e}setWalkBounceEaseOut(e){e=Math.min(1,Math.max(e,.01)),this.walkBounceEaseOut=e}step(){this.pxlDevice.directionKeyDown&&this.updateMovement(this.pxlTimer.prevMS),this.runMain&&(this.hasJumpLock&&this.pxlTimer.runtime>this.releaseJumpLockTime&&(this.hasJumpLock=!1,this.hasGravity=!1,this.cameraAllowJump=!0,this.camInitJump()),this.hasGravity&&this.cameraJumpActive?this.camJump(this.pxlTimer.prevMS):this.cameraJumpVelocity>0&&this.killJumpImpulse()),this.camUpdated=this.camUpdated||this.hasMoved||this.hasRotated||this.hasGravity||this.cameraMovement[0]!=0||this.cameraMovement[1]!=0,this.updateCamera(),this.lowQualityUpdates(),this.midQualityUpdates(),this.eventCheck()}eventCheck(){this.colliderValid&&this.eventCheckStatus&&this.eventTrigger(this.nearestFloorObjName)&&this.warpEventTriggered(1,this.nearestFloorObjName)}updateDeviceValues(e){if(!this.pxlQuality.settings.leftRight){let t=-this.cameraMovement[0];this.pxlDevice.touchMouseData.active||(this.pxlDevice.touchMouseData.velocity.x+=t),this.pxlDevice.touchMouseData.netDistance.x+=t*4}if(this.pxlDevice.touchMouseData.velocity!=null&&this.pxlDevice.mobile==0){if(e<this.posRotEasingThreshold)this.pxlDevice.touchMouseData.velocity.multiplyScalar(0);else{let t=this.cameraEasing[this.pxlDevice.mobile?1:0];this.pxlDevice.touchMouseData.velocity.multiplyScalar(t)}this.pxlDevice.touchMouseData.netDistance.add(this.pxlDevice.touchMouseData.velocity.clone().multiply(this.pxlDevice.touchMouseData.moveMult))}}buildDeviceMonitors(){let e=this}updateCameraMatrices(){this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld(),this.camera.updateWorldMatrix()}resetCameraCalculations(e){this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0),this.pxlDevice.touchMouseData.netDistance.set(0,0),this.camera.position.copy(e),this.updateCameraMatrices(),this.cameraPos.copy(e),this.cameraPrevPos.copy(e),this.colliderCurObjHit=null,this.colliderPrevObjHit=null,this.camUpdated=!0}setFOV(e){this.camera.fov=e,this.camera.updateProjectionMatrix(),this.camUpdated=!0}setStats(e,t,i,s){this.camera.near=i,this.camera.far=s,this.setFOV(e)}setAspect(e){this.camera.aspect=e,this.camera.updateProjectionMatrix()}setTransform(e,t=null){this.resetCameraCalculations(e),t&&(this.cameraAimTarget.position.copy(t),this.camera.lookAt(t),this.cameraPrevLookAt.copy(t),this.updateCameraMatrices(),this.pxlDevice.touchMouseData.initialQuat=this.camera.quaternion.clone()),this.resetGravity(),this.camUpdated=!0}setToObj(e,t=null){if(this.resetCameraCalculations(e.position),t){let i=t.position.clone();this.cameraAimTarget.position.copy(i),this.camera.lookAt(i),this.cameraPrevLookAt.copy(i),this.updateCameraMatrices(),this.pxlDevice.touchMouseData.initialQuat=this.camera.quaternion.clone()}else this.pxlDevice.touchMouseData.initialQuat=e.quaternion.clone(),this.camera.setRotationFromQuaternion(this.pxlDevice.touchMouseData.initialQuat),this.updateCameraMatrices();this.resetGravity(),this.camUpdated=!0,this.hasMoved=!0,this.hasRotated=!0,this.colliderCheck(e.position),this.nearestFloorObjName=null}warpToRoom(e,t=!1,i=null){this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].stop();let s=this.pxlEnv.currentRoom,r=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].camHoldWarpPos;this.pxlEnv.currentRoom=e,this.pxlAutoCam.curRoom=e;let a=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom],o=e==this.pxlEnv.mainRoom;if(this.pxlUser.iZoom){let c=o?this.pxlEnv.roomComposer:this.pxlEnv.mapComposer,u=o?this.pxlEnv.mapComposer:this.pxlEnv.roomComposer;this.pxlEnv.delayPass.uniforms.tDiffusePrev.value=c.renderTarget1.texture,this.pxlEnv.delayPass.uniforms.tDiffusePrevRoom.value=u.renderTarget1.texture,setTimeout(()=>{s!=e&&(o?this.pxlEnv.roomComposer.reset():this.pxlEnv.mapComposer.reset()),setTimeout(()=>{this.pxlEnv.mapComposerWarpPass.needsSwap=!1},500)},100)}if(t)if(e!=s&&a.start(),this.pxlEnv.roomRenderPass.scene=a.scene,a.camLocation.hasOwnProperty(i)){let c=this.cameraPosLookAtNames.default.pos,u=this.cameraPosLookAtNames.default.lookAt;this.pxlDevice.mobile&&(a.camLocation[i].hasOwnProperty(this.cameraPosLookAtNames.mobile.pos)&&(c=this.cameraPosLookAtNames.mobile.pos),a.camLocation[i].hasOwnProperty(this.cameraPosLookAtNames.mobile.lookAt)&&(u=this.cameraPosLookAtNames.mobile.lookAt));let d=a.camLocation[i][c],m=a.camLocation[i][u];this.setTransform(d,m)}else a.camInitPos&&a.camInitLookAt&&(!r||!this.pxlEnv.postIntro||this.hotKeyTriggered)&&(this.setTransform(a.camInitPos,a.camInitLookAt),this.hotKeyTriggered=!1);else(!r||!this.pxlEnv.postIntro||this.hotKeyTriggered)&&(i!=null?this.setToObj(i):this.setTransform(a.camReturnPos,a.camReturnLookAt),this.hotKeyTriggered=!1);this.pxlGuiDraws.prepArtistInfo(a.getArtistInfo()),this.camUpdated=!0;let l=a.pxlCamFOV[this.pxlDevice.mobile?"MOBILE":"PC"];this.camera.fov=l,this.camera.zoom=a.pxlCamZoom,this.camera.aspect=a.pxlCamAspect,this.camera.near=a.pxlCamNearClipping,this.camera.far=a.pxlCamFarClipping,this.camera.updateProjectionMatrix();let h=this.getUserHeight();this.emitCameraTransforms(this.camera.position.clone(),h,!0),this.canMove&&(this.colliderValid=!1,this.hasGravity=!0),this.pxlAutoCam.checkStatus()}warpToRoomSnapshot(e){this.pxlEnv.currentRoom=e;let t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom],i=t.pxlCamFOV[this.pxlDevice.mobile?"MOBILE":"PC"];this.camera.fov=i,this.camera.zoom=t.pxlCamZoom,this.camera.aspect=t.pxlCamAspect,this.camera.near=t.pxlCamNearClipping,this.camera.far=t.pxlCamFarClipping,this.camera.updateProjectionMatrix(),this.setTransform(t.camThumbPos,t.camThumbLookAt);let s=this.getUserHeight();this.emitCameraTransforms(this.camera.position.clone(),s,!0)}fastTravel(e=0){this.pxlAutoCam.enabled||((this.pxlAutoCam.active||this.pxlAutoCam.autoCamActive)&&this.pxlAutoCam.preAutoCamToggle(),this.hotKeyTriggered=!0,e==0&&this.warpEventTriggered(1,this.pxlEnv.currentRoom,"init"))}camJumpKey(e=!1){e?this.camInitJump():(this.cameraJumpActive&&(this.cameraJumpActive=!1),this.cameraAllowJump=!0,this.hasJumpLock=!1)}camInitJump(){this.canMove&&!this.hasGravity&&this.cameraAllowJump&&(this.pxlDevice.keyDownCount[2]=this.pxlTimer.prevMS,this.cameraAllowJump=!1,this.cameraJumpActive=!0,this.cameraJumpInAir=!0,this.hasGravity=!0,this.gravityRate=0,this.cameraJumpVelocity=this.cameraJumpImpulse[this.pxlUser.lowGrav]*this.userScale,this.hasJumpLock&&(this.hasJumpLock=!1,this.nearestFloorHit=this.nearestFloorHitPrev))}camJump(e){let t=e-this.pxlDevice.keyDownCount[2],i=1,s=Math.min(1,t/this.cameraMaxJumpHold[this.pxlUser.lowGrav]);if(this.cameraJumpActive){let r=s;r==1?this.cameraJumpActive=!1:(r=(1-r)*(1-r),r=r*(r*.5+.5)),this.cameraJumpVelocity+=Math.max(0,r)*this.cameraJumpImpulse[this.pxlUser.lowGrav]*this.jumpScalar}this.cameraJumpVelocity*=1-s,s==1&&(this.cameraJumpActive=!1)}killJumpImpulse(){let e=this.cameraJumpVelocity*this.cameraJumpVelocityEaseOut;this.cameraJumpVelocity=e>.1?e:0,this.workerFunc("killJumpImpulse")}updateGravity(){if(this.runMain){this.gravityRate=Math.max(0,this.gravityRate-this.cameraJumpVelocity*.2);let e=this.gravityMPS[this.pxlUser.lowGrav];if(this.hasGravity&&(this.gravityRate=Math.min(this.gravityMax,this.gravityRate+this.gravityMax*this.pxlTimer.msRunner.y)*e),this.gravityRate!=0){let t=1;this.hasGravity?t=this.gravityRate*.08:(this.gravityRate=this.gravityRate>.01?this.gravityRate*this.gravityEaseOutRate*e:0,t=this.gravityRate),t=Math.min(1,t),this.standingHeightGravInfluence=Math.min(1,this.gravityRate*1.2/this.gravityMax)*this.standingMaxGravityOffset}}}resetGravity(){this.gravityRate=0,this.workerFunc("resetGravity"),this.jumpLanding(!1)}jumpLanding(e=!0){this.cameraJumpActive&&(this.hasJumpLock=!0,this.releaseJumpLockTime=this.pxlTimer.runtime+this.releaseJumpLockDelay),this.hasGravity=!1,this.cameraJumpVelocity=0,this.cameraJumpInAir=!1,this.cameraJumpActive=!1,e&&this.workerFunc("jumpLanding")}colliderCheck(e){if(!this.canMove)return e;let t=null;if(this.movementBlocked=!1,(this.cameraMoveLength>0||this.colliderPrevObjHit==null||this.nearestFloorObjName==null)&&this.cameraBooted&&this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].collidersExist){this.colliderValidityChecked=!0;let a=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom],o=new M(0,-1,0),l=e.clone(),h=150*this.maxStepHeight;l.y+=h+this.maxStepHeight;let c=!1;var i=[];let u=~~(l.x>0)+(~~(l.z>0)+"");if(a.hasColliderType(ge.WALL)&&(i=this.pxlColliders.castRay(this.pxlEnv.currentRoom,l,o,ge.WALL)),i.length>0)if(a.hitColliders(i,ge.WALL),this.antiColliderTopActive){let d=this.pxlColliders.castRay(this.pxlEnv.currentRoom,l,o,ge.WALL_TOP);d.length>0&&a.hitColliders(d,ge.WALL_TOP);let m=-99999,f=e.y,v,p=this.nearestFloorHit,g=!1;for(var s=0;s<d.length;++s){var r=d[s];v=r.object.name;let y=r.pos,_=r.dist,S=y.y<this.maxStepHeight;g=g||S,(_<m&&valid||t==null)&&(t=v,m=_,p=y)}let x;(!g||e.y<p.y&&this.nearestFloorHitPrev.y-p.y>this.maxStepHeight+this.getStandingHeight()&&!this.hasGravity&&e.y+this.maxStepHeight+this.getStandingHeight()<p.y&&this.hasGravity)&&((this.cameraMovement[0]!=0||this.cameraMovement[1]!=0)&&(g=!0,this.hasGravity=!1,this.hasJumpLock=!0),x=this.cameraPos.clone(),x.y=Math.min(e.y,x.y),e=x,p=e,this.hasGravity?p.y=this.nearestFloorHitPrev.y:p.y=this.cameraPos.y,this.cameraJumpActive=!1,this.cameraAllowJump=!0,this.cameraJumpInAir=!1,this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0)),g&&(t==null?(this.nearestFloorHit=this.nearestFloorHitPrev,this.nearestFloorObjName=this.nearestFloorObjNamePrev,Math.abs(e.y-this.nearestFloorHit.y)>this.maxStepHeight+this.getStandingHeight()&&(this.colliderValid=!1,this.hasGravity=!0)):(this.nearestFloorHitPrev=this.nearestFloorHit,this.nearestFloorObjNamePrev=this.nearestFloorObjName,this.nearestFloorHit=p,this.nearestFloorObjName=t))}else this.colliderFail=!0,this.movementBlocked=!0;else{let d=this.maxStepHeight,m=d+this.getStandingHeight();if(l=e.clone(),l.y+=h+this.maxStepHeight,this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].hasColliders())i=this.pxlColliders.castRay(this.pxlEnv.currentRoom,l,o,ge.FLOOR);else return e;if(i.length>0){if(i.length>1){let g=Math.abs(i[0].pos.y-e.y);if(g<d)i=[i[0]];else if(g>d&&i[0].pos.y>i[1].pos.y&&i[1].pos.y>e.y-this.maxStepHeight)return e}this.floorColliderInitialHit=!0;let f=-99999,v,p=this.nearestFloorHit;for(let g=0;g<i.length;++g){let x=i[g],y=x.pos,_=!1;v=x.object.name;let b=y.distanceTo(e);if(_=b<this.maxStepHeight,(this.portalList[v]||this.roomWarpZone.includes(v))&&_){t=v,p=y;break}else this.itemCheck(v,_)||(b<f||t==null)&&(t=v,f=b,p=y)}this.nearestFloorObjName==null&&t!=null&&(this.nearestFloorHitPrev=p,this.nearestFloorObjNamePrev=t,this.nearestFloorHit=p,this.nearestFloorObjName=t),this.nearestFloorHitPrev.y-p.y>this.maxStepHeight+this.getStandingHeight()&&!this.hasGravity?(this.nearestFloorHit=this.nearestFloorHitPrev,this.nearestFloorObjName=this.nearestFloorObjNamePrev,t?e=this.cameraPos.clone():e=this.cameraPrevPos.clone(),t=this.nearestFloorObjName,this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0)):(this.nearestFloorHitPrev=this.nearestFloorHit,this.nearestFloorObjNamePrev=this.nearestFloorObjName,this.nearestFloorHit=p,this.nearestFloorObjName=t,t==null&&(this.colliderValid=!1,this.hasGravity=!0))}else this.colliderFail=!0,this.movementBlocked=!0,this.colliderValidityChecked=!1,e=this.cameraPos.clone()}}else this.colliderValidityChecked=!1;return this.colliderValidityChecked=!1,e}checkColliderValid(e){this.colliderValidityChecked=!0;let t=this.maxStepHeight+this.gravityRate,i=e.distanceTo(this.nearestFloorHit),s=i<t;return this.colliderValid=s,i}eventTrigger(e=null){if(!this.canMove||!e)return!1;if(this.portalList[e])return this.warpEventTriggered(0,this.portalList[e]),this.eventCheckStatus=!1,!0;if(this.roomWarpZone.includes(e))return this.warpEventTriggered(1,e),this.eventCheckStatus=!1,!0;if(this.colliderShiftActive=this.colliderCurObjHit!=e||this.colliderShiftActive,this.colliderPrevObjHit=this.colliderCurObjHit,this.colliderCurObjHit=e,this.colliderShiftActive=this.colliderShiftActive||!(this.colliderAdjustPerc==1||this.colliderAdjustPerc==0),this.colliderShiftActive&&this.colliderCurObjHit){let t=1;this.colliderCurObjHit.includes("AudioTrigger")&&(t=-1),this.colliderAdjustPerc=Math.min(1,Math.max(0,this.colliderAdjustPerc+this.colliderAdjustRate*t));let s=1-this.colliderAdjustPerc,r=1;if(this.colliderCurObjHit=="AudioTrigger_1"?(this.pxlEnv.currentAudioZone=1,r=r-s*this.uniformScalars.darkBase,this.uniformScalars.exposureUniformBase=r):this.colliderCurObjHit=="AudioTrigger_2"?(this.pxlEnv.currentAudioZone=2,r=this.uniformScalars.curExp+s*this.uniformScalars.brightBase*1,this.uniformScalars.exposureUniformBase=r,this.proximityScaleTrigger=!0,this.pxlAudio.setFadeActive(-1)):(this.pxlEnv.currentAudioZone=0,r=r*(1-s)+this.uniformScalars.exposureUniformBase*s),this.colliderShiftActive=!(this.colliderAdjustPerc==1||this.colliderAdjustPerc==0),this.colliderPrevObjHit=="AudioTrigger_2"&&this.colliderCurObjHit!=this.colliderPrevObjHit&&(this.proximityScaleTrigger=!0,this.pxlAudio.setFadeActive(1)),this.pxlDevice.mobile&&(r=this.colliderAdjustPerc),this.pxlEnv.updateCompUniforms(r),this.proximityScaleTrigger&&!this.pxlDevice.mobile&&!this.pxlAutoCam.enabled){let a=this.colliderAdjustPerc;a=1-(1-a)*(1-a),this.pxlEnv.fogMult.x=a,this.colliderShiftActive||(this.proximityScaleTrigger=!1)}this.eventCheckStatus=this.colliderShiftActive}}itemCheck(e,t){if(!t)return!1;let i=e.split("_").shift();return this.pxlUser.itemListNames.includes(e)&&this.pxlUser.checkItemPickUp(i)?this.itemActive(i,e):!1}itemTrigger(){if(this.pxlUser.itemActiveTimer.length>0)this.pxlUser.itemActiveTimer[0]=this.pxlTimer.curMS;else{this.pxlUser.mPick.length==0&&(this.pxlUser.mPick=this.pxlUtils.randomizeArray(["LizardKing","StarField","InfinityZoom"]));let e=this.pxlUser.mPick.pop();this.pxlUser.checkItemPickUp(e),this.itemActive(e)}}itemActive(e=null,t=null){if(e==null)return!1;let i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime,s="",r="";if(e=="LowGravity")r="Low Gravity",s="this.lowGrav=0;this.itemGroupList['"+t+"'].visible=true;",i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else if(e=="LizardKing")r="I am the Lizard King",s="this.lKing=0;this.lKingWarp.set(...this.lKingInactive);this.lKingPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else if(e=="StarField")r="Major Tom",s="this.sField=0;this.sFieldPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else if(e=="InfinityZoom")r="Fractal Substrate",s="this.iZoom=0;this.iZoomPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;this.pxlEnv.mapComposerWarpPass.needsSwap=true;this.pxlEnv.mapComposerWarpPass.enabled=false;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime,this.pxlEnv.mapComposerWarpPass.needsSwap=!0,setTimeout(()=>{this.pxlEnv.mapComposer.render(),this.pxlEnv.roomComposer.render(),setTimeout(()=>{this.pxlEnv.mapComposerWarpPass.needsSwap=!1,this.pxlEnv.mapComposerWarpPass.enabled=!0},500)},500);else return!1;return this.pxlGuiDraws.buildItemHud(e,r),this.pxlDevice.mobile||(this.pxlUser.itemGroupList[t].visible=!1),this.pxlUser.itemInactiveCmd.push(s),this.pxlUser.itemActiveTimer.push(i),this.pxlUser.itemActiveList.push(r),!0}toggleMovement(e=null){e==null&&(e=!this.canMove),this.canMove=e}updateMovement(e){if(!this.canMove)return;let t=[0,0],i=[...this.pxlDevice.directionKeysPressed],s=0,r=0,a=[e-this.pxlDevice.keyDownCount[0],e-this.pxlDevice.keyDownCount[1]],o=this.mobile?1:0;if(i[0]+i[2]==1){s=i[2]-i[0];let l=this.pxlQuality.settings.leftRight?this.cameraEasing[o]:(1-Math.min(1,Math.abs(this.cameraMovement[1]*.3)))*.5;t[0]=((this.pxlQuality.settings.leftRight?1:6)+a[0]*a[0]*.1)*l,t[0]=Math.min(this.pxlDevice.shiftBoost,t[0])*this.movementScalar}else this.pxlDevice.keyDownCount[0]=e;if(i[1]+i[3]==1){r=i[3]-i[1];let l=(1-Math.min(1,Math.abs(this.cameraMovement[0]*.07)))*this.cameraEasing[o];t[1]=a[1]*(a[1]*3+2+this.pxlDevice.shiftBoost)*.15*l,t[1]=Math.min(this.pxlDevice.shiftBoost,t[1])*this.movementScalar}else this.pxlDevice.keyDownCount[1]=e;this.cameraMovement[0]+=s*t[0],this.cameraMovement[1]+=r*t[1]}initFrameCamPosition(){let e=this.cameraPos.clone();if(!this.cameraBooted)this.cameraAimTarget.position.set(0,0,0),this.cameraPrevPos=new M(e.clone()),this.cameraPrevLookAt=new M(0,0,1),this.hasMoved=!0,this.hasRotated=!0;else{let t;t=new M(this.pxlQuality.settings.leftRight?this.cameraMovement[0]*.5:0,0,this.cameraMovement[1]),this.cameraMoveLength=t.length(),t.applyQuaternion(this.camera.quaternion);let i=this.cameraMoveLength*this.cameraMoveLengthMult;if(i!=0){let s=.1;i=i>0?Math.max(s,i):Math.min(-s,i),t.normalize().multiply(new M(1,0,1)).multiplyScalar(i),e.add(t),this.cameraMovement[0]=Math.abs(this.cameraMovement[0])<this.posRotEasingThreshold?0:this.cameraMovement[0]*this.cameraMovementEase,this.cameraMovement[1]=Math.abs(this.cameraMovement[1])<this.posRotEasingThreshold?0:this.cameraMovement[1]*this.cameraMovementEase,this.hasMoved=!0}e.y=this.cameraPos.y+this.cameraJumpVelocity,this.workerActive&&(this.cameraJumpVelocity=0)}return this.cameraCross=new M(1,0,0).applyQuaternion(this.camera.quaternion),e}applyGravity(e){if(this.hasGravity){let t=this.maxStepHeight+this.gravityRate;if(e.y<this.nearestFloorHit.y){let s=this.nearestFloorHitPrev;e.y=Math.max(s.y,e.y),e.y<0&&(e.x=s.x,e.z=s.z)}else e.y=Math.max(this.nearestFloorHit.y,e.y-this.gravityRate),e.y==this.nearestFloorHit.y&&e.y<this.cameraPrevPos.y&&this.jumpLanding()}else if(e.distanceTo(this.nearestFloorHit)<this.maxStepHeight)e.y=this.nearestFloorHit.y;else{e=this.cameraPos.clone();let i=e.y>this.nearestFloorHit.y;this.hasGravity=i,this.hasMoved=this.hasMoved||i,this.colliderFail=!i,this.workerFunc("jumpLanding")}return e}getStandingHeight(){let e=this.standingHeight;return this.roomStandingHeight.hasOwnProperty(this.pxlEnv.currentRoom)&&(e=this.roomStandingHeight[this.pxlEnv.currentRoom]),e*this.userScale}getUserHeight(){let e=Math.min(1,Math.abs(this.cameraMovement[1]));this.walkBouncePerc=this.walkBouncePerc>=1?1:this.walkBouncePerc+this.walkBounceEaseIn*e,this.walkBounce+=e*this.walkBounceRate,this.walkBouncePerc=this.walkBouncePerc*this.walkBounceEaseOut+e,this.walkBouncePerc<.03&&(this.walkBouncePerc=0,this.walkBounce=0,this.walkBounceSeed=Math.random()*2351.3256);let t=Math.sin(this.walkBounce+this.walkBounceSeed)*this.walkBouncePerc*this.walkBounceHeight;return this.getStandingHeight()-this.standingHeightGravInfluence+t}camApplyMobileRotation(){if(this.cameraPose.alpha!=null){let e=.017453292519943278,t=2.23606797749979,i=new Ue,s=this.cameraPose.alpha*e+this.cameraPose.alphaOffset+2.1,r=this.cameraPose.beta*e,a=this.cameraPose.gamma*e,o=new M(0,0,1),l=new Ue,h=new Ue(-t,0,0,t),c=new Ye;c.set(r,s,-a,"YXZ"),i.setFromEuler(c),i.multiply(h),i.multiply(l.setFromAxisAngle(o,-this.cameraPose.orientation)),i.normalize();let u=new Ue;Ue.slerp(this.camera.quaternion,i,u,.35);let d=new Ye().setFromQuaternion(u);d.x=Math.max(-.95*Math.PI/2,Math.min(.95*Math.PI/2,d.x)),u.setFromEuler(d),this.camera.setRotationFromQuaternion(u),this.hasRotated=!0}}updateRoamCameraRotation(){if(this.cameraPose.alpha==null){let e=this.pxlDevice.gyroGravity[2],t=new M(0,0,1),i=new Ue;this.pxlDevice.touchMouseData.velocity.y=Math.min(this.touchSensitivityLimits,Math.max(-this.touchSensitivityLimits,this.pxlDevice.touchMouseData.velocity.y));let s=new Ye,r;this.pxlDevice.mobile?(s.set(this.pxlDevice.touchMouseData.netDistance.y/this.pxlDevice.sH*2,this.pxlDevice.touchMouseData.netDistance.x/this.pxlDevice.sW*2,0,"YXZ"),r=new Ue,r.setFromEuler(s),r=this.pxlDevice.touchMouseData.initialQuat.clone().multiply(r)):(s.set(this.pxlDevice.touchMouseData.velocity.y*.005,this.pxlDevice.touchMouseData.velocity.x*.008+e,0,"YXZ"),r=new Ue,r.setFromEuler(s),r=this.camera.quaternion.clone().multiply(r)),r.normalize();let a=new M(0,0,-10).applyQuaternion(r).add(this.camera.position);this.camera.setRotationFromQuaternion(r),this.camera.lookAt(a),this.camera.up.set(0,1,0),this.hasRotated=!0}}updateStaticCameraRotation(){let e=1;this.touchBlender?(e=Math.min(1,Math.max(0,this.pxlTimer.curMS-this.pxlDevice.touchMouseData.releaseTime)),e*=e,this.pxlDevice.touchMouseData.netDistance.multiplyScalar(1-e),this.touchBlender=e<1):this.pxlDevice.touchMouseData.netDistance.multiplyScalar(.5);let t=new Ye;t.set(this.pxlDevice.touchMouseData.netDistance.y/this.pxlDevice.sH*2,this.pxlDevice.touchMouseData.netDistance.x/this.pxlDevice.sW*2,0,"YXZ");let i=new Ue().clone(this.camera.quaternion);i.setFromEuler(t),i=this.camera.quaternion.clone().multiply(i),i.normalize(),this.touchBlender&&i.slerp(this.camera.quaternion.clone(),e).normalize();let s=new M(0,0,-10).applyQuaternion(i).add(this.camera.position);this.camera.setRotationFromQuaternion(i),this.camera.lookAt(s),this.camera.up.set(0,1,0),this.hasRotated=!0}lookAtTargetLock(){if(this.lookAtTargetActive&&this.lookAtTargetActive&&(this.lookAtLockFader!=0&&(this.lookAtLockPerc+=(this.lookAtLockFader+Math.min(1,this.pxlDevice.touchMouseData.velocity.length()*.001))*this.lookAtLockFadeRate,(this.lookAtLockPerc<0||this.lookAtLockPerc>1)&&(this.lookAtLockPerc=this.lookAtLockPerc<0?0:1,this.lookAtLockFader=0),this.lookAtPerc.x=this.lookAtLockPerc),this.lookAtLockPerc>0)){let e=this.camera.quaternion.clone();this.camera.lookAt(this.cameraAimTarget.position);let t=this.camera.quaternion.clone();this.lookAtLockPerc==1?this.camera.setRotationFromQuaternion(t):this.camera.setRotationFromQuaternion(t.slerp(e,Math.cos(this.lookAtLockPerc*pi)*.5+.5)),this.hasRotated=!0}}warpEventTriggered(e=0,t=null,i="init"){this.warpActive||(this.pxlEnv.mapComposerWarpPass.needsSwap=!0,this.warpType=e,this.warpObj=t,this.warpTarget=i,this.warpActive=!0,this.pxlEnv.initWarpVisual(e))}warpCamRun(){if(this.warpType==0)this.setToObj(this.warpObj);else if(this.warpType==1){let e=this.warpTarget=="init";this.warpToRoom(this.warpObj,e,this.warpTarget)}this.pxlEnv.setExposure(this.uniformScalars.exposureUniformBase),this.warpObj=null,this.warpTarget=null,this.warpActive=!1}lowQualityUpdates(){if(this.HDRView){let e=new M(0,0,-1).applyQuaternion(this.camera.quaternion),t=e.clone().multiply(new M(1,0,1)).normalize();this.camRotPitch.set(-Math.atan2(t.x,t.z)*.1591549430918955,e.y*.5)}}midQualityUpdates(){if(this.pxlQuality.settings.motion){let e=new M(0,0,0);e.applyQuaternion(this.camera.quaternion),this.camRotXYZ.multiplyScalar(.8).add(e.multiplyScalar(.2));let t;if(this.pxlDevice.mobile){let r=sW*.5,a=sH*.5,o=new M(0,0,10),l=new M(0,0,10);o.applyQuaternion(this.camera.quaternion.clone()).project(this.camera),l.applyQuaternion(this.prevQuaternion).project(this.camera),o.x=(o.x+1)*r,o.y=-(o.y-1)*a,l.x=(l.x+1)*r,l.y=-(l.y-1)*a,t=l.clone().sub(o.clone()).multiplyScalar(.6).multiply(new M(this.pxlDevice.screenRes.x,this.pxlDevice.screenRes.y,0));let h=.1;t.length>h&&t.normalize().multiplyScalar(h)}else t=this.pxlDevice.touchMouseData.velocity.clone().multiplyScalar(Math.max(this.pxlDevice.screenRes.x,this.pxlDevice.screenRes.y));let i=new G(t.x,-t.y),s=new G(0,0).lerpVectors(this.pxlEnv.blurDirPrev,i,.85);this.pxlEnv.blurDirPrev.set(this.pxlEnv.blurDirCur),this.pxlEnv.blurDirCur.set(s)}}emitCameraTransforms(e,t,i=!1){}jogServerMemory(){let e=this.cameraPos.clone(),t=this.getUserHeight();this.emitCameraTransforms(e,t,!0)}updateCamera(){let e=this.pxlDevice.touchMouseData.velocity.length();if(this.hasRotated=this.hasRotated||e>0,this.camUpdated=this.camUpdated||this.hasRotated,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(.7),this.camUpdated){this.camUpdated=!1;let t=!1;this.updateDeviceValues(e),this.prevQuaternion.copy(this.camera.quaternion);let i=this.initFrameCamPosition(),s=this.getUserHeight();(this.hasMoved||this.hasGravity)&&(i=this.colliderCheck(i),this.updateGravity(),!this.colliderValid&&!this.colliderValidityChecked?this.jump=this.checkColliderValid(i):this.jump=0,this.eventCheckStatus=!0,i=this.applyGravity(i),this.cameraPrevPos=this.cameraPos.clone(),this.cameraPos=i.clone(),t=this.cameraPos.distanceTo(this.cameraPrevPos)>0,i.y+=s+this.cameraJumpHeight,this.camera.position.copy(i)),this.hasRotated&&this.canMove?(this.updateRoamCameraRotation(),t=t||this.hasRotated):this.hasRotated&&(this.updateStaticCameraRotation(),t=t||this.hasRotated),t&&(this.camera.updateMatrixWorld(),this.emitCameraTransforms(i,s)),this.hasMoved=!1,this.hasRotated=!1,this.cameraBooted=!0}}subscribe(e,t){this.callbacks.hasOwnProperty(e)||(this.callbacks[e]=[]),this.callbacks[e].push(t)}emit(e,t){this.callbacks.hasOwnProperty(e)&&this.callbacks[e].forEach(i=>{i(t)})}};var bl=class{constructor(e=!1){this.enabled=e,this.active=!1,this.mobile=null,this.pxlTimer=null,this.pxlUtils=null,this.pxlDevice=null,this.pxlAudio=null,this.pxlCamera=null,this.pxlEnv=null,this.camera=null,this.netDistance=new G,this.prevCamChange=0,this.nextCamChange=0,this.delayRange=[25,45],this.autoCamActive=!1,this.autoCamMode=0,this.autoCamPaths={},this.resetAutoCam=!0,this.autoCamPrevPos=null,this.autoCamPrevLookAt=null,this.touchBlender=!1,this.autoCamId=0,this.camMode=0,this.curModeCount=0,this.curRoom="",this.curRoomIndex=0,this.curPath=0,this.roomList=[],this.pathCounts={},this.forceNewRoom=!1,this.curRoomCount=0,this.avatarMin=0,this.avatarValid=!1,this.curAvatar=null,this.clusterReturn=!1,this.curCluster=[],this.clusterValid=2,this.clusterRotation=0,this.clusterRotRate=.005}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlUtils=e.pxlUtils,this.pxlDevice=e.pxlDevice,this.pxlAudio=e.pxlAudio,this.pxlCamera=e.pxlCamera,this.pxlEnv=e.pxlEnv,this.camera=e.pxlCamera.camera}init(){this.active=this.enabled||this.mobile,this.autoCamActive=this.autoCamActive||this.mobile;let{roomList:e,pathCounts:t}=this.getAutoCamData();this.roomList=e,this.curRoom=this.roomList[0],this.pathCounts=t,this.setRoom(!1,!0),this.getNextPath(),this.checkStatus()}step(e=!1){if(this.autoCamActive==null||this.active==null)return this.autoCamActive=!1,this.active=!1,!0;if(this.active==!1)if(this.autoCamActive)this.updateAutoCamera();else return!0;if((this.pxlTimer.curMS>=this.nextCamChange||e)&&this.active&&!this.pxlDevice.touchMouseData.active){if(!e||!this.enabled){let t=this.checkCamMode();this.setNextTrigger(t)}this.curAvatar=0,this.camera.up.set(0,1,0),this.pxlDevice.touchMouseData.netDistance.multiplyScalar(0),this.camMode==1?this.setCamMode(0):this.camMode==2?this.setCamMode(0):(this.curCluster=[],this.stepDroneCam()),this.setAutoCamMode(this.camMode)}return this.updateAutoCamera(),this.applyTouchRotate(),!1}checkCamMode(){let e=1,t=this.camMode;return this.camMode=0,!this.enabled||!this.active||this.camMode!=t&&this.camMode==0&&(this.forceNewRoom=!0),e}setCamMode(e){let t=1;e.type==1||e.type==2?t=1:(this.camMode=0,this.forceNewRoom=!0),this.step(!0)}stepDroneCam(){let e=!0,t=Math.random(this.nextCamChange),i=this.pathCounts[this.pxlEnv.currentRoom];this.curRoomCount>=i*2&&(this.forceNewRoom=!0),(t<.3||this.forceNewRoom)&&(this.setRoom(),e=!1),this.curRoomCount+=1,this.getNextPath(e)}setRoom(e=!1,t=!1){if(this.active||this.autoCamActive){let i=this.curRoomIndex,s=this.roomList.length;this.pxlEnv.postIntro?t||(e?i=(i+1)%s:(i=Math.floor(Math.random()*s),i==this.curRoomIndex&&(i=(i+1)%s))):i=0,this.curRoomIndex=i,this.curRoom!=this.roomList[i]&&(this.curRoom=this.roomList[i],this.forceNewRoom=!1,this.curRoomCount=0,this.pxlCamera.warpEventTriggered(1,this.curRoom,"init"))}}setNextTrigger(e=1){let t=Math.random(this.nextCamChange);t=(this.delayRange[1]-this.delayRange[0])*t+this.delayRange[0],this.nextCamChange=this.pxlTimer.curMS+t*e}getNextPath(e=!0,t=1){if(this.autoCamPaths.hasOwnProperty(this.pxlEnv.currentRoom)){let i=this.autoCamPaths[this.pxlEnv.currentRoom].length;if(this.curPath=(this.curPath+t)%i,e&&t==0){let s=Math.random(this.nextCamChange);s=Math.floor(s*this.autoCamPaths[this.pxlEnv.currentRoom].length),this.curPath==s&&(s=(s+1)%i),this.curPath=s}else this.curPath=this.curPath<0?i-1:this.curPath,this.setNextTrigger(1);this.setAutoCamPath(this.curPath)}}checkStatus(){(this.autoCamActive||this.pxlDevice.mobile||this.active)&&this.toggleAutoCam(!0)}preAutoCamToggle(){this.autoCamActive||this.pxlCamera.colliderCurObjHit=="AudioTrigger_2"&&(this.pxlCamera.proximityScaleTrigger=!0,this.exposureShiftActive=!0),this.toggleAutoCam()}setAutoCamMode(e=0){this.autoCamMode=e,e==1&&(this.resetAutoCam=!0)}setPosQuat(e,t){this.camera.quaternion.copy(t),this.camera.position.copy(e),this.pxlCamera.updateCameraMatrices(),this.pxlCamera.camUpdated=!0}toggleAutoCam(e=null,t=1){if(this.pxlEnv.fogMult.x=1,this.autoCamPaths[this.pxlEnv.currentRoom]){this.curRoom=this.pxlEnv.currentRoom;let i=this.autoCamPaths[this.pxlEnv.currentRoom].length;isNaN(this.autoCamId)&&(this.autoCamId=i-1);let s=this.autoCamActive;if(this.autoCamActive=e==null&&i>0?!this.autoCamActive:e,this.autoCamActive=this.mobile||this.autoCamActive,!s&&this.autoCamActive&&(this.netDistance=new G().copy(this.pxlDevice.touchMouseData.netDistance)),this.pxlDevice.touchMouseData.netDistance.multiplyScalar(0),this.autoCamActive){this.pxlCamera.resetGravity(),this.autoCamId=(this.autoCamId+t)%i,this.autoCamId=this.autoCamId<0?i-1:this.autoCamId;let r=this.autoCamPaths[this.pxlEnv.currentRoom][this.autoCamId];this.totalLoopDuration=r.position.userData.duration;try{this.autoCamPositions=r.position.geometry.attributes.position,this.autoCamLookAt=r.lookAt.geometry.attributes.position,r.up?this.autoCamUp=r.up.geometry.attributes.position:(this.autoCamUp=null,this.camera.up.set(0,1,0)),this.numControlPoints=this.autoCamPositions.array.length/3,this.autoCamStartTime=this.pxlTimer.curMS-this.totalLoopDuration*Math.random()}catch{}}else this.setPosQuat(this.pxlCamera.cameraPrevPos.clone(),this.pxlCamera.prevQuaternion.clone()),this.pxlDevice.touchMouseData.netDistance.copy(this.netDistance)}}prevNextAutoCam(e=1,t=!1){this.autoCamActive&&(this.enabled&&this.active&&!t?this.nextCamChange=this.pxlTimer.curMS:this.toggleAutoCam(!0,e))}setAutoCamPath(e=0){this.autoCamActive&&(this.autoCamId=e,this.toggleAutoCam(!0,0))}getAutoCamData(){let e=Object.keys(this.autoCamPaths),t={};return e.forEach(i=>{t[i]=this.autoCamPaths[i].length}),{roomList:e,pathCounts:t}}getAutoCamValueFromCurve(e,t,i,s=!1){let r=e[t*3],a=e[t*3+1],o=e[t*3+2],l=(t+1)%this.numControlPoints,h=e[l*3],c=e[l*3+1],u=e[l*3+2],d=new M(r,a,o),m=new M(h,c,u);return d.lerp(m,i),d}updateAutoCamera(){if(!this.autoCamPositions||!this.autoCamPositions.array)return;let t=(this.pxlTimer.curMS-this.autoCamStartTime)%this.totalLoopDuration/this.totalLoopDuration;t*=this.numControlPoints-1;let i=Math.floor(t),s=t-i,r=this.getAutoCamValueFromCurve(this.autoCamPositions.array,i,s,!1);this.camera.position.copy(r);let a=this.getAutoCamValueFromCurve(this.autoCamLookAt.array,i,s);if(this.camera.lookAt(a),this.autoCamUp){let o=this.getAutoCamValueFromCurve(this.autoCamUp.array,i,s);o=o.sub(r).normalize(),this.camera.up.copy(o)}}applyTouchRotate(){let e=1;this.touchBlender?(e=Math.min(1,Math.max(0,this.pxlTimer.curMS-this.pxlDevice.touchMouseData.releaseTime)),e*=e,this.pxlDevice.touchMouseData.netDistance.multiplyScalar(1-e),this.touchBlender=e<1):this.pxlDevice.touchMouseData.netDistance.multiplyScalar(.5);let t=new Ye;t.set(this.pxlDevice.touchMouseData.netDistance.y/this.pxlDevice.sH*2,this.pxlDevice.touchMouseData.netDistance.x/this.pxlDevice.sW*2,0,"YXZ");let i=new Ue().clone(this.camera.quaternion);i.setFromEuler(t),i=this.camera.quaternion.clone().multiply(i),i.normalize(),this.touchBlender&&i.slerp(this.camera.quaternion.clone(),e).normalize();let s=new M(0,0,-10).applyQuaternion(i).add(this.camera.position);this.camera.setRotationFromQuaternion(i),this.camera.lookAt(s),this.camera.up.set(0,1,0)}};qc();var Ml=class{constructor(){this.audioObject=null}};var wl=class{constructor(){this.pxlTimer=null,this.pxlVideo=null,this.pxlDevice=null,this.pxlEnv=null,this.pxlGuiDraws=null,this.pxlSocket=null,this.active=!1,this.audioTimer=new M(0,0,0),this.audioEq=new Ie(0,0,0,0),this.audioWorker=null,this.audioProcessor=null,this.djUrlSource="//",this.djMuted=!1,this.djAudioVolume=0,this.djAudioVolumeMax=.65,this.djAudioVolumeMin=.25,this.djAudioVolumeScalar=.25,this.djAudioObj=null,this.djTimecodeObj=null,this.djVolumeParentObj=null,this.djVolumeObj=null,this.roomAudioStopped=!0,this.videoStreamObjects=[],this.colliderVolActive=!1,this.isVideoObject=!1,this.activeObject=null,this.fadeActive=!1,this.fadeAdjustRate=.02,this.fadeDir=0,this.fadePerc=0,this.audioContext=null}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlVideo=e.pxlVideo,this.pxlDevice=e.pxlDevice,this.pxlEnv=e.pxlEnv,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlSocket=e.pxlSocket}init(){this.active=!0}postBoot(){if(this.djAudioObj){if(this.pxlEnv.pxlAutoCam.enabled)this.djAudioVolumeMax=1,this.djAudioVolumeMin=0;else if(this.pxlEnv.mobile){let a=function(o){setTimeout(()=>{i.djAudioVolume=0,i.djAudioVolumeMax=s,i.djAudioVolumeMin=0,i.djAudioObj.byScript=!0,i.djAudioObj.volume=0,e.play().then(()=>{i.djPlayerMuteToggle(!1),i.setFadeActive(.5)}),r.removeEventListener("click",a),r.removeEventListener("touchstart",a)},500)},i=this,s=this.djAudioVolumeMax,r=document.getElementById("guiMobileWelcomeButton");r.addEventListener("click",a),r.addEventListener("touchstart",a)}this.djAudioVolume=this.pxlEnv.enabled?0:this.djAudioVolumeMin,this.djAudioObj.volume=this.pxlEnv.enabled?0:this.djAudioVolumeMin,this.djPlayerMuteToggle(!1),this.djPlayerAdjustVolume({}),this.djPlayerSetSliderGui();let e=this.djAudioObj;e.setAttribute("autoplay",!0);let t=this;this.djAudioObj.addEventListener("volumechange",i=>{t.djPlayerSetSliderGui()},!0)}}start(){}step(){this.djAudioObj&&this.djAudioObj.paused&&(this.djAudioObj.play().catch(e=>{}),this.djAudioObj.muted=this.djMuted||!this.roomAudioStopped),this.fadeAudioEvent()}isPaused(){let e=!0;return this.djAudioObj&&(e=this.djAudioObj.paused),e}pausePlayback(){this.active=this.pxlTimer.active,this.active?this.play():this.stop()}initPlay(){this.pxlVideo.canUnmute("dj")&&!this.isPaused()&&(this.djPlayerMuteToggle(!1),this.setFadeActive(1),this.pxlDevice.mobile&&this.pxlGuiDraws.toggleIcon(this.pxlGuiDraws.hudIcons.musicIcon,!this.djMuted,!0))}play(){if(this.active=!0,this.isVideoObject)this.pxlVideo.setVolume("dj",this.djAudioVolume),this.pxlVideo.setMuted("dj",this.djMuted);else{this.djAudioObj.byScript=!0;let e=this.djAudioObj;e.children[0].setAttribute("src",this.djUrlSource),setTimeout(()=>{e.load(),setTimeout(()=>{e.volume=this.djAudioVolume,e.muted=this.djMuted||!this.roomAudioStopped,e.paused&&e.play()},20)},20)}}stop(){if(this.active=!1,this.isVideoObject)this.pxlVideo.setMuted("dj",!0);else{let e=this.djAudioObj;e.children[0].setAttribute("src",""),e.pause(),setTimeout(()=>{e.load()},20)}}djBuildPlayer(){this.djAudioObj=document.getElementById("djStream"),this.djVolumeParentObj=document.getElementById("djPlayerVolumeParent"),this.djVolumeObj=document.getElementById("djPlayerVolume"),this.djAudioObj.byScript=!1,this.djAudioObj.volume=0,this.djVolumeObj.style.width="0%";let e=this;this.pxlDevice.objectPercList.push("djPlayerVolume"),this.pxlDevice.objectPercList.push("djPlayerVolumeParent"),this.pxlDevice.objectPercFuncList.djPlayerVolumeParent=t=>{e.djPlayerAdjustVolume(t)},this.djVolumeParentObj.down=!1,this.djVolumeParentObj.addEventListener("mousedown",t=>{e.djVolumeParentObj.down=!0,e.djPlayerAdjustVolume(t)}),this.djVolumeParentObj.addEventListener("mousemove",t=>{e.djPlayerAdjustVolume(t)}),this.djVolumeParentObj.addEventListener("mouseup",t=>{e.djVolumeParentObj.down=!1}),this.pxlDevice.mobile&&(this.djVolumeParentObj.style.width="30vw",this.djVolumeParentObj.addEventListener("touchstart",t=>{e.djVolumeParentObj.down=!0},{passive:!0}),this.djVolumeParentObj.addEventListener("touchmove",t=>{e.djPlayerAdjustVolume(t)},{passive:!0}),this.djVolumeParentObj.addEventListener("touchend",t=>{e.djVolumeParentObj.down=!1},{passive:!0})),this.djAudioObj.muted=!0,this.prepAudioProcessor()}prepAudioProcessor(){}stepAudioProcessor(){}recieveAudioProcessor(e){}buildRemoteAudioMixer(e,t){if(0)var i,s,r;return!1}loadStreamPromise(){let e=this.djAudioObj;return new Promise((t,i)=>{this.djAudioObj.byScript=!0,e.children[0].setAttribute("src",this.djUrlSource),e.load(),e.muted=this.djMuted||!this.roomAudioStopped}).then(()=>{}).catch(t=>{console.log("error source")})}djPlayerSetSliderGui(){this.djAudioObj.byScript||!this.pxlEnv.postIntro||this.pxlEnv.pxlAutoCam.enabled?this.djAudioObj.byScript=!1:(this.fadeActive=!1,this.djAudioVolumeMax=this.djAudioVolume,this.djAudioVolumeMin=this.djAudioVolume*this.djAudioVolumeScalar),this.djVolumeObj.style.width=this.djAudioVolume*100*~~!this.djMuted+"%"}djPlayerAdjustVolume(e){if(this.djVolumeParentObj.down||this.djVolumeParentObj.down&&e.touches){let t=this.djVolumeParentObj.offsetWidth,i=0;e.touches?i=this.pxlDevice.objectPerc.percX:i=e.offsetX/t;let s=Math.max(0,Math.min(1,i));this.djAudioVolume=s,this.djAudioVolumeMax=s,this.djAudioVolumeMin=s*.1,s*=s,this.djAudioObj&&(this.djAudioObj.volume=s),e.touches&&this.djPlayerSetSliderGui()}this.pxlVideo&&this.pxlEnv.posted&&this.pxlVideo.setVolume("dj",this.djAudioVolume)}djPlayerMuteToggle(e=null){this.djMuted=e??!this.djMuted,e!=null&&this.pxlGuiDraws.toggleIcon(this.pxlGuiDraws.hudIcons.musicIcon,!e,!0),this.djAudioObj&&(this.djAudioObj.muted=this.djMuted,this.djAudioObj.byScript=!0,this.djAudioObj.volume=this.djAudioObj.volume),this.pxlVideo&&this.pxlEnv.posted&&this.pxlVideo.setMuted("dj",this.djMuted)}setFadeActive(e=1){this.fadeDir!=e&&(this.fadeDir=e,this.fadeActive=!0)}fadeAudioEvent(){if(this.djVolumeParentObj&&!this.djVolumeParentObj.down&&this.fadeActive&&this.pxlEnv.postIntro){if(this.fadePerc+=this.fadeAdjustRate*this.fadeDir,this.fadePerc<0||this.fadePerc>1){this.fadePerc=this.fadeDir==1?1:0,this.fadeActive=!1;return}let e=(this.djAudioVolumeMax-this.djAudioVolumeMin)*this.fadePerc+this.djAudioVolumeMin;this.djAudioVolume=e,e*=e,this.djAudioObj&&(this.djAudioObj.byScript=!0,this.djAudioObj.volume=e),this.pxlVideo.setVolume("dj",this.djAudioVolume)}}};var Cl=class{constructor(e=null,t=null,i=null,s=null,r=null){this.pxlUtils=t,this.pxlAudio=i,this.pxlFile=s,this.pxlGuiDraws=r,this.pxlEnv=null,this.posted=!1,this.djStreamUrl="",this.performerStreamUrl="",this.screenVideoBlock=null,this.screenVideos={},this.videoStreams={},this.videoStreamFailCount=0,this.videoStreamFailMax=5,this.videoAudioEvent={dj:!1,performer:!1},this.checkForDjStream=!1,this.checkForPerformerStream=!1,this.videoStills={dj:{texture:null,url:e+"SoftNoise_512.jpg"},performer:{texture:null,url:e+"SoftNoise_512.jpg"}}}init(){this.buildVideoBlock(),this.buildPromoVideos()}buildVideoBlock(){if(this.screenVideoBlock==null){let e=document.createElement("div");e.classList.add("videoScreenBlockStyle"),document.body.appendChild(e),this.screenVideoBlock=e}}buildPromoVideos(){[].forEach(t=>{let i=t.name,s=t.type,r=t.intensity,a=t.boost,o=t.file,l=t.landscape,h=this.pxlFile.vidRoot+o,c=document.createElement("video");c.id="screenVideo_"+i+"_"+(l?"port":"land"),c.src=h,c.classList.add("bgMediaAssets"),c.controls=!1,c.muted=!0,c.preload="true",c.setAttribute("autoplay",""),c.setAttribute("muted",""),c.setAttribute("playsinline",""),c.setAttribute("loop",""),this.screenVideoBlock.appendChild(c),this.screenVideos[i]||(this.screenVideos[i]={}),this.screenVideos[i].name=i,this.screenVideos[i].type=s,r&&(this.screenVideos[i].intensity=r),a&&(this.screenVideos[i].boost=a);let u=this.screenVideos[i].file||[];this.screenVideos[i].file?u[~~l]=h:u=[h,h],this.screenVideos[i].file=u;let d=this.pxlUtils.getVideoTexture(c),m=this.screenVideos[i].texture||[];this.screenVideos[i].texture?m[~~l]=d:m=[d,d],this.screenVideos[i].texture=m;let f=[];this.screenVideos[i].videoObjs?f[~~l]=c:f=[c,c],this.screenVideos[i].videoObjs=f})}async boot(){this.videoAudioEvent.dj?this.buildVideoPlayer("dj"):this.videoStills.dj.texture=this.pxlUtils.loadTexture(this.videoStills.dj.url)}buildVideoPlayer(e){let t=this,i=document.createElement("video");i.id="antibodyDjStream",i.classList.add("bgMediaAssets"),i.controls=!1,i.volume=0,i.muted=!0,i.setAttribute("autoplay","true"),i.setAttribute("playsinline","true"),i.addEventListener("volumechange",s=>{i.volume=Math.min(i.volume,t.pxlAudio.djAudioVolume)},!0),this.screenVideoBlock.appendChild(i),this.videoStreams[e]={},this.videoStreams[e].mode=0,this.videoStreams[e].active=!1,this.videoStreams[e].loading=!1,this.videoStreams[e].checkResolve=!1,this.videoStreams[e].prevCheck=this.pxlUtils.curMS+5,this.videoStreams[e].delayCheck=5,this.videoStreams[e].obj=i,this.videoStreams[e].url=this.djStreamUrl,this.videoStreams[e].urlStatus=!1,this.videoStreams[e].player=null,this.videoStreams[e].checkScreens=!1,this.videoStreams[e].activeLevel=-1,this.videoStreams[e].prevFrame=0,this.videoStreams[e].prevFrameCount=0,this.videoStreams[e].canvasObj=null,this.videoStreams[e].videoTexture=this.getTexture(e),this.pxlFile.urlExists(this.djStreamUrl).then(s=>{this.videoStreams[e].urlStatus=s}),this.buildVideoStream(e,!1)}postBoot(e){this.videoStreams[e]&&this.videoStreams[e].urlStatus&&this.load(e,this.videoStreams[e].url),this.posted=!0,this.checkForDjStream=this.videoAudioEvent.dj}step(){let e=!1,t="dj";if(this.videoAudioEvent[t]){let i=this.videoStreams[t];i&&(i.active||this.checkVideoStreamStatus(t),this.pxlUtils.mobile?i.active&&i.videoTexture&&i.checkScreens&&(i.checkScreens=!1,this.setScreensToStreams(1,i.videoTexture)):(e=i.checkScreens,i.checkScreens=!1))}else this.videoStills[t].texture&&this.pxlUtils.mobile&&this.setScreensToStreams(1,this.videoStills[t].texture);return e}setScreensToStreams(e=0,t="dj"){let i=t;typeof i=="string"&&(i=this.getTexture(t),i||(e=0,this.videoStreams[t].active=!1,this.videoStreams[t].checkScreens=!0)),this.pxlEnv.camScreenData.screenGeoList.forEach((s,r)=>{s.material.uniforms.camExists.value=e,s.material.uniforms.videoFeed.value=i})}isActive(e){let t=!1;return this.videoStreams.hasOwnProperty(e)?this.videoStreams[e].active&&this.videoStreams[e].videoTexture&&(t=!0):t=this.videoStills[e].texture!=null,t}getTexture(e){let t=null;return this.videoAudioEvent[e]?(this.videoStreams[e].videoTexture||(this.videoStreams[e].videoTexture=this.buildVideoTexture(e)),t=this.videoStreams[e].videoTexture):this.videoStills[e].texture&&(t=this.videoStills[e].texture),t}buildVideoTexture(e){return this.disposeVideoTexture(e),this.videoStreams[e].obj&&this.videoStreams[e].player?this.pxlUtils.getVideoTexture(this.videoStreams[e].obj):null}disposeVideoTexture(e,t=null){this.videoStreams[e].videoTexture&&(this.videoStreams[e].videoTexture.dispose(),this.videoStreams[e].videoTexture=null,this.videoStreams[e].checkScreens=t??!0)}resetvideoTexture(e){this.setScreensToStreams(0,e),this.disposeVideoTexture(e,!1);let t=this.getTexture(e);this.videoStreams[e].videoTexture=t,this.videoStreams[e].checkScreens=!0}resetEnvSettings(e){this.resetvideoTexture(e),this.videoStreams[e].checkScreens=!1}hlsPreflight(){let e=window.MediaSource||window.WebKitMediaSource;e=e&&typeof e.isTypeSupported=="function"&&e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"');let t=window.SourceBuffer||window.WebKitSourceBuffer;return t=!t||t.prototype&&typeof t.prototype.appendBuffer=="function"&&typeof t.prototype.remove=="function",e&&t}buildVideoStream(e,t=!1){let i=this,s=this.videoStreams[e].obj;typeof IVSPlayer<"u"?this.buildIvsPlayer(e):this.pxlFile.loadScript("https://player.live-video.net/1.1.2/amazon-ivs-player.min.js").then(()=>{i.buildIvsPlayer(e)})}buildVhsPlayer(e){if(videojs){this.videoStreams[e].mode=1;let t=this.videoStreams[e].obj,i=videojs(t,{controls:!1,autoplay:!0,preload:"auto"});videojs.log.level("off"),videojs.log.level("error"),this.videoStreams[e].player=i;let s=this;i.ready(function(){let r=i.play();r&&r.catch(function(a){document.addEventListener("click",function o(l){let h=i.networkState();(h==1||h==2)&&(i.play(),document.removeEventListener("click",o))})})}),i.on("play",r=>{s.ready(e)}),i.on("loadedmetadata",r=>{s.start(e)}),i.on("waiting",r=>{let a=i.currentTime(),o=i.duration();o>0&&setTimeout(()=>{let l=i.currentTime(),h=i.duration();a==l&&o==h&&this.pxlFile.urlExists(i.src()).then(c=>{c||s.ended(e)}).catch(()=>{s.ended(e)})},500)}),i.on("ended",r=>{s.ended(e)}),i.on("error",r=>{s.ended(e)})}else this.buildFallbackPlayer(e)}buildHlsPlayer(e){if(Hls.isSupported()){this.videoStreams[e].mode=4;let i=this.videoStreams[e].obj;var t=new Hls({enableWorker:!0,liveBackBufferLength:900,startLevel:2,stretchShortVideoTrack:!0,nudgeOffset:.5,fragLoadingTimeOut:2e3});t.attachMedia(i),this.videoStreams[e].player=t;let s=this;t.on(Hls.Events.MEDIA_ATTACHED,function(r){s.ready(e)}),t.on(Hls.Events.BUFFER_CREATED,function(r){}),t.on(Hls.Events.MANIFEST_PARSED,function(r){s.start(e)}),t.streamController.onMediaEnded=function(r){s.ended(e)},t.on(Hls.Events.ERROR,function(r,a){a.fatal?s.ended(e):(a.details=="bufferFullError"||a.details=="bufferAppendingError")&&t.recoverMediaError()}),t.on(Hls.Events.STREAM_STATE_TRANSITION,function(r,a){a.previousState=="PARSED"&&a.nextState=="IDLE"&&(s.videoStreams[e].activeLevel=t.currentLevel,t.currentLevel==-1&&setTimeout(()=>{t.currentLevel==-1&&t.recoverMediaError()},1e3))})}else this.buildFallbackPlayer(e)}sendModMessage(e,t,i){let s={msg:e,init:t,data:i};this.pxlEnv.pxlSocket.sendErrorMsg(s)}buildFallbackPlayer(e){let t=this.videoStreams[e].obj;this.videoStreams[e].mode=2,t.setAttribute("src",this.videoStreams[e].urlStatus?this.videoStreams[e].url:"");let i=this;t.addEventListener("error",function(s,r){}),t.addEventListener("loadedmetadata",function(s){i.ready(e)}),t.addEventListener("canplay",function(s){t.play(),i.start(e)}),t.addEventListener("suspend",function(s){i.ended(e)}),t.addEventListener("ended",function(s){i.ended(e)})}buildIvsPlayer(e){if(IVSPlayer.isPlayerSupported){this.videoStreams[e].mode=3;let t=this.videoStreams[e].obj,i=IVSPlayer.create();i.attachHTMLVideoElement(t),i.setAutoplay(!0),i.setLogLevel("Error"),this.videoStreams[e].loading=!0,this.videoStreams[e].player=i,this.videoStreams[e].checkScreens=!1;let s=this,r=IVSPlayer.PlayerState;i.addEventListener(r.READY,o=>{s.ready(e)}),i.addEventListener(r.PLAYING,o=>{s.start(e)}),i.addEventListener(r.ENDED,o=>{s.ended(e)});let a=IVSPlayer.PlayerEventType;i.addEventListener(a.ERROR,(o,l,h,c)=>{s.ended(e,o)})}else this.buildFallbackPlayer(e)}unload(e){}load(e,t){let i=this.videoStreams[e];if(i)switch(i.mode){case 1:this.videoStreams[e].url=t,i.player.src({type:"application/x-mpegURL",src:t}),i.player.load();break;case 2:i.obj.setAttribute("src",t),i.obj.load();break;case 3:i.player.load(t);break;case 4:i.player&&this.destroyPlayer(e,!0),i.player.attachMedia(this.videoStreams[e].obj);var s=decodeURIComponent(t);i.player.loadSource(s);break;default:break}}newStream(e){}canUnmute(e){let t=!0;return this.videoStreams[e]&&(t=this.videoStreams[e].active),t}setMuted(e,t=!1){let i=this.videoStreams[e];i&&(i.obj.muted=t)}setVolume(e,t){let i=this.videoStreams[e];i&&(i.obj.volume=t)}getStreamState(e){let t=!1,i=this.videoStreams[e];switch(i.mode){case 1:t=!i.obj.paused;break;case 2:t=!i.obj.paused;break;case 3:let s=i.player;t=s.core.isLoaded&&!s.core.paused;break;case 4:t=i.player.streamController.lastCurrentTime!=null;break;default:break}return t}checkVideoError(e){let t=this.videoStreams[e];t.active&&t.mode==4&&(t.obj.videoWidth==0?!t.obj.paused&&t.player.streamController.lastCurrentTime>10&&(this.destroyPlayer(e),this.videoStreams[e].active=!1,this.checkForDjStream=!0,this.buildHlsPlayer(e),this.videoStreams[e].player.recoverMediaError()):t.obj.webkitDecodedFrameCount==t.prevFrame?(this.videoStreams[e].prevFrameCount+=1,this.videoStreams[e].prevFrameCount>50&&(console.log("trigger level drop"),this.videoStreams[e].prevFrameCount=0,this.videoStreams[e].player.recoverMediaError(),this.videoStreams[e].player.nextLoadLevel=Math.max(0,this.videoStreams[e].player.currentLevel-1),this.videoStreams[e].player.recoverMediaError())):(this.videoStreams[e].prevFrame=t.obj.webkitDecodedFrameCount,this.videoStreams[e].player.nextLevel!=-1&&(this.videoStreams[e].player.nextLevel=-1),this.videoStreams[e].prevFrameCount=0))}ready(e){this.videoStreams[e].loading=!1,this.videoStreams[e].obj.volume=0,this.videoStreams[e].activeLevel=1}start(e){let t=this.videoStreams[e];if(t.active)return;let i=t.obj,s=t.player,r=this.getStreamState(e);this.videoStreams[e].active=r,this.videoStreams[e].videoTexture||(this.videoStreams[e].videoTexture=this.getTexture(e)),this.pxlAudio.isVideoObject=!0,this.videoStreamFailCount=0,this.checkForDjStream=!1,this.videoStreams[e].checkScreens=!0,this.pxlAudio.djAudioObj.byScript=!0;let a=this.pxlAudio.djAudioObj;a.children[0].setAttribute("src",""),a.pause(),a.muted=!0,setTimeout(()=>{a.load(),setTimeout(()=>{this.pxlAudio.roomAudioStopped&&(t.obj.volume=this.pxlAudio.djAudioVolume),t.obj.muted=this.pxlAudio.djMuted||!this.pxlAudio.roomAudioStopped,t.obj.click()},20)},20)}restart(e){let t=!1,i=this.videoStreams[e].player,s=this.videoStreams[e].obj;switch(this.videoStreams[e].mode){case 1:case 2:t=!s.paused;break;case 3:t=i.core.isLoaded&&!i.core.paused;break;case 4:t=i.currentLevel>-1;break;default:break}this.videoStreams[e].active=t,this.videoStreams[e].checkScreens=t}ended(e){let t=this.videoStreams[e];if(!t.active)return;this.destroyPlayer(e);let i=t.mode==4?!t.player.liveTracker.atLiveEdge():!t.obj.paused;this.videoStreams[e].active=i,this.checkForDjStream=this.videoAudioEvent.dj,this.pxlAudio.isVideoObject=!1,this.videoStreams[e].checkScreens=!0,this.pxlAudio.roomAudioStopped&&(t.obj.volume=0),t.obj.pause(),t.obj.muted=!0,this.pxlAudio.djAudioObj.byScript=!0;let s=this.pxlAudio.djAudioObj,r=s.children[0];r.getAttribute("src")==""&&(r.setAttribute("src",this.pxlAudio.djUrlSource),s.load(),s.muted=this.pxlAudio.djMuted||!this.pxlAudio.roomAudioStopped,s.play()),this.videoStreams[e].prevCheck=this.pxlUtils.curMS+15,this.videoStreams[e].activeLevel=-1}error(e,t){let i;typeof t=="object"?i=t.type:i=t,["ErrorNetworkIO","networkError","mediaError","internalException"].includes(i)&&(tmpThis.videoStreams[e].active=!1)}destroyPlayer(e,t=!1){this.videoStreams[e].mode==4&&(this.videoStreams[e].active||t)&&this.videoStreams[e].player&&this.videoStreams[e].player.detachMedia()}async streamState(e){let t=!0,i=!0;this.videoStreams.dj&&(t=!this.videoStreams.dj.active),this.videoStreams.performer&&(i=!this.videoStreams.performer.active),e.hasOwnProperty("dj")==!0&&t&&(this.checkForDjStream=e.dj&&this.videoAudioEvent.dj),e.hasOwnProperty("performer")==!0&&i&&(this.checkForPerformerStream=e.performer&&this.videoAudioEvent.performer)}async checkVideoStreamStatus(e){let t=this.videoStreams[e];t&&this.checkForDjStream&&this.posted&&!t.active&&t.prevCheck+t.delayCheck<this.pxlUtils.curMS&&(this.checkForDjStream=!1,this.pxlFile.urlExists(this.videoStreams[e].url).then(i=>{this.videoStreams[e].urlStatus=i,this.checkForDjStream=!i,this.videoStreams[e].prevCheck=this.pxlUtils.curMS,this.videoStreams[e].checkResolve=this.pxlUtils.curMS,i?this.load(e,this.videoStreams[e].url):this.videoStreamFailCount+=1}).catch(i=>{console.log(i),this.videoStreamFailCount+=1,this.checkForDjStream=!0,this.videoStreams[e].prevCheck=this.pxlUtils.curMS}))}};var Bt={Utils:il,FileIO:qi,QualityController:ll,CookieManager:hl,Timer:cl,User:ul,Device:dl,Colliders:pl,Animation:ml,Environment:gl,GUI:yl,Camera:_l,AutoCamera:bl,Extensions:Zn,MusicUtils:Ml,Audio:wl,Video:Cl};var Yc={};Yt(Yc,{camPosVert:()=>dm,defaultShiftVert:()=>um,defaultVert:()=>cm,discardFrag:()=>pm,shaderHeader:()=>ue});function ue(){return`
    #ifdef GL_FRAGMENT_PRECISION_HIGH
      precision highp float;
    #else
      precision mediump float;
    #endif
        `}function cm(){let n=ue();return n+=`
  varying vec2 vUv;
  void main(){
    vUv=uv;
    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix*modelViewPosition;
  }`,n}function um(){let n=ue();return n+=`
  varying vec2 vUv;
  varying vec2 vUvShift;
  void main(){
    vUv=uv;
        vUvShift=uv-.5;
    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix*modelViewPosition;
  }`,n}function dm(){let n=ue();return n+=`
  varying vec3 camPos;
  varying vec2 vUv;
  void main(){
    vUv=uv;
    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix*modelViewPosition;
    camPos=(modelViewMatrix*vec4(0.0,0.0,1.0,1.0)).xyz;
  }`,n}function pm(){let n=ue();return n+=`
  void main(){
    discard;
    gl_FragColor=vec4(.0,.0,.0,0.0);
  }`,n}var Kc={};Yt(Kc,{animTextureFrag:()=>fm,animTextureVert:()=>mm,clickableBevelFrag:()=>vm,clickableBevelVert:()=>gm,portalBaseFrag:()=>ym,portalBaseVert:()=>xm});function mm(){let n=ue();return n+=`
  varying vec2 vUv;
  void main(){
    vUv=uv;
    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix*modelViewPosition;
  }`,n}function fm(){let n=ue();return n+=`
  uniform vec2 time;
  uniform float rate;
  uniform float freq;
  uniform float intensity;
  uniform vec3 glowColor;
  uniform sampler2D glowTexture;
  varying vec2 vUv;
  float pi=3.14159265358979;
  
  void main(){
    vec4 glowCd=texture2D(glowTexture, vUv);
    vec4 Cd=vec4(glowColor,1.0);
    Cd.rgb*=(cos(glowCd.g*pi*freq+time.x*rate)*.5+.5)*(1.0-glowCd.b)*intensity+glowCd.b;
    Cd.rgb*=glowCd.r*glowCd.a;
    gl_FragColor=Cd;
  }`,n}function gm(){let n=ue();return n+=`
    uniform vec2 time;
    uniform float rate;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    
    void main(){
      vUv=uv+vec2(rate*time.x, 0.0);
      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );
      nDot=dot( normal, camDir );
      
      pos=position;
      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);
      gl_Position = projectionMatrix*modelViewPosition;
      
    }`,n}function vm(){let n=ue();return n+=`
    uniform sampler2D alphaMap;
    uniform sampler2D cloudNoise;
    uniform vec2 time;
    uniform vec2 intensity;
    uniform float rate;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    
    void main() {
      vec4 Cd=vec4( 1.0 );
      Cd.rgb= mix( vec3(.05,.1,.5), vec3(.3,.5,1.0), intensity.x);
      
      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);
      vec4 noiseCd=texture2D(cloudNoise,nUV);
      noiseCd.xyz=noiseCd.xyz*2.0-1.0;
      nUV=vUv+noiseCd.xy*.05;
      
      float alpha=texture2D(alphaMap,nUV).r;
      float blender=(nDot*.5+.5);
      Cd.rgb=Cd.rgb*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color
      alpha=1.0-(1.0-alpha)*(1.0-alpha);
      alpha*=alpha;
      Cd.a=alpha+alpha;
      gl_FragColor = Cd;
    }`,n}function xm(){let n=ue();return n+=`
        uniform vec2 time;
        uniform float rate;
        varying vec2 shiftUv;
        varying vec2 wUv;
        
        void main(){
            shiftUv=(uv-.5);
            
            float t=time.x*rate;
            vec2 rot=vec2( sin(t), cos(t) );
            vec2 rotUV=vec2(0.0);
            rotUV.x=rot.y*(uv.x-.5) + rot.x*(uv.y-.5);
            rotUV.y=rot.y*(uv.y-.5) - rot.x*(uv.x-.5);
            wUv=rotUV+.5;
            
            vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
            gl_Position = projectionMatrix*modelViewPosition;
            
        }`,n}function ym(){let n=ue();return n+=`
        uniform vec3 color;
        uniform sampler2D alphaMap;
        uniform sampler2D cloudNoise;
        uniform vec2 intensity;
        varying vec2 shiftUv;
        varying vec2 wUv;
        
        #define TAU 6.28318530717958
        void main() {
            float suvLength=length(shiftUv)+.1;
            vec2 suvSign=sign(shiftUv);
            
            vec2 rUv=sin( (suvLength+wUv*10.*shiftUv)*.5 );
            rUv *= suvLength ;
            
            vec4 noiseCd=texture2D(cloudNoise,rUv);
            vec2 aUv=wUv*(noiseCd.xy*.5+wUv);
            
            float alpha=texture2D(alphaMap,aUv).r;
            
            vec4 Cd=vec4( color*intensity.x*(1.0+alpha)*mix( noiseCd.rgb, vec3(1.0), alpha), 1.);
            alpha*=max(0.0, alpha-noiseCd.r*noiseCd.g*noiseCd.b );
            Cd.a=min(1.0, alpha);
            
            gl_FragColor = Cd;
        }`,n}var Zc={};Yt(Zc,{itemBaseFrag:()=>bm,itemBaseVert:()=>_m,itemFrag:()=>Mm,itemVert:()=>Sm,itemZoomFrag:()=>wm,pxlPrincipledFrag:()=>El,pxlPrincipledVert:()=>Tl});function _m(){let n=ue();return n+=`
    uniform vec2 time;
    uniform float intensity;
    uniform float rate;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    
    void main(){
      vUv=uv+vec2(rate*time.x, 0.0);
      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );
      nDot=dot( normal, camDir );
      
      pos=position;
      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);
      gl_Position = projectionMatrix*modelViewPosition;
      
    }`,n}function bm(){let n=ue();return n+=`
    uniform vec3 color;
    uniform sampler2D alphaMap;
    uniform sampler2D cloudNoise;
    uniform vec2 time;
    uniform float intensity;
    uniform float rate;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    
    void main() {
      vec4 Cd=vec4( color, 1.0);
      
      
      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);
      vec4 noiseCd=texture2D(cloudNoise,nUV);
      noiseCd.xyz=noiseCd.xyz*2.0-1.0;
      nUV=vUv+noiseCd.xy*.05;
      
      float alpha=texture2D(alphaMap,nUV).r;
      float blender=(nDot*.5+.5);
      Cd.rgb=color*intensity*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color
      alpha=1.0-(1.0-alpha)*(1.0-alpha);
      alpha*=alpha;
      Cd.a=alpha+alpha;
      gl_FragColor = Cd;
    }`,n}function Sm(){let n=ue();return n+=`
    uniform vec2 time;
    uniform float intensity;
    uniform float rate;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    varying vec2 nUv;
    
    void main(){
      vUv=uv;
      nUv=uv*.5+vec2(rate*time.x*-.1, 0.0);
      nUv.x=sin(nUv.x)*.5+.5;
      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );
      nDot=dot( normal, camDir );
      
      vec2 nUV=position.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);
      vec3 pos=position;
      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);
      gl_Position = projectionMatrix*modelViewPosition;
      
    }`,n}function Mm(){let n=ue();return n+=`
    uniform vec3 color;
    uniform sampler2D alphaMap;
    uniform vec2 time;
    uniform float intensity;
    uniform float rate;
    uniform sampler2D cloudNoise;
    varying vec3 pos;
    varying float nDot;
    varying vec2 vUv;
    varying vec2 nUv;
    
    void main() {
      vec4 Cd=vec4( color, 1.0);
      float alpha=texture2D(alphaMap,vUv).r;
      float noise=length(texture2D(cloudNoise,nUv).rgb)*.5;
      float blender=(nDot*.5+.5);
      Cd.rgb=color*blender;
      Cd.rgb*=intensity*alpha;
      Cd.a=blender*alpha+noise*alpha;
      gl_FragColor = Cd;
    }`,n}function wm(){let n=ue();return n+=`
    uniform sampler2D color;
    uniform vec2 time;
    uniform float intensity;
    uniform sampler2D cloudNoise;
    varying vec2 vUv;
    
    void main() {
      vec4 Cd=texture2D(color,vUv);
      Cd.a=Cd.b;
      Cd.rgb=vec3( Cd.rg*Cd.a, 0.0 );
      Cd.rgb*=Cd.a* mix(.7, 1.0, gl_FrontFacing);
      gl_FragColor = Cd;
    }`,n}function Tl(n=!1){let e=`
    attribute vec3 color;
    attribute vec3 shading;

    varying float vFlicker;
    varying vec2 vUv;
    varying vec3 vCd;
    varying vec3 vPos;
    varying vec3 vLocalPos;
    varying vec3 vN;
    varying vec3 vLocalN;
    varying vec3 vShading;
    `;return n&&(e+=`
        ${Te.common}
        ${Te.shadowmap_pars_vertex}
      `),e+=`
    
    void main(){
        vUv=uv;
        
        vShading=shading;
        
        vCd=color;
        
        vec3 transformed = vec3( position );
        vec3 objectNormal = vec3( normal );
        vec3 transformedNormal = objectNormal;
        
        
        vLocalPos = position;
        vN = (modelViewMatrix * vec4(normal, 0.0)).xyz;
        vLocalN = ( modelMatrix * vec4(normal, 0.0)).xyz;
        vec4 mvPos=modelViewMatrix * vec4(position, 1.0);
        gl_Position = projectionMatrix*mvPos;
        vPos = mvPos.xyz;
        
        `,n&&(e+=`
            ${Te.worldpos_vertex}
            ${Te.shadowmap_vertex}
          `),e+=`
    }`,e}function El(n,e,t,i,s,r){let a=!1,o=1;n.hasOwnProperty("Specular")&&n.Specular>0&&(a=!0,o=n.Specular);let l=!1;n.PointColor&&(l=!0);let h=!0,c="1.0";n.hasOwnProperty("SurfaceNoise")&&(n.SurfaceNoise%1==0&&(c=n.SurfaceNoise+".0"),c=="0.0"&&(h=!1));let u=`
        `;if(e||(u+="uniform sampler2D dTexture;"),u+=`
    
    uniform sampler2D noiseTexture;
    uniform sampler2D detailTexture;
        
    uniform vec2 time;
    uniform float cdMult;
    uniform vec3 fogColor;
    
    varying vec2 vUv;
    varying vec3 vCd;
    varying vec3 vPos;
    varying vec3 vLocalPos;
    varying vec3 vN;
    varying vec3 vLocalN;
    varying vec3 vShading;
    
    varying float vFlicker;
    
    #define PI 3.14159265358979
    
    struct PointLight {
      vec3 color;
      float decay;
      float distance;
      vec3 position;
    };
    struct DirLight {
      vec3 color;
      vec3 direction;
    };
    `,i&&(u+=`
    #if NUM_POINT_LIGHTS > 0
      uniform PointLight pointLights[NUM_POINT_LIGHTS];
    #endif
    #if NUM_DIR_LIGHTS > 0
      uniform DirLight directionalLights[NUM_DIR_LIGHTS];
    #endif
      `),s&&(u+=`
      
      ${Te.packing}
      
      #if NUM_POINT_LIGHT_SHADOWS > 0
          uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
          varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
          struct PointLightShadow {
              float shadowBias;
              float shadowNormalBias;
              float shadowRadius;
              vec2 shadowMapSize;
              float shadowCameraNear;
              float shadowCameraFar;
          };
          uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
      #endif
      float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
          return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
      }
      vec2 cubeToUV( vec3 v, float texelSizeY ) {
          vec3 absV = abs( v );
          float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
          absV *= scaleToCube;
          v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
          vec2 planar = v.xy;
          float almostATexel = 1.5 * texelSizeY;
          float almostOne = 1.0 - almostATexel;
          if ( absV.z >= almostOne ) {
              if ( v.z > 0.0 )
                  planar.x = 4.0 - v.x;
          } else if ( absV.x >= almostOne ) {
              float signX = sign( v.x );
              planar.x = v.z * signX + 2.0 * signX;
          } else if ( absV.y >= almostOne ) {
              float signY = sign( v.y );
              planar.x = v.x + 2.0 * signY + 2.0;
              planar.y = v.z * signY - 2.0;
          }
          return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
      }
      float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
          vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
          vec3 lightToPosition = shadowCoord.xyz;
          float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );
           dp += shadowBias;
          vec3 bd3D = normalize( lightToPosition );
          #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
              vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
              return (
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
              ) * ( .11111111111 ) * (1.0-dp);
          #else
              return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) * (1.0-dp);
          #endif
      }
    
      vec3 directionToLight( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar  ){
          vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
          vec3 lightToPosition = shadowCoord.xyz;
          float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );
          dp += shadowBias;
          vec3 bd3D = normalize( lightToPosition );
          vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
          return texture2D( pointShadowMap[0], cubeToUV( bd3D, texelSize.y )).rgb;
      }
      `),u+=`
    void main(){
      `,l)u+="vec3 vertCd = vCd;";else if(e){let v=y=>y%1==0?y+".0":y+"",p=v(e.r),g=v(e.g),x=v(e.b);u+=`vec3 vertCd = vec3( ${p}, ${g}, ${x} ) ;`}else u+="vec3 vertCd = texture2D(dTexture,vUv).rgb ;";u+=`
        
        vec4 Cd=vec4( vertCd, 1.0 );
        float specular = 0.0;
        `,t&&(u+=`
          float depth = gl_FragCoord.z / gl_FragCoord.w *.0004;
          Cd.rgb=  mix( Cd.rgb, fogColor, depth );
          `);let d="",m="",f="";if(h&&(c!="1.0"&&(d="*"+c),u+=`
            float detailMult = (texture2D(detailTexture,vUv*4.0).r)*.5+.5;
            `,m=`+detailMult * (shadowInf*.5+.5) ${d}`,f=`(detailMult+.5) ${d}`),i&&(u+=`
          #if NUM_POINT_LIGHTS > 0 || NUM_DIR_LIGHTS > 0
            vec4 lights = vec4(0.0, 0.0, 0.0, 1.0);
          #endif
          
          #if NUM_POINT_LIGHTS > 0
            for(int i = 0; i < NUM_POINT_LIGHTS; i++) {
                vec3 lightVector = normalize(vPos - pointLights[i].position);
                vec3 lightInf= clamp(dot(-lightVector, vN), 0.0, 1.0) * pointLights[i].color;
                //lightInf = mix( lightInf, 1.0-(1.0-lightInf)*(1.0-lightInf), .2);
                float distFalloff =  1.0-min(1.0, length(vPos - pointLights[i].position) * pointLights[i].decay*.008 );
                lightInf *=  distFalloff;
                lights.rgb += lightInf;
                `,a&&(u+=`
                  distFalloff = (dot(vN, normalize(-vPos)) )*distFalloff;
                  specular += distFalloff;
                  `),u+=`
            }
          #endif
            
          #if NUM_DIR_LIGHTS > 0
            for(int i = 0; i < NUM_DIR_LIGHTS; i++) {
                vec3 lightInf= max(0.0, dot(directionalLights[i].direction, vN)*.65+.35) * directionalLights[i].color;
                lights.rgb += lightInf;
            }
          #endif
            
            
          #if NUM_POINT_LIGHTS > 0 || NUM_DIR_LIGHTS > 0
            Cd.rgb *= lights.rgb;
          #endif
          `,a&&(u+=`
            Cd.rgb += vertCd * specular * ${o};
            `)),s){u+=`
          #if NUM_POINT_LIGHT_SHADOWS > 0
            
            float shadowInf = 0.0;
            float detailInf = 0.0;
            float lShadow = 0.0;
            int i = 0;
            `;for(let v=0;v<r;++v)u+=`
                i=${v};
                lShadow = getPointShadow( pointShadowMap[${v}], pointLightShadows[i].shadowMapSize, pointLightShadows[i].shadowBias*.75, pointLightShadows[i].shadowRadius*1.65, vPointShadowCoord[i], pointLightShadows[i].shadowCameraNear, pointLightShadows[i].shadowCameraFar );
                shadowInf = max( lShadow, shadowInf);
                `;u+=`
            shadowInf = shadowInf;
            Cd.rgb*=shadowInf ${m} ;
            `,h&&(u+=`
              #else
                Cd.rgb*=${f};
              `),u+=`
          #endif
          `}else h&&(u+=`
            Cd.rgb*=${f};
            `);return u+=`
        Cd*=cdMult;
        
        // Convert to sRGB
        Cd.rgb = mix( 12.92 * Cd.rgb, 1.055 * pow(Cd.rgb, vec3(1.0 / 2.4)) - 0.055, step(0.0031308, Cd.rgb) );

        gl_FragColor=Cd;
    }`,u}var Qc={};Yt(Qc,{dustFrag:()=>Br,dustVert:()=>Fr,emberWispsFrag:()=>Pl,emberWispsVert:()=>Al,smokeFrag:()=>Dl,smokeVert:()=>Rl,snowFallFrag:()=>Tm,snowFallVert:()=>Cm});function Al(n=[-.13,.15]){let e=ue();return e+=`
        
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform float rate;
    uniform vec2 pointScale;
    uniform vec3 sliders;
    
    attribute vec4 seeds;
    attribute vec2 atlas;
    
    varying vec3 vCd;
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vAlpha;
    varying float vBrightness;
    
    #define PROX 60.0
    #define LAND 10.0
    
    const vec2 windForce = vec2(${n[0]}, ${n[1]});
    
    const vec3 earlyCd = vec3( 1.0, 0.7, .1 );
    const vec3 oldCd = vec3( 0.634, 0.50, 0.20 );
    const float emberSpread = 15.0;
    const float emberFadeDistance = 0.04;
    const float baseSpeed = 0.47;
    
    
    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){
        vec2 ref=pos-pt;
        float ret = step( dot( ref, n1 ), 0.0 );
        ret *= step( dot( ref, n2 ), 0.0 );
        
        return ret;
    }
    
    
    void main(){
        vAtlas=atlas;
        
        float rot=seeds.z+time.x*(seeds.z*2.);
        vRot=vec2( sin(rot), cos(rot) );
        
        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) * vec3(PROX);
        
        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);
        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;
        
        float rateShift = (baseSpeed*(seeds.x*.4+.6));
        float t=time.x*rate*rateShift;
        float shiftY= mod( t+t*seeds.x+seeds.z*8.0+noiseCd.r*10.20*(seeds.y*2.0-1.0)+noiseCd.b+(-seeds.x+seeds.y)*4.0, 10.0);
        float life = 1.0-max(0.0,abs(shiftY-seeds.x*.1)*(1.0-(seeds.x*1.0)) );
        life = 1.0-((shiftY*.001-seeds.x*.2) );
        
        pOff.y=shiftY*seeds.y;
        
        pOff.y=(pOff.y)+shiftY; 
        vec3 pos= pOff ;
        

        pos.xz=(noiseCd.rg*noiseCd.r)*(seeds.x)*emberSpread*(life*seeds.zy*(seeds.w*4.0-2.));
        
        float yPush = ( life * (life*.5+.5))  * min(1.0,pos.y*.12) * 5.8;
        pos.xz += windForce * yPush * pos.y + vec2(1.25, .0);
        pos.y += yPush;
        
        
        
        float pScalar = max( 0., (1.-length(pos-cameraPosition )*0.017)  );
        float aMult = min(1.0, pScalar*3.0);
        vAlpha = (seeds.x*.15+.7) * aMult;

        
        vAlpha=max(0.0, life*life-seeds.z-seeds.z);
        float distMult = ( length( pos )*emberFadeDistance );
        distMult = 1.0 - ( distMult * distMult );
        vAlpha *= distMult;
        
        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.3+vec2(0.0,pos.y)).rgb*2.0 ;
        pos.xz+=doubleCd.rb ;
        
        
        float pScale = pointScale.x * seeds.w * pScalar + 2.0;
        
        gl_PointSize = pScale;
        
        pos += modelMatrix[3].xyz - vec3(1.0, 0.50, 0.2);
        vec4 mvPos=viewMatrix * vec4(pos, 1.0);
        gl_Position = projectionMatrix*mvPos;
        
        float cdAge = clamp( 1.0 - life, 0.0, 1.0);
    
    //earlyCd, oldCd
        vCd = mix( earlyCd, oldCd, cdAge )  ;
        vBrightness = 1.45;
        
    } `,e}function Pl(){let n=ue();return n+=`        
    uniform sampler2D atlasTexture;
    uniform vec2 time;
    uniform float rate;
    
    varying vec3 vCd;
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vAlpha;
    varying float vBrightness;
    
    void main(){
        vec2 uv=gl_PointCoord;

        vec2 pos = (uv-.5)*.85;

        vec2 rotUV;
        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;
        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;
        rotUV=(rotUV+.5)*.25+vAtlas;
        
        vec4 dustCd=texture2D(atlasTexture,rotUV);
        float alpha=dustCd.a*vAlpha;
        
        //dustCd.rgb = 1.0 - (1.0 - dustCd.rgb ) * vBrightness;
        dustCd.rgb *= vBrightness;
        
        vec4 Cd=vec4( dustCd.rgb * vCd * vBrightness, alpha );
        gl_FragColor=Cd;
    }`,n}function Fr(n,e=120){let t=ue();return t+=`
                
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform float rate;
    uniform vec2 pointScale;
    uniform vec3 positionOffset;
    uniform vec2 windDir;
  `,n>0&&(t+=`uniform vec3[${n}] lightPos;`),t+=`
    
    attribute vec4 seeds;
    attribute vec2 atlas;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vScalar;
    varying float vAlpha;
    
    #define PROX ${e.toFixed(3)}
    #define PROX_INV 1.0/${(e*1.8).toFixed(3)}
    
    #define LIGHT_COUNT ${n}
    
    
    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){
        vec2 ref=pos-pt;
        float ret = step( dot( ref, n1 ), 0.0 );
        ret *= step( dot( ref, n2 ), 0.0 );
        
        return ret;
    }
    
    
    void main(){
        vAtlas=atlas;
        
        float rot=seeds.z+time.x*(seeds.z*2.);
        vRot=vec2( sin(rot), cos(rot) );
        
        float t=time.x*rate;
        
        vec3 pOff=seeds.xyz * vec3(PROX);
        
        // Loop point positions based on camera location
        float yFract=fract(t+seeds.x);
        pOff.y+=cameraPosition.y ; 
        pOff.x+=time.x*windDir.x; 
        pOff.z+=time.x*windDir.y; 
        vec3 pos= pOff ;
        
        vec3 noiseCd=texture2D(noiseTexture, sin(pos.xz*.05+seeds.xz+time.x*.1)*.5+.5 ).rgb-.5;
        
        pos.y = (pos.y-.1)*.45;
        pos.y+=sin(seeds.x+seeds.z+noiseCd.r*noiseCd.g+noiseCd.b+time.x*.2)*2.;//+noiseCd.r*noiseCd.g*noiseCd.b*20.;

        pos.xz+=(noiseCd.rg*noiseCd.b)*((seeds.w+.75)*4.);
        vec2 camXZ=cameraPosition.xz;
        pos.xz= mod( pos.xz-camXZ, PROX) + camXZ - PROX*.5;
        
        float pScalar = max( 0., (1.-length(pos-cameraPosition )*PROX_INV)  );
        float aMult = min(1.0, pScalar*3.0);
        vAlpha = (seeds.x*.5+.7) * aMult;

  `,n>1?t+=`
          float lightInf = 1.0;

          for(int i = 0; i < LIGHT_COUNT; i++) {
              vec3 lightVector = normalize(pos - lightPos[i]);
              lightInf = min(lightInf, length(pos - lightPos[i]) *.05 );
          }
          vAlpha*=(1.0-lightInf)*.8+.2;
    `:n==1&&(t+=`
        vec3 lightVector = normalize(pos - lightPos[0]);
        float lightInf = length(pos - lightPos[0]) *.02;
        vAlpha*=(1.0-lightInf)*.8+.2;
    `),t+=`
        vScalar = pScalar ;
        //float pScale = pointScale.x * ((seeds.w+.75)*.5) * pScalar + 1.0;
        float pScale = pointScale.x * (seeds.w*.5+.5)*pScalar + 1.0;
        pScale *= step( .5, atlas.x )*.5+1.;
        //pScale = 10.0;
       
        gl_PointSize = pScale;
        
        pos+=positionOffset;
        vec4 mvPos=viewMatrix * vec4(pos, 1.0);
        gl_Position = projectionMatrix*mvPos;
    }`,t}function Br(){let n=ue();return n+=`
    uniform sampler2D atlasTexture;
    uniform vec2 time;
    uniform float rate;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vScalar;
    varying float vAlpha;
    
    void main(){
        vec2 uv=gl_PointCoord;

        vec2 pos = (uv-.5)*.85;

        vec2 rotUV;
        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;
        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;
        rotUV=(rotUV+.5)*.25+vAtlas;
        
        vec4 dustCd=texture2D(atlasTexture,rotUV);
        float alpha=dustCd.a*vAlpha; // *vScalar;
        vec4 Cd=vec4( dustCd.rgb, alpha );

        gl_FragColor=Cd;
    }`,n}function Rl(n=[8.7,8.4]){let e=ue();return e+=` 
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform float rate;
    uniform vec2 pointScale;
    
    attribute vec4 seeds;
    attribute vec2 atlas;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vAlpha;
    varying float vBrightness;
    
    
    #define PROX 6.0
    
    
    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){
        vec2 ref=pos-pt;
        float ret = step( dot( ref, n1 ), 0.0 );
        ret *= step( dot( ref, n2 ), 0.0 );
        
        return ret;
    }
     
    
    // Attempted de-Magic-num-ification
    float baseSpread = 110.0;
    float innerBulster = -0.110;
    float smokeDensity = 0.25;
        
    void main(){
        vAtlas=atlas;
        
        float rot=seeds.z+time.x*(seeds.z*2.);
        vRot=vec2( sin(rot), cos(rot) );
        
        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) ;
        
        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);
        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;
        
        float t=time.x*rate;
        float shiftY= mod( t+t*seeds.x+seeds.z*24.0+noiseCd.r+noiseCd.b+(seeds.x+seeds.y)*2.0, 14.0);
        float life = max(0.0,(shiftY-seeds.x)*0.07142857142857142)*.9+.2;
        float alphaMult = (1.0-(1.0-life)*(1.0-life))*smokeDensity;
        
        pOff.y=shiftY*seeds.y*life - (1.0-life);
        
        pOff.y=(pOff.y*.5)+shiftY; 
        vec3 pos= pOff ;
        

        
        // Magic numbers!  Boo!!
        float tightenTip = max(0.0,life-.63)*1.3;
        tightenTip = 1.0 - (1.0-tightenTip) * (1.0-tightenTip);
        //tightenTip *= tightenTip;
        float tightenBase = max(0.0, (1.0-life)*innerBulster);
        float tightenMid = max(0.0, 0.60 - tightenTip - tightenBase - seeds.x*.2);
        
        baseSpread = baseSpread*tightenBase + baseSpread*tightenMid + baseSpread*tightenTip ;
        
        pos.xz=(noiseCd.rg*noiseCd.b)*seeds.w*baseSpread*(life*(seeds.zy*.6));
        
        // Wind -- Forces
        //   Magic numbers, yarb!
        float windInf = life * life * (life*.5+.5);
        vec2 windDir = vec2( windInf*${n[0]}, windInf * ${n[1]} );
        pos.xz += windDir + vec2(-.5, .0);
        
        
        // Alpha with cam distance inf
        float pScalar = 1.0-min( 1.0, (length(pos-cameraPosition )*0.004) );
        pScalar=1.0-(pScalar*pScalar);
        float aMult = min(1.0, pScalar*2.0);
        vAlpha = (seeds.x*.5+.7) * aMult;

        
        // Alpha from gettin' old
        vAlpha=(1.0-life)*min(1.0,alphaMult);
        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.5+vec2(seeds.y,pos.y)).rgb ;
        pos.xz=(pos.xz*seeds.xy+doubleCd.rb*10.0)*min(1.0,life+seeds.y);
        
        
        // Draw size, particle scale
        pScalar = 1.0-(1.0-pScalar)*.75*(1.0-pScalar);
        float pScale = pointScale.x * seeds.w * 0.006 * pScalar + (200.0+125.0*life*pScalar)*(1.0-pScalar);
        pScale += 150.0*(clamp(-(pScalar-.45)*10.0,0.0,1.0));

        gl_PointSize = pScale;
        
        // Brightness multiplier
        vBrightness = 1.0-tightenMid*.81 - tightenTip + tightenBase;
        float originDelta = length(pos)*(-innerBulster);
        vBrightness *= max(0.0, 1.0-originDelta * life * 0.807);
        
        
        // Add Particle System position
        pos += modelMatrix[3].xyz;
        
        vec4 mvPos=viewMatrix * vec4(pos, 1.0);
        gl_Position = projectionMatrix*mvPos;
        
        
    }`,e}function Dl(){let n=ue();return n+=`
        
    uniform sampler2D atlasTexture;
    uniform vec2 time;
    uniform float rate;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vAlpha;
    varying float vBrightness;
    
    void main(){
        vec2 uv=gl_PointCoord;

        vec2 pos = (uv-.5)*.85;

        vec2 rotUV;
        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;
        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;
        rotUV=(rotUV+.5)*.25+vAtlas;
        
        vec4 dustCd=texture2D(atlasTexture,rotUV);
        float alpha=dustCd.a*vAlpha;
        vec4 Cd=vec4( dustCd.rgb, alpha );

        Cd.rgb *= vec3(vBrightness);
        
        gl_FragColor=Cd;
    }`,n}function Cm(n=!1){let e=!n,t=ue();return t+=`
    uniform vec2 time;
    uniform float rate;
    uniform float pointScale;
    
    attribute vec4 seeds;
    attribute vec2 atlas;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vScalar;
    
    #define PROX 1000.0
    #define LAND 50.0
    
    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){
        vec2 ref=pos-pt;
        float ret = step( dot( ref, n1 ), 0.0 );
        ret *= step( dot( ref, n2 ), 0.0 );
        
        return ret;
    }
    
    
    void main(){
        vAtlas=atlas;
        
        float rot=seeds.z+time.x*(seeds.z*2.);
        vRot=vec2( sin(rot), cos(rot) );
        
        float t=time.x*rate;
        
        vec3 pOff=vec3( seeds.x, 0, seeds.y)* vec3(PROX);
        
        // Loop point positions based on camera location
        float yFract=fract(t+seeds.z);
        pOff.y=PROX-yFract*(PROX+LAND); 
        vec3 pos= pOff ;
        vec2 camXZ=cameraPosition.xz;
        pos.xz= mod( pos.xz-camXZ, PROX) + camXZ - PROX*.5;
        
        
        // Get some roof tops working
        //   Using opposing points and 2 normals in xz space to determin y floor position
        // Find rooves from xz pos + dot products
        float floor=0.0;
    `,e&&(t+=`
        // -- --
        vec2 lp1=vec2( -186.0, -1002.0 ); // Point 1
        vec2 l1n1=vec2(-.1,1.); // Normal 1
        vec2 l1n2=vec2(1.,-.1); // Normal 2
        vec2 lp2=vec2( -1101.0, -1720.0 ); // Point 2
        vec2 l2n1=vec2(.1,-1.1);
        vec2 l2n2=vec2(-1.,.1);
        floor = max( floor, 170.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // Lobby roof

        lp1=vec2( -217.0, 786.0 ); // Point 1
        l1n1=vec2(.2,-1.); // Normal 1
        l1n2=vec2(1.,.1); // Normal 2
        lp2=vec2( -940.0, 1293.0 ); // Point 2
        l2n1=vec2(-.2,1.);
        l2n2=vec2(-1.,-.1);
        floor = max( floor, 500.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // sunflower roof

        lp1=vec2( 204.028, 56.7629 ); // Point 1
        l1n1=vec2( 0.152344, -0.988327 ); // Normal 1
        l1n2=vec2( -0.999862, 0.0165819 ); // Normal 2
        lp2=vec2( 755.264, 754.843 ); // Point 2
        l2n1=vec2( -0.160366, 0.987058 );
        l2n2=vec2( 0.999849, 0.0173488 );
        floor = max( floor, 150.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // sunflower roof
        `),t+=`  
        // Prevent snow drifting after hitting the ground
        float yLimit=max( floor, pos.y ) * .08 * seeds.z;
        pos.xz+=vec2( sin(pos.x+yLimit*seeds.x), sin(pos.z+pos.x+yLimit*seeds.y) )*10.; // Snow sway in the sky
        
        // Shift Y position per camera height
        pos.y+=cameraPosition.y-yFract*(cameraPosition.y); 
        pos.y=max( floor+1.5, pos.y );
        
        float melt=min(1.0, (pOff.y+LAND-floor)*.02);
        float pScalar = max( 0., (1.-length(pos-cameraPosition )*0.001) * melt );
        
        vScalar = pScalar;
        float pScale = pointScale * seeds.w * pScalar ;
        gl_PointSize = pScale;
        
        vec4 mvPos=viewMatrix * vec4(pos, 1.0);
        gl_Position = projectionMatrix*mvPos;
    }`,t}function Tm(){let n=ue();return n+=`
    uniform sampler2D snowTexture;
    uniform vec2 time;
    uniform float rate;
    
    varying vec2 vAtlas;
    varying vec2 vRot;
    varying float vScalar;
    
    void main(){
        vec2 uv=gl_PointCoord;

        vec2 pos = uv-.5;

        vec2 rotUV;
        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;
        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;
        rotUV=(rotUV+.5)*.25+vAtlas;
        
        float alpha=texture2D(snowTexture,rotUV).r * vScalar;
        vec4 Cd=vec4( vec3(1.), alpha );

        gl_FragColor=Cd;
    }`,n}var Jc={};Yt(Jc,{boxAntiAliasPass:()=>Im,chroAberPostProcess:()=>Om,compLayersPostProcess:()=>Dm,crossAntiAliasPass:()=>Lm,directionalBlurPass:()=>Um,finalOverlayHeavyShader:()=>Hm,finalOverlayShader:()=>Wm,finalOverlaySlimShader:()=>jm,glowPassPostProcess:()=>Pm,iZoomPostProcess:()=>Nm,lKingPostProcess:()=>km,mixBlurShaderPass:()=>Fm,motionBlurPostProcess:()=>Bm,sFieldPostProcessFrag:()=>Vm,sFieldPostProcessVert:()=>Gm,textureStorePass:()=>Rm,warpPostProcess:()=>zm,worldPositionFrag:()=>Am,worldPositionVert:()=>Em});function Em(){let n=ue();return n+=`
  varying vec3 pos;
  
  void main(){
    vec3 transformed = vec3( position );
      vec4 mvPosition = modelViewMatrix  * vec4( transformed, 1.0 );
    pos=((projectionMatrix * modelMatrix * vec4( transformed-vec3(0.0,0.0,-500.0), 1.0 )).xyz*.0001)*.5+.5;
    
    gl_Position = projectionMatrix * mvPosition;
  }`,n}function Am(){let n=ue();return n=`#include <packing>
  `+n,n+=`
    uniform sampler2D diffuse;
    uniform sampler2D depth;
    uniform float camNear;
    uniform float camFar;
    varying vec3 pos;
    
    void main() {
      
      vec4 Cd=vec4( pos, 1.0 );
      gl_FragColor = Cd;
    }`,n}function Pm(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D gDiffuse;
    uniform sampler2D rDiffuse;
    uniform sampler2D sceneDepth;
    uniform vec2 time;
    uniform vec2 ratio;
    varying vec2 vUv;

        #define PI 3.14159265358979
        
    void main() {
      vec4 Cd=texture2D( tDiffuse, vUv );
      vec4 gCd=texture2D( gDiffuse, vUv );
      vec4 rCd=texture2D( rDiffuse, vUv );
      
      Cd.rgb=gCd.rgb + gCd.rgb*length(gCd.rgb) + rCd.rgb  + Cd.rgb ;

      Cd.a=1.0;
      gl_FragColor = Cd;
    }`,n}function Rm(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D tDiffusePrev;
    uniform sampler2D tDiffusePrevRoom;
    uniform float roomComposer;
    varying vec2 vUv;
        
    void main() {
      vec4 Cd = texture2D( tDiffusePrev, vUv );
      vec3 prevRoomCd = texture2D( tDiffusePrevRoom, vUv ).rgb;
      Cd.rgb=mix( Cd.rgb, prevRoomCd, roomComposer);
      //Cd.rgb=Cd.rgb + prevRoomCd;
      Cd.a=1.0;
      gl_FragColor = Cd;
    }`,n}function Dm(){let n="";return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D mtDiffuse;
    uniform sampler2D sceneDepth;
    uniform sampler2D noiseTexture;
    uniform float exposure;
    uniform vec2 camRotPitch;
    uniform vec2 time;
    varying vec2 vUv;

    void main() {
      vec4 Cd=texture2D(tDiffuse,vUv)*exposure;
      vec4 mBlurCd=texture2D(mtDiffuse,vUv)*exposure;
      vec4 depth=texture2D(sceneDepth,vUv);
      
  ////////////////////////
  /*
      vec2 uv=vUv;
      float pi=3.14159265358979;
      float t=-time.x*.007;
      float pitch=camRotPitch.y;//depth.w*2.0-1.0;
      float yaw=camRotPitch.x;
      
      float distMult=depth.x*2.0;
      vec2 noiseUV=vec2(fract(uv.x*distMult+t+yaw), fract(uv.y*distMult+pitch));
      vec3 noiseCd=texture2D(noiseTexture,noiseUV).rgb;
      noiseUV=vec2(fract(uv.x*distMult+t*.5+yaw), fract(uv.y*.5*distMult+t*.25+pitch));
      noiseCd.g=texture2D(noiseTexture,noiseUV).g;
      noiseUV=vec2(fract(uv.x*.8*distMult+t*1.3+yaw), fract(uv.y*.3*distMult+t*.5+ pitch + depth.x*2.0));
      noiseCd.b=texture2D(noiseTexture,noiseUV).b;
      float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;
      mult*=max(0.0, 1.0-depth.x) + (1.0-depth.z*.6);
      
      float bg=length(depth.rgb)<.02 ? 0.0 : 1.0;
      float bval=length(bloomCd.rgb);
      mult= mult*(bg+bval) ;//*(1.0-depth.z);
      Cd.rgb= mix( Cd.rgb, vec3(mult*.2), mult );
      */
      
      Cd.rgb+=mBlurCd.rgb;
      Cd.a=1.0;
      gl_FragColor = Cd;
    }`,n}function Lm(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform vec2 resUV;
    uniform float ratio;
    uniform vec3 gamma;
    varying vec2 vUv;

    // 1/4 ==  0.25
    //  + 2 center samples, 1/6 ==  0.166...
    #define AADIV 0.1666666666666666
    const int runCount = 4;
    const vec2 runDir[4] = vec2[4](
                              vec2( -1.0, -1.0 ),
                              vec2( -1.0, 1.0 ),
                              vec2( 1.0, -1.0 ),
                              vec2( 1.0, 1.0 )
                            );

    void main() {
      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;
            
      float dist = 1.0;
      vec2 baseUV=vUv;
      vec2 curUV;
      vec3 curCd;
      for(int s=0; s<runCount; ++s){
        curUV = baseUV+runDir[s]*(resUV);//*dist);
        curCd = texture2D(tDiffuse,curUV).rgb;
        Cd.rgb+=curCd;
      }
      Cd.rgb=Cd.rgb*AADIV;
      Cd.a=1.0;
      
      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));
      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;
      gl_FragColor = Cd;
    }`,n}function Im(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform vec2 resUV;
    uniform float ratio;
    uniform vec3 gamma;
    varying vec2 vUv;

    // 1/8 ==  0.125
    //  + 2 center samples, 1/10 ==  0.1
    #define AADIV 0.1
    const int runCount = 8;
    const vec2 runDir[8] = vec2[8](
                              vec2( -1.0, -1.0 ),
                              vec2( -1.0, 1.0 ),
                              vec2( 1.0, -1.0 ),
                              vec2( 1.0, 1.0 ),

                              vec2( -1.0, 0.0 ),
                              vec2( 0.0, -1.0 ),
                              vec2( 0.0, 1.0 ),
                              vec2( 1.0, 0.0 )
                            );

    void main() {
      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;
            
      float dist = 1.0;
      vec2 baseUV=vUv;
      vec2 curUV;
      vec3 curCd;
      for(int s=0; s<runCount; ++s){
        curUV = baseUV+runDir[s]*(resUV);//*dist);
        curCd = texture2D(tDiffuse,curUV).rgb;
                Cd.rgb+=curCd;
      }
      Cd.rgb=Cd.rgb*AADIV;
      Cd.a=1.0;
      
      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));
      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;
      gl_FragColor = Cd;
    }`,n}function Um(n,e,t,i){let s=ue();return s+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D pDiffuse;
        uniform vec2 resUV;
        varying vec2 vUv;
  
        #define PI 3.14159265358979
        
        void main() {
          
          float dist = 2.0;
          float fade = 1.0;
          vec2 baseUV=vUv;
            
          const int blurCount=${t};
          const int runCount=2;
          vec2 runDir[runCount];
          runDir[0]=vec2(${e[0]}.0, ${e[1]}.0);
          runDir[1]=vec2(-${e[0]}.0, -${e[1]}.0);
          vec2 curUV;
          vec4 curCd;
          vec4 blurCd=vec4(.0);
          for(int b=0; b<blurCount; ++b){
            dist = 1.0 + float(b)*${i};
            fade = (1.0-float(b+1)/float(blurCount+2));
            //fade = 1.- (1.-fade)*(1.-fade);
            for(int s=0; s<runCount; ++s){
              curUV = baseUV+runDir[s]*(resUV*dist);
              curUV = min( vec2(1.), max( vec2(0.), curUV ));
              curCd = texture2D(${n},curUV);
              curCd.a *= fade*(length(curCd.rgb)*.6);
              blurCd.r = max( blurCd.r, curCd.r );
              blurCd.g = max( blurCd.g, curCd.g );
              blurCd.b = max( blurCd.b, curCd.b );
              //blurCd.rgb += curCd.rgb;
              blurCd.a = max( blurCd.a, curCd.a );
            }
          }
          vec4 Cd=blurCd;
          //Cd.a=.01;
          gl_FragColor = Cd;
        }`,s}function Fm(){let n=ue();return n+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D pDiffuse;
        uniform vec2 resUV;
        varying vec2 vUv;
        
        #define PI 3.14159265358979
        
        void main() {

          float dist = 3.0;
          float fade = 1.0;
          vec2 baseUV=vUv;
          const int blurCount=3;
          const int runCount=8;
          vec2 runDir[runCount];
          runDir[0]=vec2(1.0, 0.0);
          runDir[1]=vec2(1.0, 1.0);
          runDir[2]=vec2(0.0, 1.0);
          runDir[3]=vec2(-1.0, 1.0);
          runDir[4]=vec2(-1.0, 0.0);
          runDir[5]=vec2(-1.0, -1.0);
          runDir[6]=vec2(0.0, -1.0);
          runDir[7]=vec2(1.0, -1.0);
          vec2 curUV;
          vec4 curCd;
          vec4 scatterCd=vec4(.0);
          for(int b=0; b<blurCount; ++b){
            dist = 1.5*(1.0+float(b));
            fade = .1*(1.0-float(b)/float(blurCount));
            for(int s=0; s<runCount; ++s){
              curUV = baseUV+runDir[s]*(resUV*dist);
              curCd = texture2D(pDiffuse,curUV);
              curCd.a *= fade;
              scatterCd.rgb += curCd.rgb;
              scatterCd.a = max( scatterCd.a, curCd.a );
            }
          }
          vec4 Cd=scatterCd;
          
          vec4 blurCd=texture2D(tDiffuse,vUv);
          blurCd.rgb = normalize( blurCd.rgb );
          
          Cd = mix( blurCd, Cd, Cd.a);
          Cd = texture2D(tDiffuse,vUv);
          //Cd.a=.01;
          gl_FragColor = Cd;
        }`,n}function Bm(n,e){let t=ue();return t+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D rDiffuse;
    uniform sampler2D noiseTexture;
    
    uniform float exposure;
    uniform vec2 time;
    uniform vec3 camRotXYZ;
    uniform vec2 blurDirCur;
    uniform vec2 blurDirPrev;
    varying vec2 vUv;

    vec4 getTexture( sampler2D texelToLinearTexture ) {
      return mapTexelToLinear( texture2D( texelToLinearTexture , vUv ) );
    }
    
    vec3 directionalBlur(vec3 origCd, sampler2D tex, vec2 uv, vec2 dir, vec2 deltaDir, float dist, float thresh){
      float perc;
      float curPerc=1.0;
      vec2 curUV;
      float origLength=length(origCd.rgb);
      vec3 curCd;
      vec3 retCd=origCd;
      float delta;
      float threshTrigger=1.0;
      float dropoff;
      float percCurve;
      float d=dot(dir,deltaDir)*.5+.5;
      for(int r=0; r<10; ++r){
        perc=(float(r)/10.0);
        percCurve=perc*.5;
        dropoff=(dist*float(r))*perc*d;
        curUV=uv+normalize(deltaDir*percCurve+dir*(1.0-percCurve))*dropoff;
        //curUV=uv+dir*dropoff;
        curCd=texture2D(tex,curUV).rgb;
        delta=length(curCd.rgb);
        delta=origLength<delta?1.0-perc*perc:0.0;
        //delta=1.0-perc*perc;
        retCd+=curCd.rgb*delta;
        curPerc+=delta;
        
        percCurve*=percCurve;
        curUV=uv-normalize(-deltaDir*percCurve+dir*(1.0-percCurve))*dropoff*.4;
        //curUV=uv-dir*dropoff*.4;
        curCd=texture2D(tex,curUV).rgb;
        delta=length(curCd.rgb);
        delta=origLength<delta?1.0-perc*perc:0.0;
        //delta=1.0-perc*perc;
        retCd+=curCd.rgb*delta;
        curPerc+=delta;
        
      }
      return retCd /curPerc;
    }

    void main() {
      
      
      vec4 bloomCd=getTexture( rDiffuse );
      float noise=sin(time.x*1.8+vUv.x*length(bloomCd.rgb)*12.523+cos(time.x*.4+vUv.y*length(bloomCd.rgb)*2.352)*1.9)*.4+.8;
      noise=1.0-min(1.0, max(0.0, noise*sin(time.x*.4+24.512)*3.0+1.0));
      vec2 noiseUV=vUv*0.1;//+vec2(camRotXYZ.x+time.x*.05,-camRotXYZ.y);
      vec4 noiseCd=texture2D(noiseTexture,noiseUV);
      float blurDist=length(blurDirCur);
      blurDist=min(1.0,blurDist*15.0);
      //blurDist=(1.0-(1.0-blurDist)*(1.0-blurDist));
      vec2 blurDir=normalize(blurDirCur);//+(vUv-.5)*2.0);`,e||(t+=`
        blurDir=normalize( blurDir + (noiseCd.gb-.5)*(dot(blurDir,noiseCd.gb)*.5+.5) );
      `),t+=`
      vec2 deltaDir=normalize(blurDirPrev);
      deltaDir.x+=sin((blurDir.x-deltaDir.x));
      deltaDir.y+=sin((blurDir.y-deltaDir.y));
      
      vec4 bloomAdd=vec4( directionalBlur(bloomCd.rgb, rDiffuse, vUv, blurDir, deltaDir, `+n.y+"*"+(e?"3.0":"5.0")+`*(1.5)*blurDist, .5)*(1.0+exposure*.4), 1.0);
      vec4 Cd= bloomAdd* ( 0.50+bloomCd)*exposure;//getTexture( rDiffuse ) + bloomAdd;//+ vec4( 1.0 ) * bloomCd + bloomAdd;
      //Cd.a=bloomAdd.a-bloomCd.a;
      
      Cd.a=1.0;
      gl_FragColor = Cd;
      
    }`,t}function Om(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D chroAberUVTexture;
    uniform vec2 ratio;
    uniform vec2 warpMult;
        uniform vec2 lKing;
    varying vec2 vUv;

    void main() {
      // I don't know, sRGB to Linear. Keeping it Linear doesn't work, PNG encoding to blame
      vec4 caCd= texture2D( chroAberUVTexture, vUv )-vec4(vec3(0.7294118), 0.5019608);
      //caCd*=mix( .025, .018, length(caCd.rg)*4.0 );
      caCd*=mix( lKing.x, lKing.y, length(caCd.rg)*4.0 )+warpMult.x;
      
      vec2 bUv=vUv+caCd.rg;
      vec2 rUv=vUv+caCd.ba;
      vec2 gUv=vUv+(caCd.rg+caCd.ba);
      vec4 rCd=texture2D( tDiffuse, rUv );
      vec4 Cd=texture2D( tDiffuse, gUv );
      vec4 bCd=texture2D( tDiffuse, bUv );
      
      Cd.rgb=vec3( rCd.r, Cd.g, bCd.b );
      Cd.a=1.0;
      gl_FragColor = Cd;
    }`,n}function km(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform vec2 ratio;
    varying vec2 vUv;

        #define PI 3.14159265358979
        
    void main() {
      vec4 Cd=texture2D( tDiffuse, vUv )*.2;
      vec4 noiseCd= (texture2D( noiseTexture, vec2( fract(vUv.x*.2-time.x*.02+sin(time.x*.1+vUv.y*PI+Cd.r+Cd.g)),fract( vUv.y*.2+time.x*.01+cos(-time.x*.2+1.15+vUv.x*PI+Cd.g+Cd.b)) ) )-.5)*.025;
      
      vec2 bUv=vUv+noiseCd.rg;
      vec2 rUv=vUv+noiseCd.gb;
      vec2 gUv=vUv+noiseCd.br;
      vec4 rCd=texture2D( tDiffuse, rUv );
      vec4 gCd=texture2D( tDiffuse, gUv );
      vec4 bCd=texture2D( tDiffuse, bUv );
      
      Cd.rgb=vec3( rCd.r, gCd.g, bCd.b );
      Cd.a=1.0;
      gl_FragColor = Cd;
    }`,n}function Nm(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D tDiffusePrev;
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform vec2 ratio;
    varying vec2 vUv;

        #define PI 3.14159265358979
        
    void main() {
      vec4 Cd=texture2D( tDiffuse, vUv );
            vec4 pCd=texture2D( tDiffusePrev, vUv );
            vec3 dCd=Cd.rgb-pCd.rgb;
            vec3 b1Cd= texture2D( tDiffuse, vUv-vec2( dCd.rg*.1 ) ).rgb;
            vec3 b2Cd= texture2D( tDiffusePrev, vUv+vec2( dCd.rg*.1 ) ).rgb;
            b1Cd=mix( b1Cd, b2Cd, step( length(b1Cd), length(b2Cd) ) );
            
            vec4 outCd=vec4(1.0);
            outCd.rgb= mix(  Cd.rgb, b1Cd, length(dCd) );
            
      vec3 noiseCd=texture2D( noiseTexture, fract( vUv*50.0+dCd.rg*.1 + length(Cd.rgb*30.0) + time.x) ).rgb;

            outCd.rgb= mix( vec3(length(outCd.rgb)*.333-length(noiseCd)*.1), outCd.rgb, min(1.0,length(dCd))*.5+.5 );
            outCd.rgb+= dCd.gbr;
            
            
            
      outCd.a=1.0;
      gl_FragColor = outCd;
    }`,n}function Gm(){let n=ue();return n+=`
    uniform vec2 time;
    varying vec2 vUv;
    varying vec2 vUvShift;
    varying vec2 starUv;
    varying float vTimer;

    void main(){
        vUv=uv;
        vUvShift=uv-.5;
        
        vec2 rUv=vUvShift*0.7071067811865476;
        vec2 tmpUv=rUv;
        float rot=time.x*.1;
        vec2 sinCos=vec2( sin(rot), cos(rot) );
        rUv.x=sinCos.x*tmpUv.x + sinCos.y*tmpUv.y;
        rUv.y=sinCos.y*tmpUv.x - sinCos.x*tmpUv.y;
        rUv=(rUv+.5);
        
        float starTimer=sin(time.x*.2)*.1+.1;
        starUv=mix( vUv, rUv, starTimer);
        
        vTimer=time.x*.5;
        
        vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);
        gl_Position = projectionMatrix*modelViewPosition;
    }`,n}function Vm(){let n=ue();return n+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D starTexture;
        varying vec2 vUv;
        varying vec2 vUvShift;
        varying vec2 starUv;
        varying float vTimer;

        #define PI 3.14159265358979
        
        void main() {
            float uvDist=length(vUvShift);
            
            vec3 starCd=texture2D( starTexture, starUv ).rgb*uvDist;
            
            float blender=uvDist*starCd.b * abs((fract(starCd.b*PI+vTimer))*2.0-1.0)*.5;
            vec2 starBlendUV=starCd.rg*blender;
            
            vec2 cdUv = vUv+starBlendUV;
            vec4 Cd=texture2D( tDiffuse, cdUv );
            
            vec3 negCd= mix( Cd.brg, Cd.gbr, length(Cd.rgb-Cd.rgb) );
            float cdBlender=step(.015,starBlendUV.x*uvDist)+starCd.b;
            Cd.rgb= mix( Cd.rgb, negCd, cdBlender );
            
            gl_FragColor = Cd;
        }`,n}function zm(){let n=ue();return n+=`
    uniform sampler2D tDiffuse;
    uniform sampler2D noiseTexture;
    uniform sampler2D animTexture;
    uniform vec2 time;
    uniform vec2 fader;
    varying vec2 vUv;

    void main() {
      vec4 Cd=texture2D( tDiffuse, vUv );
      vec4 animCd=texture2D( animTexture, vUv );
      float timer=time.x*.2;
      vec2 animUV=vec2( mod(animCd.r+Cd.r+Cd.g+timer, 1.0), mod(animCd.g+Cd.g+Cd.b+timer, 1.0) );
      animCd=texture2D( animTexture, animUV );
      
      vec2 noiseUV=animUV+animCd.rg;
      vec4 noiseCd=texture2D(noiseTexture,noiseUV);
      noiseCd.rgb=vec3( length( noiseCd.rgb )*.5-.25 );
      
      float blend=fader.x*fader.y;
      Cd=mix( Cd, noiseCd, blend);
      
      Cd.a=1.0;
      Cd.r=1.0;
      gl_FragColor = Cd;
    }`,n}function Hm(){let n=ue();return n+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D rDiffuse;
        uniform sampler2D bloomTexture;
        uniform sampler2D sceneDepth;
        uniform sampler2D scenePos;
        uniform sampler2D noiseTexture;
        uniform vec3 camPos;
        uniform vec2 time;
        uniform vec2 fogMult;
        uniform vec2 proximityMult;
        uniform float ratio;
        uniform float exposure;
        varying vec2 vUv;

        vec3 fogValue( vec3 worldPos, float time ){
            float wpDist = worldPos.x+worldPos.z*2.0;
            vec2 noiseUV = vec2( ((time*.5+wpDist*.60)), (worldPos.y*.7+time*.25 ));
            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;
            noiseUV=vec2( ((time*.3+wpDist*.55)), (worldPos.x*.5+time*.35 ));
            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,time)).g;
            noiseUV=vec2( ((time*1.2+wpDist*.83)), (worldPos.y+time*.15  ));
            noiseCd.b=texture2D(noiseTexture,noiseUV).b;
            
            return noiseCd;
        }

        #define PROX_WARP 3.14159265358979*.45
        
        void main() {
            vec4 Cd=texture2D(rDiffuse,vUv);
            float depth=texture2D(sceneDepth,vUv).r;
            
            vec3 worldPos = texture2D(scenePos,vUv).rgb;
            float t = -time.x*.003;
            vec3 baseNoiseCd=fogValue( worldPos, t );
            
            float mult=0.0;
            vec3 noiseCd;
            vec3 curNoiseCd;
            vec3 samplePos;
            float samples=4.3;//+sin(time.x*.001);
            float blender;
            float blenderMax=0.0;
            for( int x=0; x<=3; ++x){
                blender=( float(x+1) / samples );
                samplePos=worldPos*blender;
                curNoiseCd=fogValue( samplePos, t );
                noiseCd=max(noiseCd, curNoiseCd * blender );
                blenderMax+=blender;
            }
            noiseCd += baseNoiseCd*.2;
            mult= noiseCd.x*noiseCd.y*noiseCd.z*1.2;
            //mult*=mult;
            
            // Distance Mapping
            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );
            float mDepth= pow( depth, 28.*proxWarp );
            
            float fogDap= max(0.0, 1.0-mDepth);
            fogDap=1.0-fogDap*fogDap;
            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap ;
            
            
            Cd.rgb= mix( Cd.rgb, vec3(mult*.7), mult)-mult*.35;
 
            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;
            Cd.rgb+= bloomCd;
            Cd.rgb*=exposure;
            
            // Proximity Draw Over
            float dProx=  ((mDepth-.5)*-10.);
            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));
            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));
            dProx*= dProx* yProxMult * proximityMult.x;
            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;
            Cd.rgb+=proxCd*mult;
            
            Cd.a=1.0;
            gl_FragColor = Cd;
    }`,n}function Wm(){let n=ue();return n+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D rDiffuse;
        uniform sampler2D bloomTexture;
        uniform sampler2D sceneDepth;
        uniform sampler2D scenePos;
        uniform sampler2D noiseTexture;
        uniform vec2 time;
        uniform vec2 fogMult;
        uniform vec2 proximityMult;
        uniform vec2 lookAtPerc;
        uniform vec2 resUV;
        uniform float ratio;
        uniform float exposure;
        varying vec2 vUv;

        #define PROX_WARP 3.14159265358979*.45

        void main() {
            vec4 Cd=texture2D(rDiffuse,vUv);
            float depth=texture2D(sceneDepth,vUv).r;
            
            vec3 worldPos = texture2D(scenePos,vUv).rgb;
            float wpDist = worldPos.x+worldPos.z*2.0;
            float t = -time.x*.003;
            
            vec2 noiseUV = vec2( ((t*.5+wpDist*.60)), (worldPos.y*.7+t*.25 ));
            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;
            noiseUV=vec2( ((t*.3+wpDist*.55)), (worldPos.x*.5+t*.35 ));
            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,t)).g;
            noiseUV=vec2( ((t*1.2+wpDist*.83)), (worldPos.y+t*.15  ));
            noiseCd.b=texture2D(noiseTexture,noiseUV).b;
            
            
            // Distance Mapping
            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );
            float mDepth= pow( depth, 28.*proxWarp );
            
            float fogDap= max(0.0, 1.0-mDepth);
            fogDap=1.0-fogDap*fogDap;
            float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;
            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap;
            
            
            Cd.rgb= mix( Cd.rgb, vec3(mult), mult)-mult*.4;
 
            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;
            Cd.rgb+= bloomCd;
            Cd.rgb*=exposure;
            
            // Proximity Draw Over
            float dProx=  ((mDepth-.5)*-10.);
            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));
            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));
            dProx*= dProx* yProxMult * proximityMult.x;
            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;
            Cd.rgb+=proxCd*mult;
            
            Cd.a=1.0;
            gl_FragColor = Cd;
        }`,n}function jm(){let n=ue();return n+=`
        uniform sampler2D tDiffuse;
        uniform sampler2D rDiffuse;
        uniform sampler2D bloomTexture;
        uniform sampler2D sceneDepth;
        uniform vec2 time;
        uniform vec2 proximityMult;
        uniform vec2 lookAtPerc;
        uniform vec2 resUV;
        uniform float ratio;
        uniform float exposure;
        varying vec2 vUv;

        #define PROX_WARP 3.14159265358979*.4
        #define PI 3.14159265358979
        
        vec3 boostHighs( vec3 Cd ){
            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);
            sat=(1.0-sat);
            sat=1.0-sat*sat;
            Cd+=Cd*sat;
            return Cd;
        }
        
        vec3 boostMids( vec3 Cd ){
            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);
            sat=sin( sat*PI );
            Cd+=Cd*sat;
            return Cd;
        }
        
        void main() {
            vec4 Cd=texture2D(rDiffuse,vUv);
            vec2 uv=vUv;
            
            vec3 bloomCd=texture2D(bloomTexture,uv).rgb;
            bloomCd= mix( boostHighs(Cd.rgb), bloomCd,  step( 0.01, length( bloomCd )) );
            
            Cd.rgb+= bloomCd;

            // Proximity Draw Over
            float depth=texture2D(sceneDepth,vUv).r;
            
            // Distance Mapping
            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );
            float mDepth= pow( depth, 28.*proxWarp );
            
            // Proximity Draw Over
            float dProx=  ((mDepth-.5)*-10.);
            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));
            dProx*= dProx * proximityMult.x;
            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;
            Cd.rgb+=proxCd;
            Cd.r=1.0;
            Cd.a=1.0;
            gl_FragColor = Cd;
        }`,n}var $c={};Yt($c,{bgScreenFrag:()=>qm,bgScreenVert:()=>Xm,skyObjectFrag:()=>Km,skyObjectVert:()=>Ym});function Xm(){let n=ue();return n+=`
    uniform vec2 time;
    
    varying vec2 vUv;
    varying vec3 vCamNormal;
    varying vec3 vWorldNormal;
    varying vec3 vWorldCross;
    varying vec3 vSunPos;
    
    void main(){
        vUv=uv;
        
        mat4 pvMat=projectionMatrix * viewMatrix;
        pvMat[3] = vec4(.0, .0, .0, 1.0);
        mat3 pvRot = inverse( mat3( pvMat ) );
        vCamNormal= pvRot * vec3( position*.2 + vec3(.0, .0, 1.0));
        vWorldNormal= normalize( pvRot[2] *vec3(1.,0.,1.));
        vWorldCross= normalize( pvRot[0]*vec3(1.,0.,1.));
        
        float timeRate = time.x * .1;
        vec3 sunPos = normalize( vec3(.3, 1.0, 1.0) );
        vec3 sunRef = sunPos;
        sunPos.y= sin(timeRate) * sunRef.y + cos(timeRate)*sunRef.z;
        sunPos.z= sin(timeRate) * sunRef.z - cos(timeRate)*sunRef.y;
        sunPos.x = sin( timeRate ) * .1;
        
        vSunPos = normalize( sunPos );
        
        vec4 modelViewPosition= vec4(position*2.0 + vec3(.0, .0, 1.0), 1.0);
        gl_Position = modelViewPosition;
    }`,n}function qm(){let n=ue();return n+=`
    uniform sampler2D noiseTexture;
    varying vec2 vUv;
    varying vec3 vCamNormal;
    varying vec3 vWorldNormal;
    varying vec3 vWorldCross;
    varying vec3 vSunPos;
    
    void main(){
        vec4 Cd=vec4( vec3(1.0, .10, .10), 1.0);
        
        float sunDot = dot( vSunPos, vCamNormal )*.5 +.5;
        sunDot *= max(0.0, dot( vSunPos, vec3(.0, 1.0, .0)) );
        
        vec2 xOffset = vec2( .0, .0);
        vec3 nCd=texture2D(noiseTexture,vUv*.1+vSunPos.zy*vec2(.15,.22) + xOffset ).rgb;
        nCd*=texture2D(noiseTexture,vUv*.1+vSunPos.yx*.2).rgb;
        sunDot *= nCd.x*nCd.y*nCd.z;
        nCd= vec3( length( nCd ) );
        
        float mixVal= min(1.0, sunDot+(1.-(vWorldNormal.y*.5+.5)));
        Cd.rgb= mix(vec3(0.0, .20, 1.0)+nCd*vWorldNormal.y, vec3(.0, .0, .0), mixVal);
        Cd.rgb=mix( vec3(.0), Cd.rgb, vWorldNormal.y );
        Cd.rgb=vec3(mix( vWorldNormal, vWorldCross, step(.4, vUv.x)));
        Cd.rgb=vec3(mix( vWorldCross, Cd.rgb, step(vUv.y,.9)));
        gl_FragColor=Cd;
    }`,n}function Ym(){let n=ue();return n+=`
    uniform float camFar;
    uniform vec2 resUV;
    
    varying vec2 vUv;
    varying vec3 vLocalPos;
    varying vec4 vWorldPos;
    
    void main(){
        vUv=uv;
        vLocalPos=position;
        
        vec3 pos = position;
        vec4 modelViewPosition=projectionMatrix * vec4(mat3(viewMatrix)*normalize(pos)*camFar, 1.0);
        gl_Position = modelViewPosition;
        
        vWorldPos = modelViewPosition;
        
    }`,n}function Km(n=ol.OFF){let e=ue();return e+=`     
    uniform sampler2D diffuse;
    uniform sampler2D envDiffuse;
    uniform sampler2D noiseTexture;
    uniform vec2 time;
    uniform float camNear;
    uniform float camFar;
    uniform vec2 resUV;

    uniform float rate;
    uniform vec3 fogColor;
    
    varying vec2 vUv;
    varying vec3 vLocalPos;
    varying vec4 vWorldPos;
    
    #define PI 3.14159265358979323

    float fitDepth( float zDepth ){
        float viewZ = ( camNear * camFar ) / ( ( camFar - camNear ) * zDepth - camFar );
        return ( viewZ + camNear ) / ( camNear - camFar );
    }
    
    void main(){
        vec2 uv=vUv;
        vec2 screenUV=(vec2(vWorldPos.xy/vWorldPos.w))*.5+.5;
        vec4 Cd=texture2D(diffuse,uv);
  `,n==ol.VAPOR&&(e+=`

        
        vec3 lPos = vLocalPos;
        lPos.y = abs(lPos.y)*0.05;

        float t = time.x*.6;

        vec2 nUv =  vec2(vUv.x*0.20, vUv.y - t*.0065  - lPos.y );
        vec3 noiseCd = texture2D( noiseTexture, nUv ).rgb;
        nUv = ( nUv+noiseCd.rg*(noiseCd.b) + t*.02);
        noiseCd = texture2D( noiseTexture, nUv ).rgb;
        noiseCd.rg = noiseCd.rg*2.0-1.0;
        
        float zFrag = texture2D( envDiffuse, screenUV ).x;
        float depth = fitDepth( zFrag );
        float stencil = zFrag==1.0 ? 1.0 : 0.0;
        
        float reachDepth = 0.0 ;
        

        vec2 baseUV=screenUV;
        vec2 curUV=vec2(0.0);
        float curDepth=0.0;
        float curPerc = 0.0;
        float dist = 11.0;
        float blendStep = .4;
        float blend = 0.0;
        float uvShift=0.0;
        for(int s=0; s<5; ++s){
            uvShift = mix(noiseCd.r, noiseCd.g, (noiseCd.b+float(s)*193.5247))*15.0;
            curUV = baseUV+vec2(0.0,resUV.y*-(dist+uvShift)  - t*.005 );
            curDepth = texture2D(envDiffuse,curUV).x ;
            curDepth = fitDepth( curDepth );
            curPerc = step( .3, (1.0-curDepth)*7.00 );
            reachDepth += min(1.0,curDepth)*curPerc;
            blend += blendStep;
            dist+=dist*dot(noiseCd.rgb, vec3(0.0,0.0,1.0));
        }
        reachDepth *= blend*stencil*3.0;

        vec3 normPos = normalize(vLocalPos);
        normPos.y = 1.0-min(1.0,(normPos.y)*2.0);
        normPos.y = normPos.y*normPos.y*normPos.y;
        depth = clamp(reachDepth+normPos.y, 0.0, 1.0)*.1;
        
        float fogMixer = (Cd.r+Cd.g+Cd.b) - (fogColor.r+fogColor.g+fogColor.b) ;
        vec3 toFogColor = mix( fogColor, Cd.rgb, step(0.0, fogMixer) );
        float blender = (sin(noiseCd.r*PI+t+uv.x))*max(0.0,1.0-(depth+fogMixer))*.1 ;
        vec3 baseColor = (toFogColor-min(1.0,blender+ depth*10.0)) ;
        
        
        Cd.rgb = mix(Cd.rgb, baseColor, depth);

    `),e+=`

        gl_FragColor=Cd;
    }`,e}var Zm={animated:Kc,core:Yc,objects:Zc,particles:Qc,rendering:Jc,scene:$c};var Zi=class{constructor(e=null,t="particles"){this.name=t,this.room=e,this.geometry=null,this.material=null,this.points=null,this.count=-1,this.pscale=new G(0,0),this.position=new M(0,0,0),this.atlasPath="sprite_dustLiquid.png",this.atlasPath="sprite_dustAtlas.png"}build(e=30,t=6,i=4,s=null){s||(s=this.elementDuplicator([[0,.75],[0,.5],[.25,.75],[.25,.5]],4)),this.addToScene(e,t,i,s)}setPosition(...e){e.length===1?this.position=e[0]:this.position=new M(...e),this.points&&this.points.position.copy(this.position)}addToScene(e=30,t=6,i=null,s=4,r=[[0,0]],a=!1){this.count=e,this.pscale.x=t*this.room.pxlEnv.pxlQuality.screenResPerc,this.isInternalTexture=!1;let o=null;a?(o=this.atlasRandomGen,r=s):o=this.atlasArrayPicker,i||(i=this.newMaterial());let l=[],h=[],c=[];for(let p=0;p<e;++p)l.push(0,0,0),h.push(Math.random(),Math.random(),Math.random()*2-1,Math.random()*2-1),c.push(...o(r));let u=new _e(l,3),d=new _e(h,4),m=new _e(c,2),f=new We;f.setAttribute("position",u),f.setAttribute("seeds",d),f.setAttribute("atlas",m);let v=new un(f,i);return v.sortParticles=!1,v.frustumCulled=!1,this.room.scene.add(v),v.layers.set(1),v.pBaseScale=t,this.room.geoList[this.name]=v,this.geometry=f,this.material=i,this.points=v,v.position.copy(this.position),v}setUserHeight(e){this.pxlEnv.pxlCamera.userScale=e}atlasRandomGen(e=4,t=2){let i=1/e;return Array.from({length:t}).map(()=>Math.floor(Math.random()*648405.71%e)*i)}atlasRandomList(e=4,t=4,i=2){return Array.from({length:e}).map(s=>this.atlasRandomGen(t,i))}atlasArrayPicker(e){return e[Math.floor(Math.random()*92314.75%e.length)]}dupeArray(e,t){return Array.from({length:t}).fill(e)}elementDuplicator(e,t=4){return e.map(i=>this.dupeArray(i,t)).flat(1)}findLightPositions(){let e=[],t=0;return this.room.lightList.hasOwnProperty("PointLight")&&(t=this.room.lightList.PointLight.length,this.room.lightList.PointLight.forEach(i=>{e.push(i.position.clone())})),e}setAtlasPath(e){this.atlasPath=e,this.isInternalTexture=!1}useInternalAsset(e){this.atlasPath=e,this.isInternalTexture=!0}newMaterial(e=!0){let t=this.findLightPositions(),i={atlasTexture:{type:"t",value:null},noiseTexture:{type:"t",value:null},time:{type:"f",value:this.room.msRunner},pointScale:{type:"f",value:this.pscale},intensity:{type:"f",value:1},rate:{type:"f",value:.035},lightPos:{value:t}},s=this.room.pxlFile.pxlShaderBuilder(i,Fr(t.length),Br());return s.side=Je,s.transparent=!0,this.isInternalTexture?s.uniforms.atlasTexture.value=this.room.pxlEnv.getAssetTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}):s.uniforms.atlasTexture.value=this.room.pxlUtils.loadTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}),s.uniforms.noiseTexture.value=this.room.softNoiseTexture,s.depthTest=!0,s.depthWrite=!1,e&&(this.room.materialList[this.name]=s),s}};var Qn=class extends Zi{constructor(e=null,t="billowSmoke"){super(e,t),this.name=t,this.room=e}build(e=50,t=56,i=4,s=null){s||(s=[...super.dupeArray([0,0],4),...super.dupeArray([.25,0],4),...super.dupeArray([.5,0],2),...super.dupeArray([.5,.25],2),...super.dupeArray([.5,.5],2),...super.dupeArray([.5,.75],2),...super.dupeArray([.75,.75],4),...super.dupeArray([.75,.25],3),...super.dupeArray([.75,.25],3)]);let r={atlasTexture:{type:"t",value:null},noiseTexture:{type:"t",value:null},time:{type:"f",value:this.room.msRunner},pointScale:{type:"f",value:this.pscale},intensity:{type:"f",value:.8},rate:{type:"f",value:2.85}},a=this.room.pxlFile.pxlShaderBuilder(r,Rl(),Dl());a.side=Je,a.transparent=!0,a.uniforms.atlasTexture.value=this.room.pxlUtils.loadTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}),a.uniforms.noiseTexture.value=this.room.softNoiseTexture,a.depthTest=!0,a.depthWrite=!1,this.room.materialList[this.name]=a,super.addToScene(e,t,a,i,s)}};var Jn=class extends Zi{constructor(e=null,t="emberWisps"){super(e,t),this.name=t,this.room=e}build(e=30,t=6,i=4,s=null){s||(s=super.elementDuplicator([[0,.75],[0,.5],[.25,.75],[.25,.5]],4));let r={atlasTexture:{type:"t",value:null},noiseTexture:{type:"t",value:null},time:{type:"f",value:this.room.msRunner},pointScale:{type:"f",value:this.pscale},intensity:{type:"f",value:1},rate:{type:"f",value:5.5}},a=this.room.pxlFile.pxlShaderBuilder(r,Al(),Pl());a.side=Je,a.transparent=!0,a.uniforms.atlasTexture.value=this.room.pxlUtils.loadTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}),a.uniforms.noiseTexture.value=this.room.softNoiseTexture,a.depthTest=!0,a.depthWrite=!1,this.room.materialList[this.name]=a,super.addToScene(e,t,a,i,s)}};var $n=class extends Zi{constructor(e=null,t="floatingDust"){super(e,t),this.name=t,this.room=e}build(e=1e3,t=7,i=120,s=[0,0,0],r=[0,1],a=null,o=!0){a||(a=[...super.dupeArray([0,0],4),...super.dupeArray([.25,0],4),...super.dupeArray([.5,0],2),...super.dupeArray([.5,.25],2),...super.dupeArray([.5,.5],2),...super.dupeArray([.5,.75],2),...super.dupeArray([.75,.75],4),...super.dupeArray([.75,.25],3),...super.dupeArray([.75,.25],3)]);let l=super.findLightPositions();r=new G(r[0],r[1]),s=new M(s[0],s[1],s[2]);let h={atlasTexture:{type:"t",value:null},noiseTexture:{type:"t",value:null},time:{type:"f",value:this.room.msRunner},pointScale:{type:"f",value:this.pscale},intensity:{type:"f",value:1},rate:{type:"f",value:.035},positionOffset:{type:"v",value:s},windDir:{type:"v",value:r},lightPos:{value:l}},c=this.room.pxlFile.pxlShaderBuilder(h,Fr(l.length,i),Br());c.side=Je,c.transparent=!0,this.isInternalTexture?c.uniforms.atlasTexture.value=this.room.pxlEnv.getAssetTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}):c.uniforms.atlasTexture.value=this.room.pxlUtils.loadTexture(this.atlasPath,4,{magFilter:rt,minFilter:$t}),c.uniforms.noiseTexture.value=this.room.softNoiseTexture,c.depthTest=!0,c.depthWrite=!1,this.room.materialList[this.name]=c,super.addToScene(e,t,c,4,a,o)}};var o0={pxlParticles:{BillowSmoke:Qn,EmberWisps:Jn,FloatingDust:$n}};var eu=class{constructor(e="CampfireEnvironment",t=null,i=null,s=null,r=null,a=null){this.roomName=e,this.pxlFile=null,this.pxlUtils=null,this.pxlAnim=null,this.pxlColliders=null,this.pxlDevice=null,this.pxlEnv=null,this.booted=!1,this.initScene=!0,this.active=!0,this.assetPath=t+"Assets/",this.mobile=!1,this.sceneFile=this.assetPath+"CampfireEnvironment.fbx",this.animFile=this.assetPath+"Campfire_RabbitDruidA_anim.fbx",this.animClips={},this.animMixer=null,this.spiralizerUniforms={},this.materialList={},this.camInitPos=null,this.camInitLookAt=null,this.camThumbPos=new M(0,0,-30),this.camThumbLookAt=new M(0,35,-1e3),this.cameraBooted=!1,this.cameraPrevPos=new M(0,0,0),this.cameraAimTarget=new Ze(0,0,0),this.camHoldWarpPos=!0,this.camLocation={},this.pxlCamFOV={PC:60,MOBILE:80},this.pxlCamZoom=1,this.pxlCamAspect=1,this.pxlCamNearClipping=5,this.pxlCamFarClipping=1e4,this.fogColor=new he(.01,.02,.05),this.fogExp=7e-4,this.fog=new ws(this.fogColor,this.fogExp),this.userAvatarGroup=new bt,this.packedTextureMaterial=null,this.coreTextureMaterial=null,this.projectedMaterial=null,this.voidMaterial=null,this.holoMaterial=null,this.aspectRatio=null,this.flag=null,this.initPos=[],this.finalPos=[],this.midPos=new M(0,30,-50),this.perspectiveInstances=160,this.startTime=0,this.runTime=new G(0,0),this.msRunner=i,this.camera=s,this.autoCamPaths={},this.scene=r,this.lightList={},this.geoList={},this.glassGroup=null,this.glassList=[],this.particleList={},this.enableRaycast=!1,this.hasHoverables=!1,this.hoverableList=[],this.hoverableObj=null,this.hasClickables=!1,this.clickableList=[],this.clickableObj=null,this.collidersExist=!1,this.colliderActive=!1,this.colliderHashMap={},this.colliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderActive=!1,this.antiColliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderTopActive=!1,this.antiColliderTopList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.hasPortalExit=!1,this.portalList={},this.hasRoomWarp=!1,this.roomWarp=[],this.warpPortalTexture=null,this.warpZoneRenderTarget=null,this.worldPosMaterial=null,this.worldPosRenderTarget=null,this.spiralizerPass=null,this.bloomPreState=!1,this.cloud3dTexture=null,this.smoothNoiseTexture=null,this.hasHelpers=!1,this.helperObjects={},this.currentShader=null}setDependencies(e){this.pxlEnv=e,this.pxlFile=e.pxlFile,this.pxlAnim=e.pxlAnim,this.pxlUtils=e.pxlUtils,this.pxlDevice=e.pxlDevice,this.pxlColliders=e.pxlColliders,this.mobile=e.mobile}init(){this.scene.fog=this.fog,this.scene.background=this.fogColor,this.cloud3dTexture=this.pxlEnv.cloud3dTexture,this.cloud3dTexture.wrapS=_t,this.cloud3dTexture.wrapT=_t,this.smoothNoiseTexture=this.pxlEnv.softNoiseTexture,this.smoothNoiseTexture.wrapS=_t,this.smoothNoiseTexture.wrapT=_t}start(){this.booted&&this.resetCamera()}step(){this.runTime.x=this.msRunner.x,this.stepColliderHelper(ge.FLOOR)}stop(){}resize(e,t){}setUserHeight(e=1){this.pxlEnv.pxlCamera.setUserHeight(e,this.roomName)}resetCamera(){this.pxlEnv.pxlCamera.setTransform(this.camInitPos,this.camInitLookAt)}prepPortalRender(){this.geoList.intro.visible=!1,this.geoList.MainRoomWarp.visible=!1}cleanupPortalRender(){this.geoList.intro.visible=!0,this.geoList.MainRoomWarp.visible=!0}setPortalTexture(e,t=null){this.geoList.MainRoomWarp.material.map=e}applyRoomPass(e=null){}getName(){return this.roomName}getArtistInfo(){return null}setFog(e){}getShaderList(){let e={};return Object.keys(this.materialList).forEach(i=>{e[i]=i}),e}getCurrentShader(){return this.currentShader||Object.keys(this.materialList)[0]}readShader(e="",t=null){return this.currentShader!=null&&this.materialList[this.currentShader].hasOwnProperty("uniforms")&&(t||(t=new M),this.materialList[this.currentShader].uniforms.sliders.value=t,this.materialList[this.currentShader].needsUpdate=!0),this.currentShader=e,this.materialList[this.currentShader]}setShader(e,t,i){this.emitterList&&this.emitterList[this.currentShader]&&this.emitterList[this.currentShader].Particles.length>0&&this.emitterList[this.currentShader].Particles.forEach(s=>{let r=s.material;r.vertexShader=t,r.fragmentShader=i,r.needsUpdate=!0}),this.materialList[this.currentShader].vertexShader=t,this.materialList[this.currentShader].fragmentShader=i,this.materialList[this.currentShader].needsUpdate=!0}castRay(e,t){if(!this.enableRaycast)return;if(!e&&!this.hasHoverables||e&&!this.hasClickables){this.mouseRayHits=[];return}let i=[];!e&&this.hasHoverables?i=this.hoverableList:e&&this.hasClickables&&(i=this.clickableList);var s=[];if(i.length>0){let r=new G(this.pxlDevice.mouseX/this.pxlDevice.sW*2-1,-this.pxlDevice.mouseY/this.pxlDevice.sH*2+1);this.pxlEnv.pxlCamera.objRaycast.setFromCamera(r,this.pxlEnv.pxlCamera.camera),s=this.pxlEnv.pxlCamera.objRaycast.intersectObjects(i)}this.mouseRayHits=s}hitColliders(e=[],t=ge.FLOOR){e.length!=0}hasColliders(){return this.collidersExist}hasColliderType(e=ge.FLOOR){let t=!1;if(!this.hasColliders())return t;switch(e){case ge.FLOOR:t=this.colliderActive;break;case ge.WALL:t=this.antiColliderActive;break;case ge.WALL_TOP:t=this.antiColliderTopActive;break;case ge.CEILING:break;case ge.PORTAL_WARP:t=this.hasPortalExit;break;case ge.ROOM_WARP:t=this.hasRoomWarp;break;case ge.ITEM:break;case ge.SCRIPTED:break;case ge.HOVERABLE:t=this.hasHoverables;break;case ge.CLICKABLE:t=this.hasClickables;break}return t}getColliders(e=ge.FLOOR){let t=[];if(!this.hasColliders())return t;if(e==ge.WALL&&!this.antiColliderActive)return t=this.antiColliderList,t;if(e==ge.WALL_TOP&&!this.antiColliderTopActive)return t=this.antiColliderTopList,t;if(e==ge.PORTAL_WARP&&!this.hasPortalExit)return t=this.portalList,t;if(e==ge.ROOM_WARP&&!this.hasRoomWarp)return t=this.roomWarp,t;if(e==ge.HOVERABLE&&!this.hasHoverables)return t=this.hoverableList,t;if(e==ge.CLICKABLE&&!this.hasClickables)return t=this.clickableList,t;switch(e){case ge.FLOOR:t=[...this.colliderList.noAxis,...this.colliderList[11],...this.colliderList["01"],...this.colliderList[10],...this.colliderList["00"]];break;case ge.WALL:t=[...this.colliderList.noAxis,...this.colliderList[11],...this.colliderList["01"],...this.colliderList[10],...this.colliderList["00"]];break;case ge.WALL_TOP:t=[...this.antiColliderTopList.noAxis,...this.antiColliderTopList[11],...this.antiColliderTopList["01"],...this.antiColliderTopList[10],...this.antiColliderTopList["00"]];break;case ge.CEILING:break;case ge.PORTAL_WARP:t=this.portalList;break;case ge.ROOM_WARP:t=this.roomWarp;break;case ge.ITEM:break;case ge.SCRIPTED:break;default:break}return t}addColliderHelper(e=ge.FLOOR){this.hasColliders()&&(this.helperObjects.hasOwnProperty("colliders")?this.helperObjects.colliders.hasOwnProperty(e)||(this.helperObjects.colliders[e]=null):(this.helperObjects.colliders={},this.helperObjects.colliders[e]=null),this.helperObjects.colliders[e]=this.pxlColliders.buildHelper(this,e),this.helperObjects.colliders[e]&&(this.scene.add(this.helperObjects.colliders[e]),this.hasHelpers=!0))}stepColliderHelper(e=ge.FLOOR){!this.hasHelpers||!this.hasColliders()||!this.helperObjects.hasOwnProperty("colliders")||!this.helperObjects.colliders.hasOwnProperty(e)||this.helperObjects.colliders[e].stepHelper(this,e)}toCameraPos(e){if(this.cameraBooted&&this.camLocation.hasOwnProperty(e)){let t=this.mobile?"PositionMobile":"Position",i=this.mobile?"LookAtMobile":"LookAt",s=this.camLocation[e][t],r=this.camLocation[e][i];r||(r=new M(0,0,1),r.addVectors(s,r)),this.pxlEnv.pxlCamera.setTransform(this.camLocation[e][t],this.camLocation[e][i]),this.setUserHeight(this.camInitPos.y)}}fbxPostLoad(){this.toCameraPos("Default");let e=0;if(this.lightList.hasOwnProperty("PointLight")&&(e=this.lightList.PointLight.length),this.geoList.hasOwnProperty("GlowPass")&&this.geoList.GlowPass.length>0&&this.geoList.GlowPass.forEach(r=>{r.layers.set(this.pxlEnv.renderLayerEnum.GLOW)}),this.geoList.Sky_EqRect_Mesh){let r=this.geoList.Sky_EqRect_Mesh.material;r.uniforms&&r.uniforms.envDiffuse&&(r.uniforms.envDiffuse.value=this.scene.renderTarget.depthTexture)}var t=new zi(3158064);this.scene.add(t);let i=Object.keys(this.lightList);if(i.length>0&&i.forEach(r=>{this.lightList[r].forEach(a=>{r=="DirectionalLight"?a.castShadow=!1:r=="PointLight"&&(a.shadow.radius=5,a.shadow.receiveShadow=!0,a.shadow.mapSize.width=512,a.shadow.mapSize.height=512,a.shadow.camera.near=.5,a.shadow.camera.far=35,a.shadow.bias=.025,a.shadow.radius=5)})}),this.shaderGeoList)for(let r in this.shaderGeoList){let a=this.shaderGeoList[r];if(a.userData&&a.userData.Shader=="pxlPrincipled"){let o=ji.merge([oe.common,oe.lights,oe.shadowmap,{dTexture:{type:"t",value:null},noiseTexture:{type:"t",value:null},detailTexture:{type:"t",value:null},cdMult:{type:"f",value:1},fogColor:{type:"c",value:this.scene.fog.color}}]);var s={};s.USE_MAP="";let l={},h=!0,c=a.userData.castShadow==!0||a.userData.receiveShadow==!0,u=!0,d=!1;a.material.map||(d=a.material.color.clone()),a.userData.ShaderParms&&a.userData.ShaderParms!=""&&(l=JSON.parse(a.userData.ShaderParms));let m=this.pxlFile.pxlShaderBuilder(o,Tl(c),El(l,d,u,h,c,e),s);m.transparent=!1,m.lights=!0,d||(m.uniforms.dTexture.value=a.material.map),m.uniforms.noiseTexture.value=this.cloud3dTexture,m.uniforms.detailTexture.value=this.pxlEnv.detailNoiseTexture,a.material=m,this.materialList[a.name]=m}}}animPostLoad(e,t){if(this.pxlAnim.hasClip(e,this.animInitCycle)){let i=this.pxlAnim.getMixer(e);this.animMixer=i,this.pxlAnim.playClip(e,this.animInitCycle)}else this.animInitCycle=fallback,this.log("No animation cycle '"+this.animInitCycle+"' found; Using '"+fallback+"' instead")}build(){}onMessage(e,t){switch(console.log("Room : "+this.roomName+" - Message Received: "+e),console.log("Message : "+t),e=e.toLowerCase(),e){case"roomwarp":this.roomWarp=t;break;default:case"roommessage":console.log("-- Message Type Not Recognized -- "),console.log("Room : "+this.roomName),console.log("Message Received: "+e),console.log("Message : "+t);break}}};var HM="0.0.18",Qm="pxlNav-coreCanvas";var Jm,$m,tu=window.innerWidth,iu=window.innerHeight,ef=class{constructor(e,t,i,s){this._active=!1;let r="./pxlRooms";e.hasOwnProperty("pxlRoomRoot")&&(r=e.pxlRoomRoot),this.options={loadList:["Cloud3d","SoftNoise","SmoothNoise","WarpAnimTexture"]},this.options=Object.assign(this.options,e);let a=Object.keys(this.options);Object.keys(Dr).forEach(l=>{a.includes(l)||(this.options[l]=Dr[l])}),this.verbose=this.options.verbose,this.projectTitle=t,this.startingRoom=i,s.includes(i)||s.push(i),this.roomBootList=s,this.callbacks={},this.uriHashParms=this.findHashParms(),this.mobile=this.isMobile(),this.autoCam=this.getHashParm("autoCam",!1),this.loadPercent=0,this.folderDict={assetRoot:"assets/",guiRoot:"assets/GUI/",roomRoot:"assets/rooms/",vidRoot:"assets/screenContent/"},this.validEvents={booted:"Emitted after the engine has fully booted and is ready to be addressed.",shaderEditorVis:"Returns a [bool]; Emitted when the shader editor is toggled on or off.","roomChange-Start":"Emitted when the room change transition begins.","roomChange-Middle":"Emitted when the room change process occurs mid transition.","roomChange-End":"Returns a [bool]; Emitted when the room change transition ends.",fromRoom:"Returns a custom object; Emitted from your Room code you choose to emit during run time.","device-keydown":"Returns an [int]; The just pressed key.","device-keyup":"Returns an [int]; The just released key.","device-resize":"Returns an [{height:#,width:#}]; Height Width object of the new window size.","camera-move":"Returns a {'pos':vec3(),'dist':float}; Emitted when the camera moves.","camera-rotate":"Returns a [quaternion]; Emitted when the camera rotates.","camera-jump":"Returns a [bool]; Emitted when the camera jumps to a new position.","camera-fall":"Returns a [bool]; Emitted when the camera starts to free-fall / gravity.","camera-landed":"Returns a [bool]; Emitted when the camera lands from a jump / fall.","camera-collision":"Returns a [bool]; Emitted when the camera collides with an object.",pxlNavEventNameHere:"Never emitted; You did some copy'pasta.","":"** NOTE : callbacks get an event object shaped -  **","":"** { 'type' : *eventName*, 'value' : *data* } **","":"",help:"Hello! I'm here to help you!",pingPong:"Send 'ping', Get 'pong'! - pxlNav.trigger('ping');"},this.validEventsKeys=Object.keys(this.validEvents),this.loadEnvAssetFile=!0,this.pxlTimer=new Bt.Timer,this.pxlShaders=Zm,this.pxlCookie=new Bt.CookieManager(t,"/"),this.pxlCookie.hasCookie("forceMobile")&&(this.mobile=pxlCookie.parseCookie("forceMobile")),this.pxlQuality=new Bt.QualityController(this.verbose,this.mobile,this.uriHashParms),this.pxlUtils=new Bt.Utils(this.folderDict.assetRoot,this.mobile),this.pxlFile=new Bt.FileIO(this.folderDict),this.pxlExtensions=new Bt.Extensions,this.pxlAudio=new Bt.Audio(this.pxlTimer),this.pxlAutoCam=new Bt.AutoCamera(this.autoCam,this.mobile),this.pxlAutoCam.active=!1,this.pxlUser=new Bt.User,this.pxlEnv=new Bt.Environment(this.options,this.startingRoom,this.mobile),this.pxlDevice=new Bt.Device(t,Qm,this.mobile,this.autoCam),this.pxlColliders=new Bt.Colliders(this.verbose,this.options.collisionScale.gridSize,this.options.collisionScale.gridReference),this.pxlCamera=new Bt.Camera,this.options.staticCamera&&this.pxlCamera.toggleMovement(!1),this.pxlAnim=new Bt.Animation(this.folderDict.assetRoot,this.pxlTimer),this.pxlGuiDraws=new Bt.GUI(this.verbose,t,this.folderDict.assetRoot,this.folderDict.guiRoot),this.pxlQuality.setDependencies(this),this.pxlUtils.setDependencies(this),this.pxlFile.setDependencies(this),this.pxlAudio.setDependencies(this),this.pxlAutoCam.setDependencies(this),this.pxlEnv.setDependencies(this),this.pxlAnim.setDependencies(this),this.pxlDevice.setDependencies(this),this.pxlColliders.setDependencies(this),this.pxlCamera.setDependencies(this),this.pxlGuiDraws.setDependencies(this),this.pxlGuiDraws.prepLoader(),this.options.hasOwnProperty("loaderPhrases")||(this.options.loaderPhrases=["...loading the pixels..."]),this.pxlGuiDraws.setLoaderPhrases(this.options.loaderPhrases),this.pxlQuality.init()}set active(e=null){e==null&&(e=!this.pxlTimer.active),e==!0?(this.pxlTimer.play(),this.step(!1)):this.pxlTimer.stop()}get active(){return this.pxlTimer.active}start(){this.active=!0}stop(){this.active=!1}init(){this.pxlTimer.init(),this.pxlEnv.boot(),this.pxlQuality.startBenchmark(),this.buildGui().then(()=>{this.tickLoader(),this.bootEnvironment()}).then(()=>{this.tickLoader(),this.bootEngine()}).then(()=>{this.tickLoader(),this.pxlEnv.buildComposers(),this.cameraRunAnimatorMobile(this),this.pxlGuiDraws.stepLoader("postBoot"),this.pxlEnv.mapRender(),this.pxlDevice.setCursor("grab")}).catch(e=>{this.verbose>wt.VERBOSE_LEVEL.NONE&&(console.error("Error in pxlNavCore.init(); Load level - ",e),console.error(e))}).finally(()=>{this.verbose>wt.VERBOSE_LEVEL.ERROR&&(console.log("'pxlNavCore' Room Build Promise-Chain Completed; ",this.loadPercent),console.log("-- Starting pxlNav in Room `"+this.pxlEnv.bootRoom+"`")),this.start()})}buildGui(){return new Promise((e,t)=>{this.pxlGuiDraws.booted(),this.pxlGuiDraws.pxlNavCanvas=document.getElementById(Qm),Jm=window.innerWidth*this.pxlQuality.screenResPerc,this.pxlGuiDraws.pxlNavCanvas.width=window.innerWidth,$m=window.innerHeight*this.pxlQuality.screenResPerc,this.pxlGuiDraws.pxlNavCanvas.height=window.innerHeight,this.pxlDevice.canCursorLock&&(this.pxlGuiDraws.pxlNavCanvas.requestPointerLock=this.pxlGuiDraws.pxlNavCanvas.requestPointerLock||this.pxlGuiDraws.pxlNavCanvas.mozRequestPointerLock||this.pxlGuiDraws.pxlNavCanvas.webkitRequestPointerLock,document.requestPointerLock=this.pxlGuiDraws.pxlNavCanvas.exitPointerLock||this.pxlGuiDraws.pxlNavCanvas.mozExitPointerLock||this.pxlGuiDraws.pxlNavCanvas.webkitExitPointerLock),this.pxlGuiDraws.mapPrepPrompts(),e(!0)})}isMobile(){var e=!1;return e=/\b(BlackBerry|webOS|iPhone|IEMobile|Android|Windows Phone|iPad|iPod)\b/i.test(navigator.userAgent),e=this.getHashParm("m",e),e}findHashParms(){var e={},t=window.location.hash;if(t.length>1){t=t.substring(1);for(var i=t.split("&"),s=0;s<i.length;s++){var r=i[s].split("=");e[r[0]]=r[1]}}return e}getHashParm(e,t){return Object.keys(this.uriHashParms).includes(e)?this.uriHashParms[e]:t}tickLoader(){this.loadPercent+=1}bootEngine(){return new Promise((e,t)=>{let i=[];for(let s=0;s<this.roomBootList.length;++s)i.push(this.pxlEnv.loadRoom(this.roomBootList[s]));Promise.all(i).then(()=>{e(!0)})})}bootEnvironment(){return new Promise((e,t)=>{this.pxlEnv.engine=new el({canvas:this.pxlGuiDraws.pxlNavCanvas,powerPreference:"low-power",alpha:!0,antialias:!1,sortObjects:!0,depth:!0});var i={format:ut,antialias:!1,sortObjects:!0,alpha:!0,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?zt:Ut};this.pxlEnv.engine.autoClear=!0,Ve.enabled=!1,this.pxlEnv.engine.outputColorSpace=Pt,this.pxlEnv.engine.debug.checkShaderErrors=!1,this.pxlEnv.engine.debug.checkShaderErrors=!0;let s=0,r="#000000";this.pxlEnv.engine.setClearColor(this.pxlEnv.fogColor,0),this.pxlEnv.engine.setSize(Jm/this.pxlQuality.screenResPerc,$m/this.pxlQuality.screenResPerc),this.pxlEnv.engine.setPixelRatio(1),this.options.shadowMapBiasing==wt.SHADOW_MAP.OFF?this.pxlEnv.engine.shadowMap.enabled=!1:(this.pxlEnv.engine.shadowMap.enabled=!0,this.pxlEnv.engine.shadowMap.type=Co),this.pxlEnv.scene=new Cs,this.pxlEnv.scene.fog=this.pxlEnv.fog,this.pxlEnv.scene.background=new he(r),this.pxlEnv.scene.renderTarget=new ct(tu*this.pxlQuality.screenResPerc,iu*this.pxlQuality.screenResPerc,i),this.pxlEnv.scene.renderTarget.texture.format=ut,this.pxlEnv.scene.renderTarget.texture.minFilter=Qe,this.pxlEnv.scene.renderTarget.texture.magFilter=Qe,this.pxlEnv.scene.renderTarget.texture.generateMipmaps=!1,this.pxlEnv.scene.renderTarget.depthBuffer=!0,this.pxlEnv.scene.renderTarget.depthTexture=new Ni,this.pxlEnv.scene.renderTarget.depthTexture.format=Zt,this.pxlEnv.scene.renderTarget.depthTexture.type=wi,this.pxlEnv.scene.renderWorldPos=new ct(tu*this.pxlQuality.screenResPerc,iu*this.pxlQuality.screenResPerc,i),this.pxlEnv.scene.renderWorldPos.texture.format=ut,this.pxlEnv.scene.renderWorldPos.texture.minFilter=rt,this.pxlEnv.scene.renderWorldPos.texture.magFilter=rt,this.pxlEnv.scene.renderWorldPos.texture.generateMipmaps=!1,i.alpha=!0,this.pxlEnv.scene.renderGlowTarget=new ct(parseInt(tu*this.pxlQuality.screenResPerc),parseInt(iu*this.pxlQuality.screenResPerc),i),this.pxlEnv.scene.renderGlowTarget.texture.format=ut,this.pxlEnv.scene.renderGlowTarget.texture.generateMipmaps=!1;let a=this.pxlEnv.pxlCamFOV[this.pxlDevice.mobile?"MOBILE":"PC"];if(this.pxlCamera.camera=new yt(a,1,this.pxlEnv.camNear,this.pxlEnv.camFar),this.pxlAutoCam.camera=this.pxlCamera.camera,this.pxlCamera.cameraAimTarget=new Ze,this.pxlEnv.scene.add(this.pxlCamera.cameraAimTarget),this.pxlCamera.camera.target=this.pxlCamera.cameraAimTarget,this.pxlCamera.camera.layers.enable(1),this.pxlCamera.camera.layers.enable(2),this.pxlEnv.scene.add(this.pxlEnv.userAvatarGroup),this.options.loadList.includes("Cloud3d")&&(this.pxlEnv.cloud3dTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_Cloud3d.jpg",null,{encoding:Qt}),this.pxlEnv.cloud3dTexture.wrapS=_t,this.pxlEnv.cloud3dTexture.wrapT=_t),this.options.loadList.includes("SoftNoise")&&(this.pxlEnv.softNoiseTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_Soft3d.jpg"),this.pxlEnv.softNoiseTexture.wrapS=_t,this.pxlEnv.softNoiseTexture.wrapT=_t),this.options.loadList.includes("SmoothNoise")&&(this.pxlEnv.detailNoiseTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_UniformSmooth.jpg"),this.pxlEnv.detailNoiseTexture.wrapS=_t,this.pxlEnv.detailNoiseTexture.wrapT=_t),this.options.loadList.includes("ChromaticAberration")){let m=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"uv_ChromaticAberration.png");m.minFilter=Qe,m.magFilter=Qe,this.pxlEnv.chroAberUVTexture=m}this.options.loadList.includes("WarpAnimTexture")&&(this.pxlEnv.blockAnimTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"uv_blockPortalWarp.jpg"),this.pxlEnv.blockAnimTexture.minFilter=Qe,this.pxlEnv.blockAnimTexture.magFilter=Qe),this.options.loadList.includes("MathFuncs")&&(this.pxlEnv.mathFuncsTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"MathFuncs.jpg"),this.pxlEnv.mathFuncsTexture.minFilter=Qe,this.pxlEnv.mathFuncsTexture.magFilter=Qe);var o,l,h=(m=null)=>{var f={t:[0,0,0],r:[0,0,0],s:[1,1,1]};return m!=null&&(f[m[0]]=m[1]),f};l=h();let c="";if(this.mobile&&(c="_mobile"),this.loadEnvAssetFile){let m=this.folderDict.assetRoot+"EnvironmentAssets.fbx";this.pxlFile.loadSceneFBX(m,o,l,this.verbose,"EnvironmentAssets",[this.pxlEnv.scene])}this.options.shadowMapBiasing==wt.SHADOW_MAP.OFF?this.pxlEnv.engine.shadowMap.enabled=!1:(this.pxlEnv.engine.shadowMap.enabled=!0,this.options.shadowMapBiasing==wt.SHADOW_MAP.BASIC||this.mobile?this.pxlEnv.engine.shadowMap.type=Co:this.options.shadowMapBiasing==wt.SHADOW_MAP.SOFT&&(this.pxlEnv.engine.shadowMap.type=To));var u=new zi(16777215,.05);this.pxlEnv.lightList.push(u),this.pxlEnv.scene.add(u);var d=new Us(16777215,.1);d.position.set(1e3,550,1200),this.pxlEnv.lightList.push(d),this.pxlEnv.scene.add(d),e(!0)})}cameraRunAnimatorMobile(e){let t=!1,i=Object.keys(e.pxlEnv.geoLoadList);for(let s=0;s<i.length&&(t=e.pxlEnv.geoLoadList[i[s]]==0,t=t&&!e.pxlEnv.roomSceneList[s]?.booted,!t);++s);t?setTimeout(()=>{e.cameraRunAnimatorMobile(e)},300):e.initRoomList(e)}initRoomList(e){e.pxlGuiDraws.stepLoader("camAnim"),e.pxlCamera.setTransform(e.pxlEnv.camInitPos,e.pxlEnv.camInitLookAt),e.pxlCamera.updateCamera(),e.pxlEnv.buildRoomEnvironments(),e.monitorRoomLoad(e)}monitorRoomLoad(e,t=0){let i=!1,s=Object.keys(e.pxlEnv.geoLoadList);for(let r=0;r<s.length&&(i=e.pxlEnv.geoLoadList[s[r]]==0,i=i&&!e.pxlEnv.roomSceneList[r]?.booted,!i);++r);i?setTimeout(()=>{e.monitorRoomLoad(e)},300):(e.pxlQuality.mapAutoQualityUpdate(1,!0),e.runPrepDrawScenes(0,!0,[]))}runPrepDrawScenes(e=0,t=!0,i=[]){if(e++,i.length>0){if(t){t=!1;let s=i[i.length-1];this.pxlCamera.warpToRoom(s)}if(this.pxlCamera.colliderPrevObjHit=null,this.pxlEnv.mapRender(!1),e%10==0){let s=i.pop();t=!0,this.pxlGuiDraws.stepLoader(s)}requestAnimationFrame(()=>{this.runPrepDrawScenes(e,t,i)})}else this.pxlGuiDraws.stepLoader("Post Room Prep"),this.pxlNavPrepSettings()}pxlNavPrepSettings(){this.pxlCamera.warpToRoom(this.pxlEnv.bootRoom,!0),this.pxlQuality.endBenchmark(),this.pxlGuiDraws.stepLoader("Nav Settings"),this.startPxlNav()}startPxlNav(){this.pxlTimer.init(),this.pxlTimer.play(),this.pxlGuiDraws.applyCookies(),this.pxlGuiDraws.pxlNavCanvas&&this.pxlGuiDraws.pxlNavCanvas.focus();let e=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom];e.active=!0,e.startTime=this.pxlTimer.msRunner.x,this.pxlEnv.roomPostGuiCalls.forEach(i=>{i.postGuiEvent()}),this.pxlEnv.roomPostGuiCalls=[],this.pxlAutoCam.enabled&&this.pxlGuiDraws.guiToggleVisibility(!1),this.pxlAutoCam.init(),this.pxlDevice.resizeRenderResolution(),this.pxlEnv.mapRender(),this.pxlQuality.setDependentSettings(),this.pxlGuiDraws.stepLoader("Starting...");let t=this;setTimeout(()=>{t.pxlEnv.postBoot(),t.pxlGuiDraws.mapPrompt&&t.pxlGuiDraws.promptFader(t.pxlGuiDraws.mapPrompt,!1,null,!0),t.pxlGuiDraws.mapPromptBG&&t.pxlGuiDraws.promptFader(t.pxlGuiDraws.mapPromptBG,!1,null,!1),t.emit("booted",!0)},200)}step(e=!1){this.pxlTimer.active&&(this.pxlTimer.step(),e&&requestAnimationFrame(()=>{this.step()}))}bootTimer(){this.pxlTimer.init(),this.pxlTimer.play()}stopTimer(){this.pxlTimer.stop()}pauseTimer(){this.pxlTimer.pause()}prepPromptFader(e,t=!1){let i=e;typeof i=="string"&&(i=document.getElementById(i),!i)||(i.classList.add("fader"),i.classList.add(t?"visOn":"visOff"),i.style.display=t?"inline-block":"none")}promptFader(e,t,i=null,s=!1){typeof e=="string"&&(e=document.getElementById(e),!e)||(e.classList.value.indexOf("fader")<0&&e.classList.add("fader"),t?(e.style.display="inline-block",setTimeout(()=>{e.classList.contains("visOff")&&(e.classList.remove("visOff"),e.classList.add("visOn"),i!=null&&(e.setAttribute("fadeOut",clockTime+i*1e3),fadeOutList.push(e)))},50)):(e.classList.remove("visOn"),e.classList.add("visOff"),s?["webkitTransitionEnd","otransitionend","oTransitionEnd","msTransitionEnd","transitionend"].forEach(a=>{e.addEventListener(a,()=>{let o=e.parentNode;o&&o.removeChild(e)})}):setTimeout(()=>{e.classList.contains("visOff")&&(e.style.display="none")},1e3)))}addRooms(e){for(let t=0;t<e.length;++t)this.pxlEnv.roomNameList.includes(e[t])||this.booted||this.roomBootList.push(e[t])}setBootRoom(e,t){console.log(e,t),this.pxlEnv.bootRoom=e,this.pxlEnv.bootLocation=t}setLoaderPhrases(e){this.pxlGuiDraws.setLoaderPhrases(e)}initExtension(e,t,i){this.pxlExtensions.init(e,t,i)}startExtension(e,t,i){this.pxlExtensions.start(e,t,i)}stopExtension(e,t,i){this.pxlExtensions.stop(e,t,i)}extensionStatus(e){return this.pxlExtensions.status(e)}trigger(e,t=null,i=null){switch(e=e.toLowerCase(),e){case"warptoroom":this.pxlCamera.warpToRoom(t,!0,i);break;case"camera":let s=t.toLowerCase();s=="roam"?this.pxlCamera.toggleMovement(!0):s=="static"&&this.pxlCamera.toggleMovement(!1);break;case"ping":this.emit("pingPong","pong");break;case"roommessage":let r=i.type,a=i.value;t==null&&(t=this.pxlEnv.currentRoom),this.pxlEnv.sendRoomMessage(t,r,a);default:break}}subscribe(e,t){let i=!1;if(this.validEventsKeys.includes(e))if(e=="test")console.log("Test Event : `pxlNav.subscribe( 'test', ... )` was used; subscription list -");else if(e=="pxlNavEventNameHere"||e=="help")e=="pxlNavEventNameHere"?console.warn("Warning : `pxlNav.subscribe( 'pxlNavEventNameHere', ... )` was used; need some help?"):e=="help"&&console.log("Help Requested : `pxlNav.subscribe( 'help', ... )` was used; Subscription items--"),console.log("Valid Event Types : "),this.validEventsKeys.forEach(s=>{console.log("  - ",s," : ",this.validEvents[s])});else{let s=e.split("-");if(s[0]=="device")this.pxlDevice.subscribe(s[1],t);else if(s[0]=="camera"){let r=wt.CAMERA_EVENT.MOVE;switch(s[1]){case"move":r=wt.CAMERA_EVENT.MOVE;break;case"rotate":r=wt.CAMERA_EVENT.ROTATE;break;case"jump":r=wt.CAMERA_EVENT.JUMP;break;case"fall":r=wt.CAMERA_EVENT.FALL;break;case"landed":r=wt.CAMERA_EVENT.LANDED;break;case"collision":r=wt.CAMERA_EVENT.COLLISION;break;default:console.warn("Warning : `pxlNav.subscribe( 'camera-"+s[1]+"', ... )` was used; use 'help' for a list of valid events.");break}this.pxlCamera.subscribe(r,t)}else this.callbacks[e]=t}else console.warn("Warning : `pxlNav.subscribe( '"+e+"', ... )` was used; use 'help' for a list of valid events.")}emit(e,t,i=null){if(this.callbacks[e]){let s={type:e,value:t};i!==null&&(s.status=i),this.callbacks[e](s)}}};export{eu as RoomEnvironment,Bt as pxlBase,o0 as pxlEffects,wt as pxlEnums,ef as pxlNav,HM as pxlNavVersion,Dr as pxlOptions,Zm as pxlShaders};
/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.8.2
*/
