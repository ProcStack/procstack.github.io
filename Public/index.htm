<!--
// Frayed Fables - 2024
// By Kevin Edzenga
// Kevin@Frayed-Fables.com
//
// --
// 
// Thanks for viewing the source code for Unkempt Threads!
//   If you have any questions, feel free to reach out to me at the email above.
// If you are viewing this page through your browser,
//   You may view the source code on my GitHub page at:
//
-->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0">
  <meta name='theme-color' content='#000822'>
</head>
    
<!-- -- -- -- -->

<link type="text/css" rel="stylesheet" href="style/ProcStackStyle.css">
<link type="text/css" rel="stylesheet" href="style/pxlNav.css">

<!-- -- -- -- -->

<body>
	<div id="verbErrorConsole">
	</div>
    

    <div id="procStackGitParent" class="procStackGitParentStyle fader visOff">
        <div class="procStackGitParentStyle">
            <div class="menuBlock">
                <div class="menuParent">
                    <a href="#" alt="Link to Init...">Init.</a>
                    <span> </span>
                    <a href="#" alt="Some info on this git.io site's backbone">pxlNav</a>
                    <span> </span>
                    <a href="#" alt="Info on some of my repos I like">Repos</a>
                    <span> </span>
                    <a href="#" alt="Real world projects">Projects / Links</a>
                    <span> </span>
                    <a href="#" alt="Real world projects">About Me</a>
                    <span> </span>
                </div>
            </div>
            <div class="centerBodyParent">
                <div id="gitPageContent" class="centerBody">
                    <!-- -- -- -- -->
                    <div id="Init">
                        Ahoi there!  Ye be ProcStack, Trancor, or Kevin Edzenga, what ever you feel like calling me.
                        ProcStack is my coding work
                        Trancor is my visual graphics work
                        Kevin Edzenga is just .... I don't know which version of internet me is really me, but Kevin is just Me.
                    </div>
                    <!-- -- -- -- -->
                    <div id="pxlNav">
                    </div>
                    <!-- -- -- -- -->
                    <div id="Repos">
                    </div>
                    <!-- -- -- -- -->
                    <div id="ProjectsLinks">
                        Projects/Links-

[Metal-Asylum](http://Metal-Asylum.net)
  Best on desktop
    My main site
      Changing every couple years, never quite getting to a state of being “done,” yet always a shotgun blast of different dev work.
      Currently a real time first-person cabin in the woods, well, a forest with less trees than desired.
      This is using my javascript ‘pxlNav’ camera navigation and scene interpreter system for Three.js.
      Since it's pxlNav, and like this site, if you hit ’Y’ on your keyboard, the shader editor will pop up.  Here you can look through the openGL shader code of the different object’s materials in site.


[Pixelmancer](https://pxlmancer.com)
  A full drawing/painting app on desktop,
  A fun fidget toy on mobile.
[!TV Kid timelapse](https://pxlmancer.com/show/tvKid.gif)
    A multi year project to make a full fledge drawing site with layer support, brush types, vector tools, brush effects (cpu based pixel effects, this was pre-learning about opengl shaders or webgl),
  A mixing pallet you can blend colors together to use, then save the pallet to a number key,
  All of which can be saved to a pxlm file, to maintain your layers, settings, pallet swatches, and all!
[More on Imgur](https://imgur.com/gallery/8lSW1)
[!TV was king!](https://pxlmancer.com/show/tvKid.png)
[!Cat Tax of course!](https://pxlmancer.com/show/kitty.png)


[Neurous](https://neurous.net)
  *Might be more fun on phone*
    A few day project.
    Just a page you can play around with particles.  A random project to make a custom emitter and particle class structure in javascript.

[pxlCam](https://pxlmancer.com/gl/pxlCam)
  *Use on phone!!*
    A few day project.
    A custom photo filter site with interactive color and edge effects opengl shaders, using three.js for gpu access, and your multiple phone cameras in-browser.
    Tap the triple down arrow to change the filter.  Tap and drag left & right or up & down to change the current filter’s hue & saturation or edge detection size & brightness

Repos to Check Out-
[procPromo Minecraft Shader Pack](https://github.com/ProcStack/procPromo_ShaderPack)
A shader pack written for Minecraft, used through Optifine.
For the pack, I developed depth based smart texture bluring, in attempts to capture the Minecraft Key or Promo art used when new updates are released.

This included developing a edge detection system using depths & surface nornals saved through differed buffers, where the actual edge detection is performed on a final render pass.

Having also wrote a shadow distortion & bias system as well.  Having never written a shadow shader before, or the subsequent position projections from ever shader that would sample the shadow buffer, I wrote a simple radial distortion, distance based from the player.  However there were shadow scalping everywhere.
Circular shadow projections, in a cubic game based around 90 degree angles.
I then wrote a per-axis distortion system with biasing based on distance from camera.
This allowed for sharp crisp shadow edges on blocks, but also with the distance based biasing, solved a lot of depth based issues.
Allowing me to create a shadow with little to know peter panning, little scalping, edges on surfaces parallel to the suns directional rays, all at great distances from camera.

[PxlVisualizer](https://github.com/ProcStack/pxlVisualizer)
Trippy visuals, using OpelGL and C++ through OpenFrameWorks.
Originally written in Python for PyGame, decided it would be a fun project to learn C++ on.

[pxlTextGenerator](https://github.com/ProcStack/pxlTextGenerator)
Text to handwriting generator
Created to capture the personality of one of my characters, Diece; the very one who lives in the cabin of Metal-Asylum.net.
Letting them write the very words written in the tome perched upon the desk.
A segmenter, labeler, and scripting language was written to allow saving individual characters, variants, and written pages, with text effects like opacity, scale, and kearning.

Scan some writing, click the letters, adjust the spacing, type your page with those letters, and hit save!


The One’Offs-

[ShaderToy](https://www.shadertoy.com/user/trancor)
  Only 3 at the moment.
  An exploration into the Kuwahara Filter being used in a single pass smart blur & edge detection.
  A Ray Marching shader to learn about sdf math.
  And 0-1 blending & animation helper functions with animated nyans, rainbows, and stars!

[Dwitter](https://dwitter.net/u/trancor)
  JavaScript code golfing
  When all you get is 140 characters,
    Better make em count!
  

Socials-

[YouTube](https://www.youtube.com/@trancorwd)
[Instagram](https://instagram.com/trancor.diy)
[GitHub (you're there baby!)](https://github.com/ProcStack)
                    </div>
                    <!-- -- -- -- -->
                    <div id="AboutMe">
                    </div>
                    <!-- -- -- -- -->
                </div>
            </div>
            <div class="footerBarParent">
                <div class="footerBar">
                    <div class="leftFooter">
                        Blerble mcderble
                    </div>
                    <div>
                        <span class="centerFooter">
                            &copy; 2024
                        </span>
                        <span class="rightFooter">
                            <a href="#" alt="Contact Us">Contact Us</a>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <canvas id="pxlNav-coreCanvas" height='1' width='1' class="pxlNavCoreCanvasStyle" ></canvas>

    <script type="module" src="js/ProckStackGitio.js?v=2024-11-20"></script>


</body>
</html>
